{"version":3,"sources":["webpack:///bundle.83a688d.js","webpack:///webpack/bootstrap 16debb486fb1132e7adb","webpack:///./src/main.js","webpack:///./~/js-oop/js/Class.js","webpack:///./~/vuex/lib/index.js","webpack:///./~/brindille-resize/index.js","webpack:///./~/core-js/library/modules/$.core.js","webpack:///./~/dom-css/index.js","webpack:///./~/preloader/lib/LoaderBase.js","webpack:///./~/preloader/lib/util/UtilHTTP.js","webpack:///./src/api/projects.js","webpack:///./src/store/about.js","webpack:///./src/store/preloader.js","webpack:///./~/gl-mat4/identity.js","webpack:///./~/preloader/lib/FileMeta.js","webpack:///./~/preloader/lib/util/UtilArrayBuffer.js","webpack:///./~/preloader/lib/util/UtilPath.js","webpack:///./~/signals/dist/signals.js","webpack:///./~/to-camel-case/index.js","webpack:///./~/velocity-animate/velocity.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./~/add-px-to-style/index.js","webpack:///./~/an-array/index.js","webpack:///App.vue","webpack:///About.vue","webpack:///Preloader.vue","webpack:///Project.vue","webpack:///./src/core/routes.js","webpack:///./src/store/project.js","webpack:///./~/babel-runtime/core-js/object/keys.js","webpack:///./~/brindille-resize/~/component-emitter/index.js","webpack:///./~/core-js/library/fn/object/keys.js","webpack:///./~/core-js/library/modules/$.a-function.js","webpack:///./~/core-js/library/modules/$.ctx.js","webpack:///./~/core-js/library/modules/$.defined.js","webpack:///./~/core-js/library/modules/$.export.js","webpack:///./~/core-js/library/modules/$.fails.js","webpack:///./~/core-js/library/modules/$.global.js","webpack:///./~/core-js/library/modules/$.object-sap.js","webpack:///./~/core-js/library/modules/$.to-object.js","webpack:///./~/core-js/library/modules/es6.object.keys.js","webpack:///./~/css-mat4/index.js","webpack:///./~/css-mat4/lib/quat.js","webpack:///./~/debounce/index.js","webpack:///./~/debounce/~/date-now/index.js","webpack:///./~/dom-css-transform/index.js","webpack:///./~/dom-css-transform/lib/mat2d-stringify.js","webpack:///./~/dom-css-transform/lib/stringify.js","webpack:///./~/dom-css-transform/~/dom-css/index.js","webpack:///./~/dom-css-transform/~/prefix-style/index.js","webpack:///./~/gl-mat4/fromRotationTranslation.js","webpack:///./~/gl-mat4/multiply.js","webpack:///./~/gl-mat4/scale.js","webpack:///./~/js-oop/js/baseClass.js","webpack:///./~/mat4-css-stringify/index.js","webpack:///./~/prefix-style/index.js","webpack:///./~/preloader/index.js","webpack:///./~/preloader/lib/LoaderCache.js","webpack:///./~/preloader/lib/LoaderImage.js","webpack:///./~/preloader/lib/LoaderJSON.js","webpack:///./~/preloader/lib/LoaderText.js","webpack:///./~/preloader/lib/Preloader.js","webpack:///./~/to-no-case/index.js","webpack:///./~/to-space-case/index.js","webpack:///./src/App.vue?d818","webpack:///./src/display/sections/About.vue?08ef","webpack:///./src/display/sections/Preloader.vue?ac6d","webpack:///./src/display/sections/Project.vue?9c8c","webpack:///./src/App.vue","webpack:///./src/display/sections/About.vue","webpack:///./src/display/sections/Preloader.vue","webpack:///./src/display/sections/Project.vue","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./~/vuex/lib/middlewares/devtool.js","webpack:///./~/vuex/lib/middlewares/logger.js","webpack:///./~/vuex/lib/util.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_vueRouter","_vueRouter2","_vuex","_vuex2","_routes","use","router","history","saveScrollPosition","configRouter","App","extend","start","window","BaseClass","Class","descriptor","rVal","undefined","initialize","Array","prototype","splice","apply","arguments","this","parent","Extends","$$isConstructor","Object","create","$$parentConstructor","$$getters","$$setters","i","$$name","$$owner","get","set","defineProperty","length","compare","scope","caller","slice","parentFunction","callerName","isGetter","isSetter","getPrototypeOf","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","enumerable","configurable","writable","key","protoProps","staticProps","value","createLogger","Store","_util","_devtool","_devtool2","_logger","_logger2","Vue","_this","_ref","_ref$state","state","_ref$actions","actions","_ref$mutations","mutations","_ref$middlewares","middlewares","_ref$strict","strict","dispatch","_len","args","_key","_vm","data","_dispatching","_setupActions","_setupMutations","_setupMiddlewares","_setupMutationCheck","type","_len2","payload","_key2","mutation","_mutations","prevSnapshot","_prevSnapshot","snapshot","clonedPayload","isArray","forEach","concat","_needSnapshots","deepClone","_middlewares","onMutation","console","warn","_ref2","_this2","unwatch","$watch","a","Watcher","_watchers","constructor","Error","deep","sync","hot","_this3","_actions","mergeObjects","keys","name","createAction","some","log","initialSnapshot","onInit","_data","v","install","_Vue","Emitter","debounce","resize","debounceDelay","onGlobalResize","width","innerWidth","height","innerHeight","halfWidth","halfHeight","applyResize","debounceResize","applyResizeDebounce","emit","addListener","listener","noDebounce","on","removeListener","off","bind","addEventListener","core","version","__e","style","element","property","camel","cache","detect","addPxToStyle","each","properties","k","hasOwnProperty","cssProp","toCamelCase","result","prefix","float","reduce","prop","checkIfGoodValue","loadType","LoaderBase","typeText","typeArraybuffer","typeBlob","typeJSON","typeDocument","checkResponseTypeSupport","xhr","responseType","checkAndSetType","LoaderCache","FileMeta","Signal","UtilArrayBuffer","UtilHTTP","XHR","XMLHttpRequest","content","url","cacheID","loadTypeSet","fileMeta","onStart","onProgress","onComplete","onError","_onStateChange","_onProgress","canLoadUsingXHR","canLoadType","tempXHR","open","load","hasFile","_dispatchProgress","_dispatchComplete","onreadystatechange","onprogress","e","overrideMimeType","send","stopLoad","abort","_dispatchStart","_dispatchError","msg","ev","position","totalSize","total","readyState","status","waiting","getAllResponseHeaders","_parseContent","_addToCache","add","response","ArrayBuffer","stringToArrayBuffer","Blob","mime","getMimeFromURL","JSON","parse","FILE_MIME","gif","jpg","jpeg","png","svg","html","css","csv","xml","UtilPath","getMimeFromExtension","getFileExtension","toLowerCase","parseHeader","headerString","headerSplit","split","regex","keyValue","len","exec","experiment-webgl-pex","title","link","isOpen","close","OPEN","CLOSE","progress","isHidden","progressUpdate","hide","PROGRESS_UPDATE","pourcent","HIDE","identity","out","header","size","lastModified","httpHeader","setFromHTTPHeader","Date","arrayBufferToString","buffer","String","fromCharCode","Uint16Array","buf","string","bufView","strLen","charCodeAt","splitByBackSlash","fileData","getURLForDensity","densityModifiers","regexFileExtension","pixelRatio","devicePixelRatio","modifier","idx","replace","__WEBPACK_AMD_DEFINE_RESULT__","global","SignalBinding","signal","isOnce","listenerContext","priority","_listener","_isOnce","context","_signal","_priority","validateListener","fnName","_bindings","_prevParams","self","active","params","execute","paramsArr","handlerReturn","detach","isBound","remove","getListener","getSignal","_destroy","toString","VERSION","memorize","_shouldPropagate","_registerListener","binding","prevIndex","_indexOfListener","_addBinding","n","cur","has","addOnce","removeAll","getNumListeners","halt","bindings","forget","dispose","signals","toSpace","matches","letter","toUpperCase","__WEBPACK_AMD_DEFINE_FACTORY__","isArraylike","$","isWindow","nodeType","jQuery","selector","fn","init","class2type","isPlainObject","hasOwn","callback","node","expando","store","uuid","removeData","_","src","copyIsArray","copy","options","clone","queue","elem","$makeArray","arr","results","ret","first","second","j","push","q","dequeue","elems","shift","unshift","offset","box","getBoundingClientRect","top","left","pageYOffset","document","scrollTop","clientTop","pageXOffset","scrollLeft","clientLeft","offsetParent","parentOffset","test","nodeName","parseFloat","marginTop","marginLeft","borderTopWidth","borderLeftWidth","getTime","types","Velocity","Utilities","factory","compactSparseArray","array","index","sanitizeElements","elements","Type","isWrapped","isNode","Data","generateStep","steps","Math","round","generateBezier","mX1","mY1","mX2","mY2","A","aA1","aA2","B","C","calcBezier","aT","getSlope","newtonRaphsonIterate","aX","aGuessT","NEWTON_ITERATIONS","currentSlope","currentX","calcSampleValues","kSplineTableSize","mSampleValues","kSampleStepSize","binarySubdivide","aA","aB","currentT","abs","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","NEWTON_MIN_SLOPE","precompute","_precomputed","float32ArraySupported","isNaN","isFinite","min","max","Float32Array","f","getControlPoints","x","y","str","getEasing","duration","easing","isString","Easings","generateSpringRK4","defaults","EASING_DEFAULT","tick","timestamp","timeCurrent","callsLength","State","calls","callContainer","opts","timeStart","firstTick","tweenDummyValue","percentComplete","callLength","tweensContainer","transformPropertyExists","display","flexValues","flexValue","CSS","setPropertyValue","visibility","currentValue","tween","endValue","tweenDelta","startValue","Hooks","registered","hookRoot","getRoot","rootPropertyValueCache","rootPropertyValue","adjustedSetData","unitType","scrollData","Normalizations","mobileHA","transformCache","translate3d","flushTransformCache","completeCall","isTicking","ticker","callIndex","isStopped","resolver","remainingCallsExist","loop","isAnimating","transformHAPropertyExists","Lists","transforms3D","transformName","defaultValue","RegExp","Values","removeClass","complete","error","setTimeout","propertyName","tweenContainer","delay","IE","documentMode","div","createElement","innerHTML","getElementsByTagName","rAFShim","timeLast","webkitRequestAnimationFrame","mozRequestAnimationFrame","timeDelta","variable","isFunction","isNodeList","jquery","Zepto","zepto","isZ","isSVG","SVGElement","isEmptyObject","isJQuery","velocity","animate","DURATION_DEFAULT","isMobile","navigator","userAgent","isAndroid","isGingerbread","isChrome","chrome","isFirefox","prefixElement","prefixMatches","scrollAnchor","scrollPropertyLeft","scrollPropertyTop","Redirects","Promise","begin","_cacheValues","computedStyle","hook","mock","major","minor","patch","debug","documentElement","body","parentNode","springAccelerationForState","tension","friction","springEvaluateStateWithDerivative","initialState","dt","derivative","dx","dv","springIntegrateState","b","d","dxdt","dvdt","springRK4Factory","have_duration","last_state","initState","path","time_lapsed","tolerance","DT","linear","swing","cos","PI","spring","exp","easingArray","RegEx","isHex","valueUnwrap","wrappedValueAlreadyExtracted","valueSplit","colors","transformsBase","templates","textShadow","boxShadow","clip","backgroundPosition","transformOrigin","perspectiveOrigin","register","rgbComponents","rootProperty","hookTemplate","hookNames","defaultValues","match","join","fullHookName","hookPosition","hookData","cleanRootPropertyValue","isCSSNullValue","extractValue","injectValue","hookValue","rootPropertyValueParts","rootPropertyValueUpdated","propertyValue","extracted","blur","blurComponent","opacity","zoom","parseInt","invalid","substr","colorName","converted","colorNames","black","blue","gray","green","red","white","hexToRgb","Names","camelCase","subMatch","SVGAttribute","SVGAttributes","prefixCheck","vendors","vendorsLength","propertyPrefixed","hex","rgbParts","shortformRegex","longformRegex","r","g","getUnitType","getDisplayType","tagName","addClass","className","classList","getPropertyValue","forceStyleLookup","computePropertyValue","revertDisplay","toggleDisplay","computedValue","contentBoxHeight","offsetHeight","contentBoxWidth","offsetWidth","getComputedStyle","normalizedPropertyName","normalizedPropertyValue","getBBox","getAttribute","container","direction","scrollTo","alternateValue","hookName","setAttribute","getTransformFloat","transformProperty","transformString","SVGTransforms","translate","skewX","skewY","scale","rotate","transformValue","perspective","arg2","arg3","adjustedSet","getChain","isUtility","promiseData","promise","elementsWrapped","processElement","buildQueue","next","parsePropertyValue","valueData","skipResolvingEasing","elementsIndex","elementsLength","separateValue","numericValue","calculateUnitRatios","sameRatioIndicators","myParent","fontSize","samePercentRatio","callUnitConversionData","lastPosition","lastParent","sameEmRatio","lastFontSize","measurement","unitRatios","emToPx","lastEmToPx","percentToPxWidth","lastPercentToPxWidth","percentToPxHeight","lastPercentToPxHeight","dummy","createElementNS","appendChild","removeChild","remToPx","vwToPx","vhToPx","stringify","action","scrollPositionCurrent","scrollPositionCurrentAlternate","scrollPositionEnd","scrollDirection","axis","scrollOffset","scroll","lastTweensContainer","lastTween","lastStartValue","propertiesMap","colorComponents","endValueRGB","startValueRGB","dataArray","separatedValue","endValueUnitType","startValueUnitType","operator","elementUnitConversionData","velocityQueueEntryFlag","delayTimer","clearQueue","argumentIndex","syntacticSugar","names","o","startingArgumentPosition","rejecter","resolve","reject","clearTimeout","item","callsToStop","activeCall","activeElement","queueName","l","activeTween","durationOriginal","delayOriginal","backwards","reverse","elementIndex","stagger","drag","abortError","reverseCallsCount","reverseOptions","requestAnimationFrame","hidden","elementsSize","computedValues","marginBottom","paddingTop","paddingBottom","inlineValues","overflow","originalComplete","val","_isVue","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","isLiteral","literalValueRE","isReserved","_toString","toNumber","parsed","Number","toBoolean","stripQuotes","camelize","camelizeRE","toUpper","hyphenate","hyphenateRE","classify","classifyRE","bind$1","ctx","toArray","list","to","from","isObject","OBJECT_STRING","def","_debounce","func","wait","timeout","later","last","now","indexOf","cancellable","cb","cancelled","cancel","looseEqual","Cache","limit","head","tail","_keymap","pushFilter","filter","lastFilterIndex","trim","tokens","filterTokenRE","map","processFilterArg","dir","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","config","delimiters","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","htmlRE","parseText","text","oneTime","lastIndex","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE$1","appendWithTransition","el","applyTransition","beforeWithTransition","before","removeWithTransition","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","query","querySelector","inDoc","doc","contains","getAttr","_attr","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","prepend","firstChild","replaceChild","on$1","event","removeEventListener","setClass","cls","isIE9","tar","extractContent","asFragment","child","rawContent","isTemplate","DocumentFragment","hasChildNodes","trimNode","createDocumentFragment","lastChild","createAnchor","persist","anchor","createComment","createTextNode","__vue_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","done","nodes","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","initProp","coerceProp","assertProp","raw","required","expectedType","valid","Boolean","Function","validator","coerce","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","components","ids","guardProps","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","camelizedId","charAt","assertAsset","Dep","uid$3","subs","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","__proto__","observe","isExtensible","addVm","defineReactive","getter","setter","convertAllProperties","getOwnPropertyDescriptor","childOb","depend","newVal","initMixin","_init","$el","$root","$children","$refs","$els","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_unlinkFn","_context","_scope","_frag","children","$options","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","trimmed","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","save","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","saveRE","wsRE","identRE","makeGetterFn","compileSetter","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","userQueue","circular","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","watcher","run","pushWatcher","user","nextTick","expOrFn","isFn","uid$2","dirty","lazy","deps","newDeps","prevError","twoWay","queued","shallow","traverse","normalize","propCache","upper","testEl","prefixed","prefixes","camelPrefixes","keyFilter","handler","codes","charCode","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","getValue","multi","selected","_value","indexOf$1","isRealTemplate","stringToFragment","templateString","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","suffix","templateStringToUse","nodeToFragment","textContent","clonedNode","cloneNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__vfrag__","withTransition","method","callHook","attach","shouldCallRemove","beforeRemove","destroy","FragmentFactory","cid","cacheId","outerHTML","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","pushJob","job","queue$1","flush","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","typeCache","getClientRects","stringToObject","contains$1","compileProps","propOptions","attr","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","getDefault","$get","_bindDir","propDef","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","$remove","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","publicDirectives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","dirName","terminalDirectives","pushDir","interpTokens","hasOneTimeToken","hasOneTime","rawName","rawValue","interp","dirDef","parseModifiers","modifierRE","transitionRE","bindRE","onRE","argRE","makeNodeLinkFn","directives","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","propsData","optionsDataFn","optionsData","oldData","removeVm","update","computed","userDef","methods","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","$emit","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","refs","_compile","_initElement","contentLinkFn","rootLinker","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","read","_resolveComponent","resolved","requested","pendingCallbacks","cbs","reason","globalAPI","createClass","util","compiler","parsers","text$1","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","installed","mixin","definition","dataAPI","clean","asStatement","$arguments","$delete","immediate","filterRE","$interpolate","$log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","isSource","shouldPropagate","hasParentCbs","$broadcast","source","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","search","delimiter","convertArray","$value","$key","orderBy","sortKey","order","extractFragment","main","__v_selected","inBrowser","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","entry","newer","older","returnEntry","freeze","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","paramAttributes","arrayProto","addSub","sub","removeSub","addDep","getOwnPropertyNames","items","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","current","depIds","cloak","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","FOR","IF","SLOT","unbind","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","removeProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","modelProps","true-value","false-value","modelProp","model","__v_model","setAttributeNS","esc","tab","enter","space","delete","up","right","down","acceptStatement","iframeBind","contentWindow","stop","prevent","reset","checkbox","getBooleanValue","checked","_trueValue","_falseValue","_watcher","afterBind","select","forceUpdate","multiple","initValue","selectedIndex","radio","text$2","isRange","composing","focused","rawListener","hasjQuery","checkFilters","hasRead","hasWrite","_unbind","show","nextElementSibling","elseEl","toggle","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","defs","symbol","image","circle","ellipse","line","polygon","polyline","rect","t","placeholder","vIf","elseFactory","elseFrag","uid$1","vFor","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","staggerAmount","getStagger","trans","_preProcess","_postProcess","swap","for","if","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","inlineStyles","computedStyles","transDuration","animDuration","onEnd","oldId","bindingModes","childKey","parentKey","parentWatcher","childWatcher","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHook","activate","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","transitionMode","vClass","handleArray","cleanup","prevKeys","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","called","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","stringified","toFixed","_int","_float","sign","pluralize","slot","fallback","slotName","tryCompile","namedSlot","elementDirectives","_namedSlot","transitions","partials","IS_UNITLESS","animationIterationCount","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridColumn","fontWeight","lineClamp","lineHeight","orphans","tabSize","widows","zIndex","fillOpacity","stopOpacity","strokeDashoffset","strokeOpacity","strokeWidth","anArray","BYTES_PER_ELEMENT","_brindilleResize","_brindilleResize2","_domCss","_domCss2","_Preloader","_Preloader2","_About","_About2","_preloader","_preloader2","SectionPreloader","SectionAbout","isLoaded","background","_velocityAnimate","_velocityAnimate2","_about","_about2","openButton","closeButton","translateX","_domCssTransform","_domCssTransform2","_preloader3","_preloader4","loader","addImage","loaderProgressHandler","loaderCompleteHandler","loadingProgress","loading","updateLoadingProgress","isComplete","backgroundBottom","translateY","backgroundTop","_projects","_project","_project2","route","$route","projects","redirect","*","_keys2","afterEach","_keys","project","isDetailsOpen","openDetails","closeDetails","UPDATE","OPEN_DETAILS","CLOSE_DETAILS","_callbacks","once","removeAllListeners","hasListeners","it","aFunction","that","PROTOTYPE","$export","own","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","IS_WRAP","W","param","__g","fails","KEY","defined","toObject","$keys","copyVec3","copyVec2","copyScale3","quat","mat4","fromRotationTranslation","multiply","ZERO3","ZERO2","ONES","tmpQuat","tmpMat4","translation","euler","skew","opt","quaternion","fromEuler","tan","z","sx","sin","sy","sz","cx","cy","cz","callNow","compose","scratch","matrix","mat2d","suffixMap","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","titleCase","hadItem","LoaderImage","_imageLoaded","URL","webkitURL","FileReader","_createAndLoadImage","_onImageLoadComplete","_onImageLoadFail","arrayBuffer","blobData","mozResponseArrayBuffer","createObjectURL","reader","onloadend","revokeObjectURL","readAsDataURL","Image","onload","onerror","LoaderJSON","LoaderText","LOADERS","LOADER_DEFAULT","Preloader","percTotal","loadIdx","urls","modifiedURL","loaders","percentageOfLoad","urlLoading","_onLoadError","_onLoadProgress","_continueLoadQueue","modifierFunction","addFromLoaderType","_getLoader","addJSON","addText","loaderType","_setupURL","setCacheID","setPercentage","_setupPercentages","getContent","percScale","numWPerc","numWOPerc","oneFilePerc","curPerc","regexExtention","extensionValue","extension","toNoCase","hasSpace","hasSeparator","unseparate","hasCamel","uncamelize","separatorSplitter","camelSplitter","previous","uppers","toSpaceCase","__vue_script__","__vue_template__","Target","matcher","delegate","Matcher","routes","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","eachRoute","baseRoute","addRouteCallback","StaticSegment","DynamicSegment","StarSegment","EpsilonSegment","specificity","segments","segment","charSpec","nextStates","sortSolutions","states","recognizeChar","RecognizeResults","queryParams","findHandler","captures","currentCapture","isDynamic","addSegment","currentState","eachChar","decodeQueryParamPart","part","decodeURIComponent","exports$1","stack","resolvePath","base","relative","pop","isPromise","then","getRouteConfig","resolveAsyncComponent","mapParams","genQuery","canReuse","view","canReuseFn","canDeactivate","fromComponent","expectBoolean","canActivate","aborted","deactivate","callHooks","reuse","activateQueue","dataHook","waitForData","activated","$loadingRouteData","childView","_keepAliveRouterView","_routerView","cachedChildView","_rendered","_transitionOnLoad","setCurrent","afterActivate","loadData","_needMerge","promises","resolvedVal","all","expectData","isPlainOjbect","applyOverride","_Vue$util","root","_parent","$router","_children","_defineMeta","hooksToMergeRE","View","componentDef","viewDef","_isDynamicLiteral","parentView","_rootView","_currentTransition","elementDirective","Link","sameOrigin","protocol","location","hostname","port","__v_link_active","onRouteUpdate","onClick","activeEl","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","button","go","pathname","newPath","_stringifyPath","updateActiveMatch","updateHref","updateClasses","activeRE","queryStringRE","isAbsolute","href","formatPath","_linkActiveClass","dest","trailingSlashRE","guardComponent","comp","babelHelpers","classCallCheck","willAddRoute","addChild","contextEntered","specials","validChars","generate","invalidChars","repeat","isEqual","chars","returned","oCreate","proto","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","encodeURIComponent","arrayPair","parseQueryString","queryString","keyLength","recognize","pathLen","queryStart","isSlashDropped","decodeURI","solutions","hashRE","HTML5History","onChange","rootRE","baseEl","replaceState","pos","pushState","hashMatch","HashHistory","hashbang","formattedPath","isAbsoloute","AbstractHistory","currentPath","RouteTransition","abortingOnLoad","deactivateQueue","reverseDeactivateQueue","matched","reuseQueue","runQueue","_onTransitionValidated","_view","step","_ref$expectBoolean","_ref$expectData","nextCalled","err","_suppress","exposed","resIsPromise","ok","internalKeysRE","Route","_recognizer","_notFoundHandler","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","app","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_hasPushState","_abstract","_hashbang","_history","_saveScrollPosition","History","_match","_map","rootPath","_notFound","_addRoute","_addRedirect","_addAlias","beforeEach","_appContainer","Ctor","_appConstructor","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","realPath","_checkGuard","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","scrollX","offsetTop","currentParams","targetParams","externalVue","_ref$collapsed","collapsed","_ref$mutationTransfor","transformer","mutationTransformer","mut","nextState","prevState","time","formattedTime","pad","getHours","getMinutes","getSeconds","getMilliseconds","formattedMutation","message","startMessage","groupCollapsed","group","groupEnd","times","num","maxLength","_typeof","Symbol","allowDuplicate","existing"],"mappings":"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","file":"bundle.83a688d.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(18);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueRouter = __webpack_require__(74);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tvar _vuex = __webpack_require__(2);\n\t\n\tvar _vuex2 = _interopRequireDefault(_vuex);\n\t\n\tvar _routes = __webpack_require__(25);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vueRouter2.default);\n\t_vue2.default.use(_vuex2.default);\n\t\n\tvar router = new _vueRouter2.default({\n\t  history: false,\n\t  saveScrollPosition: true\n\t});\n\t\n\t(0, _routes.configRouter)(router);\n\t\n\tvar App = _vue2.default.extend(__webpack_require__(70));\n\trouter.start(App, '#app');\n\t\n\twindow.router = router;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar BaseClass = __webpack_require__( 55 );\n\t\n\tvar Class = function( descriptor ) {\n\t\n\t\tvar rVal = undefined;\n\t\n\t\tif ( descriptor === undefined ) {\n\t\n\t\t\tdescriptor = {};\n\t\t}\n\t\n\t\n\t\tif( descriptor.initialize ) {\n\t\n\t\t\trVal = descriptor.initialize;\n\t\t\tdelete descriptor.initialize;\n\t\t} else {\n\t\n\t\t\trVal = function() { \n\t\n\t\t\t\tArray.prototype.splice.apply( arguments, [ 0, 0, this ] );\n\t\n\t\t\t\tClass.parent.apply( undefined, arguments );\n\t\t\t};\n\t\t}\n\t\n\t\tif( descriptor.Extends !== undefined ) {\n\t\n\t\t\tdescriptor.Extends.$$isConstructor = true;\n\t\n\t\t\trVal.prototype = Object.create( descriptor.Extends.prototype );\n\t\t\t// this will be used to call the parent constructor\n\t\t\trVal.$$parentConstructor = descriptor.Extends;\n\t\t\tdelete descriptor.Extends;\n\t\t} else {\n\t\n\t\t\trVal.prototype = Object.create( BaseClass );\n\t\t\trVal.$$parentConstructor = function() {};\n\t\t}\n\t\n\t\trVal.prototype.$$getters = {};\n\t\trVal.prototype.$$setters = {};\n\t\n\t\tfor( var i in descriptor ) {\n\t\t\tif( typeof descriptor[ i ] == 'function' ) {\n\t\t\t\tdescriptor[ i ].$$name = i;\n\t\t\t\tdescriptor[ i ].$$owner = rVal.prototype;\n\t\n\t\t\t\trVal.prototype[ i ] = descriptor[ i ];\n\t\t\t} else if( descriptor[ i ] && typeof descriptor[ i ] == 'object' && ( descriptor[ i ].get || descriptor[ i ].set ) ) {\n\t\t\t\tObject.defineProperty( rVal.prototype, i , descriptor[ i ] );\n\t\n\t\t\t\tif( descriptor[ i ].get ) {\n\t\t\t\t\trVal.prototype.$$getters[ i ] = descriptor[ i ].get;\n\t\t\t\t\tdescriptor[ i ].get.$$name = i;\n\t\t\t\t\tdescriptor[ i ].get.$$owner = rVal.prototype;\n\t\t\t\t}\n\t\n\t\t\t\tif( descriptor[ i ].set ) {\n\t\t\t\t\trVal.prototype.$$setters[ i ] = descriptor[ i ].set;\n\t\t\t\t\tdescriptor[ i ].set.$$name = i;\n\t\t\t\t\tdescriptor[ i ].set.$$owner = rVal.prototype;\t\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trVal.prototype[ i ] = descriptor[ i ];\n\t\t\t}\n\t\t}\n\t\n\t\t// this will be used to check if the caller function is the consructor\n\t\trVal.$$isConstructor = true;\n\t\n\t\t// now we'll check interfaces\n\t\tfor( var i = 1; i < arguments.length; i++ ) {\n\t\t\targuments[ i ].compare( rVal );\n\t\t}\n\t\n\t\treturn rVal;\n\t};\t\n\t\n\tClass.parent = function( scope ) {\n\t\n\t\tvar caller = Class.parent.caller;\n\t\n\t\targuments = Array.prototype.slice.apply( arguments, [ 1 ] )\n\t\n\t\t// if the current function calling is the constructor\n\t\tif( caller.$$isConstructor ) {\n\t\t\tvar parentFunction = caller.$$parentConstructor;\n\t\t} else {\n\t\t\tif( caller.$$name ) {\n\t\t\t\tvar callerName = caller.$$name;\n\t\t\t\tvar isGetter = caller.$$owner.$$getters[ callerName ];\n\t\t\t\tvar isSetter = caller.$$owner.$$setters[ callerName ];\n\t\n\t\t\t\tif( arguments.length == 1 && isSetter ) {\n\t\t\t\t\tvar parentFunction = Object.getPrototypeOf( caller.$$owner ).$$setters[ callerName ];\n\t\n\t\t\t\t\tif( parentFunction === undefined ) {\n\t\t\t\t\t\tthrow 'No setter defined in parent';\n\t\t\t\t\t}\n\t\t\t\t} else if( arguments.length == 0 && isGetter ) {\n\t\t\t\t\tvar parentFunction = Object.getPrototypeOf( caller.$$owner ).$$getters[ callerName ];\n\t\n\t\t\t\t\tif( parentFunction === undefined ) {\n\t\t\t\t\t\tthrow 'No getter defined in parent';\n\t\t\t\t\t}\n\t\t\t\t} else if( isSetter || isGetter ) {\n\t\t\t\t\tthrow 'Incorrect amount of arguments sent to getter or setter';\n\t\t\t\t} else {\n\t\t\t\t\tvar parentFunction = Object.getPrototypeOf( caller.$$owner )[ callerName ];\t\n\t\n\t\t\t\t\tif( parentFunction === undefined ) {\n\t\t\t\t\t\tthrow 'No parent function defined for ' + callerName;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow 'You cannot call parent here';\n\t\t\t}\n\t\t}\n\t\n\t\treturn parentFunction.apply( scope, arguments );\n\t};\n\t\n\tmodule.exports = Class;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.createLogger = exports.Store = undefined;\n\t\n\tvar _util = __webpack_require__(77);\n\t\n\tvar _devtool = __webpack_require__(75);\n\t\n\tvar _devtool2 = _interopRequireDefault(_devtool);\n\t\n\tvar _logger = __webpack_require__(76);\n\t\n\tvar _logger2 = _interopRequireDefault(_logger);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Vue = undefined;\n\t\n\tvar Store = exports.Store = (function () {\n\t\n\t  /**\n\t   * @param {Object} options\n\t   *        - {Object} state\n\t   *        - {Object} actions\n\t   *        - {Object} mutations\n\t   *        - {Array} middlewares\n\t   *        - {Boolean} strict\n\t   */\n\t\n\t  function Store() {\n\t    var _this = this;\n\t\n\t    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t    var _ref$state = _ref.state;\n\t    var state = _ref$state === undefined ? {} : _ref$state;\n\t    var _ref$actions = _ref.actions;\n\t    var actions = _ref$actions === undefined ? {} : _ref$actions;\n\t    var _ref$mutations = _ref.mutations;\n\t    var mutations = _ref$mutations === undefined ? {} : _ref$mutations;\n\t    var _ref$middlewares = _ref.middlewares;\n\t    var middlewares = _ref$middlewares === undefined ? [] : _ref$middlewares;\n\t    var _ref$strict = _ref.strict;\n\t    var strict = _ref$strict === undefined ? false : _ref$strict;\n\t\n\t    _classCallCheck(this, Store);\n\t\n\t    // bind dispatch to self\n\t    var dispatch = this.dispatch;\n\t    this.dispatch = function () {\n\t      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t        args[_key] = arguments[_key];\n\t      }\n\t\n\t      dispatch.apply(_this, args);\n\t    };\n\t    // use a Vue instance to store the state tree\n\t    this._vm = new Vue({\n\t      data: state\n\t    });\n\t    this._dispatching = false;\n\t    this.actions = Object.create(null);\n\t    this._setupActions(actions);\n\t    this._setupMutations(mutations);\n\t    this._setupMiddlewares(middlewares, state);\n\t    // add extra warnings in strict mode\n\t    if (strict) {\n\t      this._setupMutationCheck();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Getter for the entire state tree.\n\t   * Read only.\n\t   *\n\t   * @return {Object}\n\t   */\n\t\n\t  _createClass(Store, [{\n\t    key: 'dispatch',\n\t\n\t    /**\n\t     * Dispatch an action.\n\t     *\n\t     * @param {String} type\n\t     */\n\t\n\t    value: function dispatch(type) {\n\t      for (var _len2 = arguments.length, payload = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t        payload[_key2 - 1] = arguments[_key2];\n\t      }\n\t\n\t      var mutation = this._mutations[type];\n\t      var prevSnapshot = this._prevSnapshot;\n\t      var state = this.state;\n\t      var snapshot = undefined,\n\t          clonedPayload = undefined;\n\t      if (mutation) {\n\t        this._dispatching = true;\n\t        // apply the mutation\n\t        if (Array.isArray(mutation)) {\n\t          mutation.forEach(function (m) {\n\t            return m.apply(undefined, [state].concat(payload));\n\t          });\n\t        } else {\n\t          mutation.apply(undefined, [state].concat(payload));\n\t        }\n\t        this._dispatching = false;\n\t        // invoke middlewares\n\t        if (this._needSnapshots) {\n\t          snapshot = this._prevSnapshot = (0, _util.deepClone)(state);\n\t          clonedPayload = (0, _util.deepClone)(payload);\n\t        }\n\t        this._middlewares.forEach(function (m) {\n\t          if (m.onMutation) {\n\t            if (m.snapshot) {\n\t              m.onMutation({ type: type, payload: clonedPayload }, snapshot, prevSnapshot);\n\t            } else {\n\t              m.onMutation({ type: type, payload: payload }, state);\n\t            }\n\t          }\n\t        });\n\t      } else {\n\t        console.warn('[vuex] Unknown mutation: ' + type);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Hot update actions and mutations.\n\t     *\n\t     * @param {Object} options\n\t     *        - {Object} [actions]\n\t     *        - {Object} [mutations]\n\t     */\n\t\n\t  }, {\n\t    key: 'hotUpdate',\n\t    value: function hotUpdate() {\n\t      var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var actions = _ref2.actions;\n\t      var mutations = _ref2.mutations;\n\t\n\t      if (actions) {\n\t        this._setupActions(actions, true);\n\t      }\n\t      if (mutations) {\n\t        this._setupMutations(mutations);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Setup mutation check: if the vuex instance's state is mutated\n\t     * outside of a mutation handler, we throw en error. This effectively\n\t     * enforces all mutations to the state to be trackable and hot-reloadble.\n\t     * However, this comes at a run time cost since we are doing a deep\n\t     * watch on the entire state tree, so it is only enalbed with the\n\t     * strict option is set to true.\n\t     */\n\t\n\t  }, {\n\t    key: '_setupMutationCheck',\n\t    value: function _setupMutationCheck() {\n\t      var _this2 = this;\n\t\n\t      // a hack to get the watcher constructor from older versions of Vue\n\t      // mainly because the public $watch method does not allow sync\n\t      // watchers.\n\t      var unwatch = this._vm.$watch('__vuex__', function (a) {\n\t        return a;\n\t      });\n\t      var Watcher = this._vm._watchers[0].constructor;\n\t      unwatch();\n\t      new Watcher(this._vm, '$data', function () {\n\t        if (!_this2._dispatching) {\n\t          throw new Error('[vuex] Do not mutate vuex store state outside mutation handlers.');\n\t        }\n\t      }, { deep: true, sync: true });\n\t    }\n\t\n\t    /**\n\t     * Set up the callable action functions exposed to components.\n\t     * This method can be called multiple times for hot updates.\n\t     * We keep the real action functions in an internal object,\n\t     * and expose the public object which are just wrapper\n\t     * functions that point to the real ones. This is so that\n\t     * the reals ones can be hot reloaded.\n\t     *\n\t     * @param {Object} actions\n\t     * @param {Boolean} [hot]\n\t     */\n\t\n\t  }, {\n\t    key: '_setupActions',\n\t    value: function _setupActions(actions, hot) {\n\t      var _this3 = this;\n\t\n\t      this._actions = Object.create(null);\n\t      actions = Array.isArray(actions) ? (0, _util.mergeObjects)(actions) : actions;\n\t      Object.keys(actions).forEach(function (name) {\n\t        _this3._actions[name] = (0, _util.createAction)(actions[name], _this3);\n\t        if (!_this3.actions[name]) {\n\t          _this3.actions[name] = function () {\n\t            var _actions;\n\t\n\t            return (_actions = _this3._actions)[name].apply(_actions, arguments);\n\t          };\n\t        }\n\t      });\n\t      // delete public actions that are no longer present\n\t      // after a hot reload\n\t      if (hot) {\n\t        Object.keys(this.actions).forEach(function (name) {\n\t          if (!actions[name]) {\n\t            delete _this3.actions[name];\n\t          }\n\t        });\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Setup the mutation handlers. Effectively a event listener.\n\t     * This method can be called multiple times for hot updates.\n\t     *\n\t     * @param {Object} mutations\n\t     */\n\t\n\t  }, {\n\t    key: '_setupMutations',\n\t    value: function _setupMutations(mutations) {\n\t      this._mutations = Array.isArray(mutations) ? (0, _util.mergeObjects)(mutations, true) : mutations;\n\t    }\n\t\n\t    /**\n\t     * Setup the middlewares. The devtools middleware is always\n\t     * included, since it does nothing if no devtool is detected.\n\t     *\n\t     * A middleware can demand the state it receives to be\n\t     * \"snapshots\", i.e. deep clones of the actual state tree.\n\t     *\n\t     * @param {Array} middlewares\n\t     * @param {Object} state\n\t     */\n\t\n\t  }, {\n\t    key: '_setupMiddlewares',\n\t    value: function _setupMiddlewares(middlewares, state) {\n\t      this._middlewares = [_devtool2.default].concat(middlewares);\n\t      this._needSnapshots = middlewares.some(function (m) {\n\t        return m.snapshot;\n\t      });\n\t      if (this._needSnapshots) {\n\t        console.log('[vuex] One or more of your middlewares are taking state snapshots ' + 'for each mutation. Make sure to use them only during development.');\n\t      }\n\t      var initialSnapshot = this._prevSnapshot = this._needSnapshots ? (0, _util.deepClone)(state) : null;\n\t      // call init hooks\n\t      this._middlewares.forEach(function (m) {\n\t        if (m.onInit) {\n\t          m.onInit(m.snapshot ? initialSnapshot : state);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'state',\n\t    get: function get() {\n\t      return this._vm._data;\n\t    },\n\t    set: function set(v) {\n\t      throw new Error('[vuex] Vuex root state is read only.');\n\t    }\n\t  }]);\n\t\n\t  return Store;\n\t})();\n\t\n\t// export logger factory\n\t\n\texports.createLogger = _logger2.default;\n\texports.default = {\n\t  Store: Store,\n\t  createLogger: _logger2.default,\n\t  install: function install(_Vue) {\n\t    Vue = _Vue;\n\t  }\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Emitter = __webpack_require__(28);\n\tvar debounce = __webpack_require__(41);\n\t\n\tvar resize = module.exports;\n\t\n\t// Make resize an event emitter\n\tEmitter(resize);\n\t\n\tresize.debounceDelay = 50;\n\t\n\tresize.onGlobalResize = function() {\n\t  this.width = window.innerWidth;\n\t  this.height = window.innerHeight;\n\t  this.halfWidth = 0.5 * this.width;\n\t  this.halfHeight = 0.5 * this.height;\n\t\n\t  this.applyResize();\n\t  if (this.debounceDelay > 0) {\n\t    this.debounceResize();\n\t  } else {\n\t    this.applyResizeDebounce();\n\t  }\n\t};\n\t\n\tresize.applyResizeDebounce = function() {\n\t  this.emit('resizeDebounce');\n\t};\n\t\n\tresize.applyResize = function() {\n\t  this.emit('resize');\n\t};\n\t\n\tresize.addListener = function(listener, noDebounce) {\n\t  this.on(noDebounce ? 'resize' : 'resizeDebounce', listener);\n\t};\n\t\n\tresize.removeListener = function(listener) {\n\t  if (listener) {\n\t    this.off('resize', listener);\n\t    this.off('resizeDebounce', listener);\n\t  }\n\t};\n\t\n\tresize.debounceResize = debounce(resize.applyResizeDebounce.bind(resize), resize.debounceDelay);\n\t\n\t// first call to init values\n\tresize.onGlobalResize();\n\t\n\twindow.addEventListener('resize', resize.onGlobalResize.bind(resize));\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tvar core = module.exports = {version: '1.2.6'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar prefix = __webpack_require__(57)\n\tvar toCamelCase = __webpack_require__(16)\n\tvar cache = { 'float': 'cssFloat' }\n\tvar addPxToStyle = __webpack_require__(19)\n\t\n\tfunction style (element, property, value) {\n\t  var camel = cache[property]\n\t  if (typeof camel === 'undefined') {\n\t    camel = detect(property)\n\t  }\n\t\n\t  // may be false if CSS prop is unsupported\n\t  if (camel) {\n\t    if (value === undefined) {\n\t      return element.style[camel]\n\t    }\n\t\n\t    element.style[camel] = addPxToStyle(camel, value)\n\t  }\n\t}\n\t\n\tfunction each (element, properties) {\n\t  for (var k in properties) {\n\t    if (properties.hasOwnProperty(k)) {\n\t      style(element, k, properties[k])\n\t    }\n\t  }\n\t}\n\t\n\tfunction detect (cssProp) {\n\t  var camel = toCamelCase(cssProp)\n\t  var result = prefix(camel)\n\t  cache[camel] = cache[cssProp] = cache[result] = result\n\t  return result\n\t}\n\t\n\tfunction set () {\n\t  if (arguments.length === 2) {\n\t    each(arguments[0], arguments[1])\n\t  } else {\n\t    style(arguments[0], arguments[1], arguments[2])\n\t  }\n\t}\n\t\n\tmodule.exports = set\n\tmodule.exports.set = set\n\t\n\tmodule.exports.get = function (element, properties) {\n\t  if (Array.isArray(properties)) {\n\t    return properties.reduce(function (obj, prop) {\n\t      obj[prop] = style(element, prop || '')\n\t      return obj\n\t    }, {})\n\t  } else {\n\t    return style(element, properties || '')\n\t  }\n\t}\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * This module will contain everything related to preloading.\r\n\t * \r\n\t * @module preloader\r\n\t */\r\n\tvar Class = __webpack_require__(1);\r\n\tvar LoaderCache = __webpack_require__(59);\r\n\tvar FileMeta = __webpack_require__(12);\r\n\tvar Signal = __webpack_require__(15);\r\n\tvar UtilArrayBuffer = __webpack_require__(13);\r\n\tvar UtilHTTP = __webpack_require__(7);\r\n\tvar XHR = XMLHttpRequest;\r\n\t\r\n\tvar LoaderBase = new Class({\r\n\t\r\n\t\t/**\r\n\t\t * LoaderBase is the base class for all Preloader's. It wraps XHR nicely with Signal's as it's event system\r\n\t\t * also it should be able to handle working with: text, JSON, ArrayBuffer, Blob, and Document data out of the\r\n\t\t * box. (data XHR2 is able to handle)\r\n\t\t * \r\n\t\t * @class LoaderBase\r\n\t\t * @constructor\r\n\t\t */\r\n\t\tinitialize: function( loadType ) {\r\n\t\r\n\t\t\tthis.xhr = null;\r\n\t\t\tthis.content = null;\r\n\t\t\tthis.url = null;\r\n\t\t\tthis.cacheID = null;\r\n\t\t\tthis.loadType = loadType || LoaderBase.typeText;\r\n\t\t\tthis.loadTypeSet = false;\r\n\t\t\tthis.fileMeta = null;\r\n\t\t\tthis.onStart = new Signal();\r\n\t\t\tthis.onProgress = new Signal();\r\n\t\t\tthis.onComplete = new Signal();\r\n\t\t\tthis.onError = new Signal();\r\n\t\r\n\t\t\tthis._onStateChange = this._onStateChange.bind( this );\r\n\t\t\tthis._onProgress = this._onProgress.bind( this );\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Call this method to find out if we can load data using XHR. This maybe useful for an Image loader for instance\r\n\t\t * if XHR can't be used then we can load the content using Image instead.\r\n\t\t * \r\n\t\t * @method canLoadUsingXHR\r\n\t\t * @return {[type]} [description]\r\n\t\t */\r\n\t\tcanLoadUsingXHR: function() {\r\n\t\r\n\t\t\treturn typeof XHR !== \"undefined\";\r\n\t\t},\r\n\t\r\n\t\tcanLoadType: function( type ) {\r\n\t\r\n\t\t\tvar tempXHR = new XHR();\r\n\t\r\n\t\t\t//need to open for ff so it doesn't fail\r\n\t\t\ttempXHR.open( 'GET', 'someFakeURL', true );\r\n\t\r\n\t\t\treturn checkAndSetType( tempXHR, type );\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * The load function should be called to start preloading data. \r\n\t\t * \r\n\t\t * \r\n\t\t * The first parameter passed to the load function is the url to the data to be loaded. \r\n\t\t * It should be noted that mimetype for binary Blob data is read from \r\n\t\t * the file extension. EG. jpg will use the mimetype \"image/jpeg\".\r\n\t\t *\r\n\t\t * The second parameter is a String which will be used to defetermine if content should be cacheIDd in memory\r\n\t\t * this is useful if you know the asset will be loaded often or you just want the data to be\r\n\t\t * stored in memory. The ID passed can be used with LoaderCache to get the cacheIDd content.\r\n\t\t *\r\n\t\t * @method load\r\n\t\t * @param  {String} url This is the url to the data to be loaded\r\n\t\t * @param  {Boolean} cacheID If you'd like to cacheID the content to be loaded in memory pass in true\r\n\t\t */\r\n\t\tload: function( url, cacheID ) {\r\n\t\r\n\t\t\tthis.url = url;\r\n\t\t\tthis.cacheID = cacheID;\r\n\t\r\n\t\t\tif( LoaderCache.hasFile( this.url ) ) {\r\n\t\r\n\t\t\t\tthis.content = LoaderCache.get( this.url );\r\n\t\t\t\tthis._dispatchProgress( 1 );\r\n\t\t\t\tthis._dispatchComplete();\r\n\t\t\t} else if( this.canLoadUsingXHR() ) {\r\n\t\r\n\t\t\t\tthis.xhr = new XHR();\r\n\t\t\t\tthis.xhr.open( 'GET', url, true );\r\n\t\r\n\t\t\t\tthis.xhr.onreadystatechange = this._onStateChange;\r\n\t\t\t\tthis.xhr.onprogress !== undefined && ( this.xhr.onprogress = this._onProgress );\r\n\t\r\n\t\r\n\t\t\t\tif( this.loadType != LoaderBase.typeText ) {\r\n\t\r\n\t\t\t\t\tif( !checkIfGoodValue.call( this ) ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'Attempting to use incompatible load type ' + this.loadType + '. Switching it to ' + LoaderBase.typeText );\r\n\t\t\t\t\t\tthis.loadType = LoaderBase.typeText;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.loadTypeSet = checkResponseTypeSupport.call( this ) && checkAndSetType( this.xhr, this.loadType );\t\r\n\t\t\t\t\t} catch( e ) {\r\n\t\r\n\t\t\t\t\t\tthis.loadTypeSet = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\r\n\t\t\t\t\tif( !this.loadTypeSet &&  ( this.loadType == LoaderBase.typeBlob ||\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.loadType == LoaderBase.typeArraybuffer ) ) {\r\n\t\r\n\t\t\t\t\t\tthis.xhr.overrideMimeType( 'text/plain; charset=x-user-defined' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.xhr.send();\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Call this function to stop loading the asset which is currently being loaded.\r\n\t\t *\r\n\t\t * @method stopLoad\r\n\t\t */\r\n\t\tstopLoad: function() {\r\n\t\r\n\t\t\tthis.xhr.abort();\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * When this function is called it will simply dispatch onStart. It maybe useful for classes\r\n\t\t * which extend LoaderBase to override this function.\r\n\t\t *\r\n\t\t * @method _dispatchStart\r\n\t\t * @protected\r\n\t\t */\r\n\t\t_dispatchStart: function() {\r\n\t\r\n\t\t\tthis.onStart.dispatch();\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * When this function is called it will simply dispatch onProgress. It maybe useful for classes\r\n\t\t * which extend LoaderBase to override this function.\r\n\t\t *\r\n\t\t * @method _dispatchProgress\r\n\t\t * @protected\r\n\t\t * @param {Number} value This is a value between 0-1 which is the percentage of the files load\r\n\t\t */\r\n\t\t_dispatchProgress: function( value ) {\r\n\t\r\n\t\t\tthis.onProgress.dispatch( value );\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * When this function is called it will simply dispatch onComplete. It maybe useful for classes\r\n\t\t * which extend LoaderBase to override this function.\r\n\t\t *\r\n\t\t * @method _dispatchComplete\r\n\t\t * @protected\r\n\t\t */\r\n\t\t_dispatchComplete: function() {\r\n\t\r\n\t\t\tthis.onComplete.dispatch( this.content );\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * When this function is called it will simply dispatch onError. It maybe useful for classes\r\n\t\t * which extend LoaderBase to override this function.\r\n\t\t *\r\n\t\t * @method _dispatchComplete\r\n\t\t * @protected\r\n\t\t * @param {String} msg The error message we'll be dispatching\r\n\t\t */\r\n\t\t_dispatchError: function( msg ) {\r\n\t\r\n\t\t\tthis.onError.dispatch( msg );\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * This callback will be called when the XHR progresses in its load.\r\n\t\t *\r\n\t\t * @method _onProgress\r\n\t\t * @protected\r\n\t\t * @param  {XMLHttpRequestProgressEvent} ev This event contains data for the progress of the load\r\n\t\t */\r\n\t\t_onProgress: function( ev ) {\r\n\t\r\n\t\t\tvar loaded = ev.loaded || ev.position;\r\n\t\t\tvar totalSize = ev.total || ev.totalSize;\r\n\t\r\n\t\t\tif( totalSize ) {\r\n\t\r\n\t\t\t\tthis._dispatchProgress( loaded / totalSize );\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis._dispatchProgress( 0 );\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * This function is called whenever the readyState of the XHR object changes.\r\n\t\t *\r\n\t\t * \tthis.xhr.readyState == 2 //send() has been called, and headers and status are available\r\n\t\t * \tthis.xhr.readyState == 3 //Downloading; responseText holds partial data.\r\n\t\t * \tthis.xhr.readyState == 4 //Done\r\n\t\t *\r\n\t\t * You should also handle HTTP error status codes:\r\n\t\t *\r\n\t\t * \tthis.xhr.status == 404 //file doesn't exist\r\n\t\t * \r\n\t\t * @method _onStateChange\r\n\t\t * @protected\r\n\t\t */\r\n\t\t_onStateChange: function() {\r\n\t\r\n\t\t\tif( this.xhr.readyState > 1 ) {\r\n\t\r\n\t\t\t\tvar status = \"\";\r\n\t\t\t\tvar waiting = false;\r\n\t\t\t\t// Fix error in IE8 where status isn't available until readyState=4\r\n\t\t\t\ttry { status = this.xhr.status } catch(e) { waiting = true; }\r\n\t\r\n\t\t\t\tif ( status == '200' ) {\r\n\t\r\n\t\t\t\t\tswitch( this.xhr.readyState ) {\r\n\t\r\n\t\t\t\t\t\t//send() has been called, and headers and status are available\r\n\t\t\t\t\t\tcase 2:\r\n\t\r\n\t\t\t\t\t\t\tthis.fileMeta = new FileMeta( this.xhr.getAllResponseHeaders() );\r\n\t\r\n\t\t\t\t\t\t\tthis._dispatchStart();\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t//Downloading; responseText holds partial data.\r\n\t\t\t\t\t\tcase 3:\r\n\t\r\n\t\t\t\t\t\t\t//todo progress could be calculated here if onprogress does not exist on XHR\r\n\t\t\t\t\t\t\t//this.onProgress.dispatch();\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t//Done\r\n\t\t\t\t\t\tcase 4:\r\n\t\r\n\t\t\t\t\t\t\tthis._parseContent();\r\n\t\r\n\t\t\t\t\t\t\tif( this.cacheID ) {\r\n\t\r\n\t\t\t\t\t\t\t\tthis._addToCache();\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis._dispatchComplete();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!waiting) {\r\n\t\r\n\t\t\t\t\tthis.xhr.onreadystatechange = undefined;\r\n\t\t\t\t\tthis._dispatchError( this.xhr.status );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Calling this method will add the file loaded by this LoaderBase to the LoaderCache.\r\n\t\t * \r\n\t\t * @method _addToCache\r\n\t\t * @protected\r\n\t\t */\r\n\t\t_addToCache: function() {\r\n\t\r\n\t\t\tLoaderCache.add( this.cacheID, this.content );\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * This function will grab the response from the content loaded and parse it out\r\n\t\t * \r\n\t\t * @method _parseContent\r\n\t\t * @protected\r\n\t\t */\r\n\t\t_parseContent: function() {\r\n\t\r\n\t\t\tif( this.loadTypeSet || this.loadType == LoaderBase.typeText ) {\r\n\t\r\n\t\t\t\tthis.content = this.xhr.response;\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tswitch( this.loadType ) {\r\n\t\r\n\t\t\t\t\tcase LoaderBase.typeArraybuffer:\r\n\t\r\n\t\t\t\t\t\tif( ArrayBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\tthis.content = UtilArrayBuffer.stringToArrayBuffer( this.xhr.response );\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tthrow new Error( 'This browser does not support ArrayBuffer' );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase LoaderBase.typeBlob:\r\n\t\r\n\t\t\t\t\t\tif( Blob ) {\r\n\t\r\n\t\t\t\t\t\t\tif( !this.fileMeta ) {\r\n\t\r\n\t\t\t\t\t\t\t\tthis.fileMeta = new FileMeta();\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif( this.fileMeta.mime === null ) {\r\n\t\r\n\t\t\t\t\t\t\t\tthis.fileMeta.mime = UtilHTTP.getMimeFromURL( this.url );\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.content = new Blob( [ UtilArrayBuffer.stringToArrayBuffer( this.xhr.response ) ], { type: this.fileMeta.mime } );\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tthrow new Error( 'This browser does not support Blob' );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase LoaderBase.typeJSON:\r\n\t\r\n\t\t\t\t\t\tthis.content = JSON.parse( this.xhr.response );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase LoaderBase.typeDocument:\r\n\t\r\n\t\t\t\t\t\t//this needs some work pretty sure there's a better way to handle this\r\n\t\t\t\t\t\tthis.content = this.xhr.response;\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t\r\n\tfunction checkIfGoodValue() {\r\n\t\r\n\t\treturn this.loadType == LoaderBase.typeText ||\r\n\t\t\t   this.loadType == LoaderBase.typeArraybuffer ||\r\n\t\t\t   this.loadType == LoaderBase.typeBlob ||\r\n\t\t\t   this.loadType == LoaderBase.typeJSON ||\r\n\t\t\t   this.loadType == LoaderBase.typeDocument;\r\n\t}\r\n\t\r\n\tfunction checkResponseTypeSupport() {\r\n\t\r\n\t\treturn this.xhr.responseType !== undefined;\r\n\t}\r\n\t\r\n\tfunction checkAndSetType( xhr, loadType ) {\r\n\t\r\n\t\txhr.responseType = loadType;\r\n\t\r\n\t\treturn xhr.responseType == loadType;\r\n\t}\r\n\t\r\n\tLoaderBase.typeText = 'text';\r\n\tLoaderBase.typeArraybuffer = 'arraybuffer';\r\n\tLoaderBase.typeBlob = 'blob';\r\n\tLoaderBase.typeJSON = 'json';\r\n\tLoaderBase.typeDocument = 'document';\r\n\t\r\n\tmodule.exports = LoaderBase;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * This module should contain general utility methods.\r\n\t * \r\n\t * @module utils\r\n\t */\r\n\t\r\n\tvar FILE_MIME = {\r\n\t\r\n\t\t//images\r\n\t\tgif: 'image/gif',\r\n\t\tjpg: 'image/jpeg',\r\n\t\tjpeg: 'image/jpeg',\r\n\t\tpng: 'image/png',\r\n\t\tsvg: 'image/svg+xml',\r\n\t\r\n\t\t//text\r\n\t\thtml: 'text/html',\r\n\t\tcss: 'text/css',\r\n\t\tcsv: 'text/csv',\r\n\t\txml: 'text/xml'\r\n\t};\r\n\t\r\n\tvar UtilPath = __webpack_require__(14);\r\n\t\r\n\t/**\r\n\t * This utility class contains everything related to working with HTTP for instance: dealing with mimetypes, httpheaders, etc.\r\n\t * \r\n\t * @class  UtilHTTP\r\n\t * @static\r\n\t */\r\n\tmodule.exports = {\r\n\t\r\n\t\t/**\r\n\t\t * If you pass a url to this function you'll get the mimetype associated with that url.\r\n\t\t * The default is 'application/octet-stream'. The url can be relative or absolute.\r\n\t\t *\r\n\t\t * @method getMimeFromURL\r\n\t\t * @param  {String} url The url you'd like to get a mimetype for.\r\n\t\t * @return {String} Mimetype for the url passed in\r\n\t\t */\r\n\t\tgetMimeFromURL: function( url ) {\r\n\t\r\n\t\t\treturn this.getMimeFromExtension( UtilPath.getFileExtension( url ) );\t\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * This function will return a mime type based on a file extension. For instance the file 'jpg' would return\r\n\t\t * 'image/jpeg'.\r\n\t\t *\r\n\t\t * @method getMimeFromExtension\r\n\t\t * @param  {String} type File extension\r\n\t\t * @return {String} Mime type\r\n\t\t */\r\n\t\tgetMimeFromExtension: function( type ) {\r\n\t\r\n\t\t\tvar mime = FILE_MIME[ type.toLowerCase() ];\r\n\t\r\n\t\t\treturn mime || 'application/octet-stream';\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * This function will take an HTTP header and turn it into an object for easier use.\r\n\t\t *\r\n\t\t * @method parseHeader\r\n\t\t * @param  {String} headerString This is an HTTP header\r\n\t\t * @return {Object} The return value will be an object representation of the HTTP Header\r\n\t\t */\r\n\t\tparseHeader: function( headerString ) {\r\n\t\r\n\t\t\tvar headerSplit = headerString.split( '\\n' );\r\n\t\t\tvar rVal = {};\r\n\t\t\tvar regex = /([a-zA-Z0-9\\-_]+): *(.+)/;\r\n\t\t\tvar keyValue = null;\r\n\t\r\n\t\t\tfor( var i = 0, len = headerSplit.length; i < len; i++ ) {\r\n\t\r\n\t\t\t\t//the end has an extra newline\r\n\t\t\t\tif( headerSplit[ i ] != '' ) {\r\n\t\r\n\t\t\t\t\tkeyValue = regex.exec( headerSplit[ i ] );\r\n\t\r\n\t\t\t\t\tif( keyValue ) {\r\n\t\r\n\t\t\t\t\t\trVal[ keyValue[ 1 ] ] = keyValue[ 2 ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn rVal;\r\n\t\t}\r\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar data = exports.data = {\n\t  'experiment-webgl-pex': {\n\t    title: 'Webgl-pex',\n\t    link: 'https://github.com/jmsaulnier/experiment-webgl-pex'\n\t  }\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _vuex = __webpack_require__(2);\n\t\n\tvar _vuex2 = _interopRequireDefault(_vuex);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar state = {\n\t  isOpen: false\n\t};\n\t\n\tvar actions = {\n\t  open: 'OPEN',\n\t  close: 'CLOSE'\n\t};\n\t\n\tvar mutations = {\n\t  OPEN: function OPEN(state) {\n\t    state.isOpen = true;\n\t  },\n\t  CLOSE: function CLOSE(state) {\n\t    state.isOpen = false;\n\t  }\n\t};\n\t\n\texports.default = new _vuex2.default.Store({\n\t  state: state,\n\t  actions: actions,\n\t  mutations: mutations\n\t});\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _vuex = __webpack_require__(2);\n\t\n\tvar _vuex2 = _interopRequireDefault(_vuex);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar state = {\n\t  progress: 0,\n\t  isHidden: false\n\t};\n\t\n\tvar actions = {\n\t  progressUpdate: 'PROGRESS_UPDATE',\n\t  hide: 'HIDE'\n\t};\n\t\n\tvar mutations = {\n\t  PROGRESS_UPDATE: function PROGRESS_UPDATE(state, pourcent) {\n\t    state.progress = pourcent;\n\t  },\n\t  HIDE: function HIDE(state) {\n\t    state.isHidden = true;\n\t  }\n\t};\n\t\n\texports.default = new _vuex2.default.Store({\n\t  state: state,\n\t  actions: actions,\n\t  mutations: mutations\n\t});\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = identity;\n\t\n\t/**\n\t * Set a mat4 to the identity matrix\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @returns {mat4} out\n\t */\n\tfunction identity(out) {\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 0;\n\t    out[5] = 1;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 0;\n\t    out[9] = 0;\n\t    out[10] = 1;\n\t    out[11] = 0;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = 0;\n\t    out[15] = 1;\n\t    return out;\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar UtilHTTP = __webpack_require__(7);\r\n\t\r\n\t/**\r\n\t * FileMeta is a class which will hold file meta data. Each LoaderBase contains a FileMeta object\r\n\t * that you can use to query.\r\n\t *\r\n\t * @class FileMeta\r\n\t * @constructor\r\n\t * @param {String} header HTTP Header sent when loading this file\r\n\t */\r\n\tvar FileMeta = function( header ) {\r\n\t\r\n\t\t/**\r\n\t\t * This property is the mimetype for the file\r\n\t\t * \r\n\t\t * @property mime\r\n\t\t * @type {String}\r\n\t\t */\r\n\t\tthis.mime = null;\r\n\t\r\n\t\t/**\r\n\t\t * This is the file size in bytes\r\n\t\t * \r\n\t\t * @type {Number}\r\n\t\t */\r\n\t\tthis.size = null;\r\n\t\r\n\t\t/**\r\n\t\t * This is a Date object which represents the last time this file was modified\r\n\t\t * \r\n\t\t * @type {Date}\r\n\t\t */\r\n\t\tthis.lastModified = null;\r\n\t\r\n\t\t/**\r\n\t\t * This is the HTTP header as an Object for the file.\r\n\t\t * \r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.httpHeader = null;\r\n\t\r\n\t\tif( header )\r\n\t\t\tthis.setFromHTTPHeader( header );\r\n\t};\r\n\t\r\n\tFileMeta.prototype = {\r\n\t\r\n\t\t/**\r\n\t\t * This function will be called in the constructor of FileMeta. It will parse the HTTP\r\n\t\t * headers returned by a server and save useful information for development.\r\n\t\t *  \r\n\t\t * @method setFromHTTPHeader\r\n\t\t * @param {String} header HTTP header returned by the server\r\n\t\t */\r\n\t\tsetFromHTTPHeader: function( header ) {\r\n\t\r\n\t\t\tthis.httpHeader = UtilHTTP.parseHeader( header );\r\n\t\r\n\t\t\tif( this.httpHeader[ 'content-length' ] )\r\n\t\t\t\tthis.size = this.httpHeader[ 'content-length' ];\r\n\t\r\n\t\t\tif( this.httpHeader[ 'content-type' ] )\r\n\t\t\t\tthis.mime = this.httpHeader[ 'content-type' ];\r\n\t\r\n\t\t\tif( this.httpHeader[ 'last-modified' ] )\r\n\t\t\t\tthis.lastModified = new Date( this.httpHeader[ 'last-modified' ] );\r\n\t\t}\r\n\t};\r\n\t\r\n\tmodule.exports = FileMeta;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * This module should contain general utility methods.\r\n\t * \r\n\t * @module utils\r\n\t */\r\n\t\r\n\t/**\r\n\t * UtilArrayBuffer utility class contains functions when working with ArrayBuffers\r\n\t *\r\n\t * @class UtilArrayBuffer\r\n\t * @static\r\n\t */\r\n\tmodule.exports = {\r\n\t\r\n\t\t/**\r\n\t\t * This function will convert an Array Buffer to a String\r\n\t\t * \r\n\t\t * @method arrayBufferToString\r\n\t\t * @param  {ArrayBuffer} buffer The ArrayBuffer we'd like to convert to a string\r\n\t\t * @return {String} The string representation of an ArrayBuffer\r\n\t\t */\r\n\t\tarrayBufferToString: function( buffer ) {\r\n\t\r\n\t\t\treturn String.fromCharCode.apply(null, new Uint16Array(buf));\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * This will conver a string to an ArrayBuffer\r\n\t\t * \r\n\t\t * @method stringToArrayBuffer\r\n\t\t * @param  {String} string The string to convert to an array buffer\r\n\t\t * @return {ArrayBuffer} The string data which was converted into an ArrayBuffer\r\n\t\t */\r\n\t\tstringToArrayBuffer: function( string ) {\r\n\t\r\n\t\t\tvar buf = new ArrayBuffer( string.length * 2 ); // 2 bytes for each char\r\n\t\t\tvar bufView = new Uint16Array( buf );\r\n\t\r\n\t\t\tfor (var i = 0, strLen = string.length; i < strLen; i++) {\r\n\t\t\t\t\r\n\t\t\t\tbufView[ i ] = string.charCodeAt( i );\r\n\t\t\t}\r\n\t\r\n\t\t\treturn buf;\r\n\t\t}\r\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\t/**\r\n\t * This module should contain general utility methods.\r\n\t * \r\n\t * @module utils\r\n\t */\r\n\t\r\n\t/**\r\n\t * This utility class deals with file paths.\r\n\t * \r\n\t * @class UtilPath\r\n\t * @static\r\n\t */\r\n\tmodule.exports = {\r\n\t\r\n\t\t/**\r\n\t\t * Return the file extension based on the path passed in. If the file does not have an extension null will be passed back\r\n\t\t *\r\n\t\t * @method getFileExtension\r\n\t\t * @param {String} url URL we'd like a filextension from. This can be relative or absolute.\r\n\t\t * @return {String} \r\n\t\t */\r\n\t\tgetFileExtension: function( url ) {\r\n\t\r\n\t\t\tvar splitByBackSlash = url.split( '/' );\r\n\t\t\tvar fileData = /\\.([a-zA-Z]+)/.exec( splitByBackSlash[ splitByBackSlash.length - 1 ] );\r\n\t\t\t\r\n\t\t\treturn fileData[ 1 ] || null;\t\r\n\t\t},\r\n\t\r\n\t\tgetURLForDensity: function( url, densityModifiers ) {\r\n\t\r\n\t\t\tvar regexFileExtension = /(\\.\\w+$)/;\r\n\t\t\tvar pixelRatio = window.devicePixelRatio;\r\n\t\t\tvar modifier = null;\r\n\t\r\n\t\t\tif( densityModifiers ) {\r\n\t\r\n\t\t\t\tvar idx = pixelRatio - 1;\r\n\t\t\t\tmodifier = densityModifiers[ idx ];\r\n\t\r\n\t\t\t\twhile( ( modifier === undefined || modifier === null ) && idx >= 0 ) {\r\n\t\r\n\t\t\t\t\tmodifier = densityModifiers[ idx ];\r\n\t\r\n\t\t\t\t\tidx--;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif( !modifier ) {\r\n\t\r\n\t\t\t\t\tmodifier = densityModifiers[ 0 ];\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif( typeof modifier == 'number' ) {\r\n\t\r\n\t\t\t\t\tmodifier = '@' + modifier + 'x';\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tmodifier = '@' + pixelRatio + 'x';\r\n\t\t\t}\r\n\t\t\t\r\n\t\r\n\t\t\treturn url.replace( regexFileExtension,  modifier + '$1' );\r\n\t\t}\r\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*jslint onevar:true, undef:true, newcap:true, regexp:true, bitwise:true, maxerr:50, indent:4, white:false, nomen:false, plusplus:false */\n\t/*global define:false, require:false, exports:false, module:false, signals:false */\n\t\n\t/** @license\n\t * JS Signals <http://millermedeiros.github.com/js-signals/>\n\t * Released under the MIT license\n\t * Author: Miller Medeiros\n\t * Version: 1.0.0 - Build: 268 (2012/11/29 05:48 PM)\n\t */\n\t\n\t(function(global){\n\t\n\t    // SignalBinding -------------------------------------------------\n\t    //================================================================\n\t\n\t    /**\n\t     * Object that represents a binding between a Signal and a listener function.\n\t     * <br />- <strong>This is an internal constructor and shouldn't be called by regular users.</strong>\n\t     * <br />- inspired by Joa Ebert AS3 SignalBinding and Robert Penner's Slot classes.\n\t     * @author Miller Medeiros\n\t     * @constructor\n\t     * @internal\n\t     * @name SignalBinding\n\t     * @param {Signal} signal Reference to Signal object that listener is currently bound to.\n\t     * @param {Function} listener Handler function bound to the signal.\n\t     * @param {boolean} isOnce If binding should be executed just once.\n\t     * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n\t     * @param {Number} [priority] The priority level of the event listener. (default = 0).\n\t     */\n\t    function SignalBinding(signal, listener, isOnce, listenerContext, priority) {\n\t\n\t        /**\n\t         * Handler function bound to the signal.\n\t         * @type Function\n\t         * @private\n\t         */\n\t        this._listener = listener;\n\t\n\t        /**\n\t         * If binding should be executed just once.\n\t         * @type boolean\n\t         * @private\n\t         */\n\t        this._isOnce = isOnce;\n\t\n\t        /**\n\t         * Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n\t         * @memberOf SignalBinding.prototype\n\t         * @name context\n\t         * @type Object|undefined|null\n\t         */\n\t        this.context = listenerContext;\n\t\n\t        /**\n\t         * Reference to Signal object that listener is currently bound to.\n\t         * @type Signal\n\t         * @private\n\t         */\n\t        this._signal = signal;\n\t\n\t        /**\n\t         * Listener priority\n\t         * @type Number\n\t         * @private\n\t         */\n\t        this._priority = priority || 0;\n\t    }\n\t\n\t    SignalBinding.prototype = {\n\t\n\t        /**\n\t         * If binding is active and should be executed.\n\t         * @type boolean\n\t         */\n\t        active : true,\n\t\n\t        /**\n\t         * Default parameters passed to listener during `Signal.dispatch` and `SignalBinding.execute`. (curried parameters)\n\t         * @type Array|null\n\t         */\n\t        params : null,\n\t\n\t        /**\n\t         * Call listener passing arbitrary parameters.\n\t         * <p>If binding was added using `Signal.addOnce()` it will be automatically removed from signal dispatch queue, this method is used internally for the signal dispatch.</p>\n\t         * @param {Array} [paramsArr] Array of parameters that should be passed to the listener\n\t         * @return {*} Value returned by the listener.\n\t         */\n\t        execute : function (paramsArr) {\n\t            var handlerReturn, params;\n\t            if (this.active && !!this._listener) {\n\t                params = this.params? this.params.concat(paramsArr) : paramsArr;\n\t                handlerReturn = this._listener.apply(this.context, params);\n\t                if (this._isOnce) {\n\t                    this.detach();\n\t                }\n\t            }\n\t            return handlerReturn;\n\t        },\n\t\n\t        /**\n\t         * Detach binding from signal.\n\t         * - alias to: mySignal.remove(myBinding.getListener());\n\t         * @return {Function|null} Handler function bound to the signal or `null` if binding was previously detached.\n\t         */\n\t        detach : function () {\n\t            return this.isBound()? this._signal.remove(this._listener, this.context) : null;\n\t        },\n\t\n\t        /**\n\t         * @return {Boolean} `true` if binding is still bound to the signal and have a listener.\n\t         */\n\t        isBound : function () {\n\t            return (!!this._signal && !!this._listener);\n\t        },\n\t\n\t        /**\n\t         * @return {boolean} If SignalBinding will only be executed once.\n\t         */\n\t        isOnce : function () {\n\t            return this._isOnce;\n\t        },\n\t\n\t        /**\n\t         * @return {Function} Handler function bound to the signal.\n\t         */\n\t        getListener : function () {\n\t            return this._listener;\n\t        },\n\t\n\t        /**\n\t         * @return {Signal} Signal that listener is currently bound to.\n\t         */\n\t        getSignal : function () {\n\t            return this._signal;\n\t        },\n\t\n\t        /**\n\t         * Delete instance properties\n\t         * @private\n\t         */\n\t        _destroy : function () {\n\t            delete this._signal;\n\t            delete this._listener;\n\t            delete this.context;\n\t        },\n\t\n\t        /**\n\t         * @return {string} String representation of the object.\n\t         */\n\t        toString : function () {\n\t            return '[SignalBinding isOnce:' + this._isOnce +', isBound:'+ this.isBound() +', active:' + this.active + ']';\n\t        }\n\t\n\t    };\n\t\n\t\n\t/*global SignalBinding:false*/\n\t\n\t    // Signal --------------------------------------------------------\n\t    //================================================================\n\t\n\t    function validateListener(listener, fnName) {\n\t        if (typeof listener !== 'function') {\n\t            throw new Error( 'listener is a required param of {fn}() and should be a Function.'.replace('{fn}', fnName) );\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Custom event broadcaster\n\t     * <br />- inspired by Robert Penner's AS3 Signals.\n\t     * @name Signal\n\t     * @author Miller Medeiros\n\t     * @constructor\n\t     */\n\t    function Signal() {\n\t        /**\n\t         * @type Array.<SignalBinding>\n\t         * @private\n\t         */\n\t        this._bindings = [];\n\t        this._prevParams = null;\n\t\n\t        // enforce dispatch to aways work on same context (#47)\n\t        var self = this;\n\t        this.dispatch = function(){\n\t            Signal.prototype.dispatch.apply(self, arguments);\n\t        };\n\t    }\n\t\n\t    Signal.prototype = {\n\t\n\t        /**\n\t         * Signals Version Number\n\t         * @type String\n\t         * @const\n\t         */\n\t        VERSION : '1.0.0',\n\t\n\t        /**\n\t         * If Signal should keep record of previously dispatched parameters and\n\t         * automatically execute listener during `add()`/`addOnce()` if Signal was\n\t         * already dispatched before.\n\t         * @type boolean\n\t         */\n\t        memorize : false,\n\t\n\t        /**\n\t         * @type boolean\n\t         * @private\n\t         */\n\t        _shouldPropagate : true,\n\t\n\t        /**\n\t         * If Signal is active and should broadcast events.\n\t         * <p><strong>IMPORTANT:</strong> Setting this property during a dispatch will only affect the next dispatch, if you want to stop the propagation of a signal use `halt()` instead.</p>\n\t         * @type boolean\n\t         */\n\t        active : true,\n\t\n\t        /**\n\t         * @param {Function} listener\n\t         * @param {boolean} isOnce\n\t         * @param {Object} [listenerContext]\n\t         * @param {Number} [priority]\n\t         * @return {SignalBinding}\n\t         * @private\n\t         */\n\t        _registerListener : function (listener, isOnce, listenerContext, priority) {\n\t\n\t            var prevIndex = this._indexOfListener(listener, listenerContext),\n\t                binding;\n\t\n\t            if (prevIndex !== -1) {\n\t                binding = this._bindings[prevIndex];\n\t                if (binding.isOnce() !== isOnce) {\n\t                    throw new Error('You cannot add'+ (isOnce? '' : 'Once') +'() then add'+ (!isOnce? '' : 'Once') +'() the same listener without removing the relationship first.');\n\t                }\n\t            } else {\n\t                binding = new SignalBinding(this, listener, isOnce, listenerContext, priority);\n\t                this._addBinding(binding);\n\t            }\n\t\n\t            if(this.memorize && this._prevParams){\n\t                binding.execute(this._prevParams);\n\t            }\n\t\n\t            return binding;\n\t        },\n\t\n\t        /**\n\t         * @param {SignalBinding} binding\n\t         * @private\n\t         */\n\t        _addBinding : function (binding) {\n\t            //simplified insertion sort\n\t            var n = this._bindings.length;\n\t            do { --n; } while (this._bindings[n] && binding._priority <= this._bindings[n]._priority);\n\t            this._bindings.splice(n + 1, 0, binding);\n\t        },\n\t\n\t        /**\n\t         * @param {Function} listener\n\t         * @return {number}\n\t         * @private\n\t         */\n\t        _indexOfListener : function (listener, context) {\n\t            var n = this._bindings.length,\n\t                cur;\n\t            while (n--) {\n\t                cur = this._bindings[n];\n\t                if (cur._listener === listener && cur.context === context) {\n\t                    return n;\n\t                }\n\t            }\n\t            return -1;\n\t        },\n\t\n\t        /**\n\t         * Check if listener was attached to Signal.\n\t         * @param {Function} listener\n\t         * @param {Object} [context]\n\t         * @return {boolean} if Signal has the specified listener.\n\t         */\n\t        has : function (listener, context) {\n\t            return this._indexOfListener(listener, context) !== -1;\n\t        },\n\t\n\t        /**\n\t         * Add a listener to the signal.\n\t         * @param {Function} listener Signal handler function.\n\t         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n\t         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n\t         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n\t         */\n\t        add : function (listener, listenerContext, priority) {\n\t            validateListener(listener, 'add');\n\t            return this._registerListener(listener, false, listenerContext, priority);\n\t        },\n\t\n\t        /**\n\t         * Add listener to the signal that should be removed after first execution (will be executed only once).\n\t         * @param {Function} listener Signal handler function.\n\t         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n\t         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n\t         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n\t         */\n\t        addOnce : function (listener, listenerContext, priority) {\n\t            validateListener(listener, 'addOnce');\n\t            return this._registerListener(listener, true, listenerContext, priority);\n\t        },\n\t\n\t        /**\n\t         * Remove a single listener from the dispatch queue.\n\t         * @param {Function} listener Handler function that should be removed.\n\t         * @param {Object} [context] Execution context (since you can add the same handler multiple times if executing in a different context).\n\t         * @return {Function} Listener handler function.\n\t         */\n\t        remove : function (listener, context) {\n\t            validateListener(listener, 'remove');\n\t\n\t            var i = this._indexOfListener(listener, context);\n\t            if (i !== -1) {\n\t                this._bindings[i]._destroy(); //no reason to a SignalBinding exist if it isn't attached to a signal\n\t                this._bindings.splice(i, 1);\n\t            }\n\t            return listener;\n\t        },\n\t\n\t        /**\n\t         * Remove all listeners from the Signal.\n\t         */\n\t        removeAll : function () {\n\t            var n = this._bindings.length;\n\t            while (n--) {\n\t                this._bindings[n]._destroy();\n\t            }\n\t            this._bindings.length = 0;\n\t        },\n\t\n\t        /**\n\t         * @return {number} Number of listeners attached to the Signal.\n\t         */\n\t        getNumListeners : function () {\n\t            return this._bindings.length;\n\t        },\n\t\n\t        /**\n\t         * Stop propagation of the event, blocking the dispatch to next listeners on the queue.\n\t         * <p><strong>IMPORTANT:</strong> should be called only during signal dispatch, calling it before/after dispatch won't affect signal broadcast.</p>\n\t         * @see Signal.prototype.disable\n\t         */\n\t        halt : function () {\n\t            this._shouldPropagate = false;\n\t        },\n\t\n\t        /**\n\t         * Dispatch/Broadcast Signal to all listeners added to the queue.\n\t         * @param {...*} [params] Parameters that should be passed to each handler.\n\t         */\n\t        dispatch : function (params) {\n\t            if (! this.active) {\n\t                return;\n\t            }\n\t\n\t            var paramsArr = Array.prototype.slice.call(arguments),\n\t                n = this._bindings.length,\n\t                bindings;\n\t\n\t            if (this.memorize) {\n\t                this._prevParams = paramsArr;\n\t            }\n\t\n\t            if (! n) {\n\t                //should come after memorize\n\t                return;\n\t            }\n\t\n\t            bindings = this._bindings.slice(); //clone array in case add/remove items during dispatch\n\t            this._shouldPropagate = true; //in case `halt` was called before dispatch or during the previous dispatch.\n\t\n\t            //execute all callbacks until end of the list or until a callback returns `false` or stops propagation\n\t            //reverse loop since listeners with higher priority will be added at the end of the list\n\t            do { n--; } while (bindings[n] && this._shouldPropagate && bindings[n].execute(paramsArr) !== false);\n\t        },\n\t\n\t        /**\n\t         * Forget memorized arguments.\n\t         * @see Signal.memorize\n\t         */\n\t        forget : function(){\n\t            this._prevParams = null;\n\t        },\n\t\n\t        /**\n\t         * Remove all bindings from signal and destroy any reference to external objects (destroy Signal object).\n\t         * <p><strong>IMPORTANT:</strong> calling any method on the signal instance after calling dispose will throw errors.</p>\n\t         */\n\t        dispose : function () {\n\t            this.removeAll();\n\t            delete this._bindings;\n\t            delete this._prevParams;\n\t        },\n\t\n\t        /**\n\t         * @return {string} String representation of the object.\n\t         */\n\t        toString : function () {\n\t            return '[Signal active:'+ this.active +' numListeners:'+ this.getNumListeners() +']';\n\t        }\n\t\n\t    };\n\t\n\t\n\t    // Namespace -----------------------------------------------------\n\t    //================================================================\n\t\n\t    /**\n\t     * Signals namespace\n\t     * @namespace\n\t     * @name signals\n\t     */\n\t    var signals = Signal;\n\t\n\t    /**\n\t     * Custom event broadcaster\n\t     * @see Signal\n\t     */\n\t    // alias for backwards compatibility (see #gh-44)\n\t    signals.Signal = Signal;\n\t\n\t\n\t\n\t    //exports to multiple environments\n\t    if(true){ //AMD\n\t        !(__WEBPACK_AMD_DEFINE_RESULT__ = function () { return signals; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof module !== 'undefined' && module.exports){ //node\n\t        module.exports = signals;\n\t    } else { //browser\n\t        //use string because of Google closure compiler ADVANCED_MODE\n\t        /*jslint sub:true */\n\t        global['signals'] = signals;\n\t    }\n\t\n\t}(this));\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tvar toSpace = __webpack_require__(65);\n\t\n\t\n\t/**\n\t * Expose `toCamelCase`.\n\t */\n\t\n\tmodule.exports = toCamelCase;\n\t\n\t\n\t/**\n\t * Convert a `string` to camel case.\n\t *\n\t * @param {String} string\n\t * @return {String}\n\t */\n\t\n\t\n\tfunction toCamelCase (string) {\n\t  return toSpace(string).replace(/\\s(\\w)/g, function (matches, letter) {\n\t    return letter.toUpperCase();\n\t  });\n\t}\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! VelocityJS.org (1.2.3). (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License */\n\t\n\t/*************************\n\t   Velocity jQuery Shim\n\t*************************/\n\t\n\t/*! VelocityJS.org jQuery Shim (1.0.1). (C) 2014 The jQuery Foundation. MIT @license: en.wikipedia.org/wiki/MIT_License. */\n\t\n\t/* This file contains the jQuery functions that Velocity relies on, thereby removing Velocity's dependency on a full copy of jQuery, and allowing it to work in any environment. */\n\t/* These shimmed functions are only used if jQuery isn't present. If both this shim and jQuery are loaded, Velocity defaults to jQuery proper. */\n\t/* Browser support: Using this shim instead of jQuery proper removes support for IE8. */\n\t\n\t;(function (window) {\n\t    /***************\n\t         Setup\n\t    ***************/\n\t\n\t    /* If jQuery is already loaded, there's no point in loading this shim. */\n\t    if (window.jQuery) {\n\t        return;\n\t    }\n\t\n\t    /* jQuery base. */\n\t    var $ = function (selector, context) {\n\t        return new $.fn.init(selector, context);\n\t    };\n\t\n\t    /********************\n\t       Private Methods\n\t    ********************/\n\t\n\t    /* jQuery */\n\t    $.isWindow = function (obj) {\n\t        /* jshint eqeqeq: false */\n\t        return obj != null && obj == obj.window;\n\t    };\n\t\n\t    /* jQuery */\n\t    $.type = function (obj) {\n\t        if (obj == null) {\n\t            return obj + \"\";\n\t        }\n\t\n\t        return typeof obj === \"object\" || typeof obj === \"function\" ?\n\t            class2type[toString.call(obj)] || \"object\" :\n\t            typeof obj;\n\t    };\n\t\n\t    /* jQuery */\n\t    $.isArray = Array.isArray || function (obj) {\n\t        return $.type(obj) === \"array\";\n\t    };\n\t\n\t    /* jQuery */\n\t    function isArraylike (obj) {\n\t        var length = obj.length,\n\t            type = $.type(obj);\n\t\n\t        if (type === \"function\" || $.isWindow(obj)) {\n\t            return false;\n\t        }\n\t\n\t        if (obj.nodeType === 1 && length) {\n\t            return true;\n\t        }\n\t\n\t        return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && (length - 1) in obj;\n\t    }\n\t\n\t    /***************\n\t       $ Methods\n\t    ***************/\n\t\n\t    /* jQuery: Support removed for IE<9. */\n\t    $.isPlainObject = function (obj) {\n\t        var key;\n\t\n\t        if (!obj || $.type(obj) !== \"object\" || obj.nodeType || $.isWindow(obj)) {\n\t            return false;\n\t        }\n\t\n\t        try {\n\t            if (obj.constructor &&\n\t                !hasOwn.call(obj, \"constructor\") &&\n\t                !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n\t                return false;\n\t            }\n\t        } catch (e) {\n\t            return false;\n\t        }\n\t\n\t        for (key in obj) {}\n\t\n\t        return key === undefined || hasOwn.call(obj, key);\n\t    };\n\t\n\t    /* jQuery */\n\t    $.each = function(obj, callback, args) {\n\t        var value,\n\t            i = 0,\n\t            length = obj.length,\n\t            isArray = isArraylike(obj);\n\t\n\t        if (args) {\n\t            if (isArray) {\n\t                for (; i < length; i++) {\n\t                    value = callback.apply(obj[i], args);\n\t\n\t                    if (value === false) {\n\t                        break;\n\t                    }\n\t                }\n\t            } else {\n\t                for (i in obj) {\n\t                    value = callback.apply(obj[i], args);\n\t\n\t                    if (value === false) {\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t\n\t        } else {\n\t            if (isArray) {\n\t                for (; i < length; i++) {\n\t                    value = callback.call(obj[i], i, obj[i]);\n\t\n\t                    if (value === false) {\n\t                        break;\n\t                    }\n\t                }\n\t            } else {\n\t                for (i in obj) {\n\t                    value = callback.call(obj[i], i, obj[i]);\n\t\n\t                    if (value === false) {\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        return obj;\n\t    };\n\t\n\t    /* Custom */\n\t    $.data = function (node, key, value) {\n\t        /* $.getData() */\n\t        if (value === undefined) {\n\t            var id = node[$.expando],\n\t                store = id && cache[id];\n\t\n\t            if (key === undefined) {\n\t                return store;\n\t            } else if (store) {\n\t                if (key in store) {\n\t                    return store[key];\n\t                }\n\t            }\n\t        /* $.setData() */\n\t        } else if (key !== undefined) {\n\t            var id = node[$.expando] || (node[$.expando] = ++$.uuid);\n\t\n\t            cache[id] = cache[id] || {};\n\t            cache[id][key] = value;\n\t\n\t            return value;\n\t        }\n\t    };\n\t\n\t    /* Custom */\n\t    $.removeData = function (node, keys) {\n\t        var id = node[$.expando],\n\t            store = id && cache[id];\n\t\n\t        if (store) {\n\t            $.each(keys, function(_, key) {\n\t                delete store[key];\n\t            });\n\t        }\n\t    };\n\t\n\t    /* jQuery */\n\t    $.extend = function () {\n\t        var src, copyIsArray, copy, name, options, clone,\n\t            target = arguments[0] || {},\n\t            i = 1,\n\t            length = arguments.length,\n\t            deep = false;\n\t\n\t        if (typeof target === \"boolean\") {\n\t            deep = target;\n\t\n\t            target = arguments[i] || {};\n\t            i++;\n\t        }\n\t\n\t        if (typeof target !== \"object\" && $.type(target) !== \"function\") {\n\t            target = {};\n\t        }\n\t\n\t        if (i === length) {\n\t            target = this;\n\t            i--;\n\t        }\n\t\n\t        for (; i < length; i++) {\n\t            if ((options = arguments[i]) != null) {\n\t                for (name in options) {\n\t                    src = target[name];\n\t                    copy = options[name];\n\t\n\t                    if (target === copy) {\n\t                        continue;\n\t                    }\n\t\n\t                    if (deep && copy && ($.isPlainObject(copy) || (copyIsArray = $.isArray(copy)))) {\n\t                        if (copyIsArray) {\n\t                            copyIsArray = false;\n\t                            clone = src && $.isArray(src) ? src : [];\n\t\n\t                        } else {\n\t                            clone = src && $.isPlainObject(src) ? src : {};\n\t                        }\n\t\n\t                        target[name] = $.extend(deep, clone, copy);\n\t\n\t                    } else if (copy !== undefined) {\n\t                        target[name] = copy;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        return target;\n\t    };\n\t\n\t    /* jQuery 1.4.3 */\n\t    $.queue = function (elem, type, data) {\n\t        function $makeArray (arr, results) {\n\t            var ret = results || [];\n\t\n\t            if (arr != null) {\n\t                if (isArraylike(Object(arr))) {\n\t                    /* $.merge */\n\t                    (function(first, second) {\n\t                        var len = +second.length,\n\t                            j = 0,\n\t                            i = first.length;\n\t\n\t                        while (j < len) {\n\t                            first[i++] = second[j++];\n\t                        }\n\t\n\t                        if (len !== len) {\n\t                            while (second[j] !== undefined) {\n\t                                first[i++] = second[j++];\n\t                            }\n\t                        }\n\t\n\t                        first.length = i;\n\t\n\t                        return first;\n\t                    })(ret, typeof arr === \"string\" ? [arr] : arr);\n\t                } else {\n\t                    [].push.call(ret, arr);\n\t                }\n\t            }\n\t\n\t            return ret;\n\t        }\n\t\n\t        if (!elem) {\n\t            return;\n\t        }\n\t\n\t        type = (type || \"fx\") + \"queue\";\n\t\n\t        var q = $.data(elem, type);\n\t\n\t        if (!data) {\n\t            return q || [];\n\t        }\n\t\n\t        if (!q || $.isArray(data)) {\n\t            q = $.data(elem, type, $makeArray(data));\n\t        } else {\n\t            q.push(data);\n\t        }\n\t\n\t        return q;\n\t    };\n\t\n\t    /* jQuery 1.4.3 */\n\t    $.dequeue = function (elems, type) {\n\t        /* Custom: Embed element iteration. */\n\t        $.each(elems.nodeType ? [ elems ] : elems, function(i, elem) {\n\t            type = type || \"fx\";\n\t\n\t            var queue = $.queue(elem, type),\n\t                fn = queue.shift();\n\t\n\t            if (fn === \"inprogress\") {\n\t                fn = queue.shift();\n\t            }\n\t\n\t            if (fn) {\n\t                if (type === \"fx\") {\n\t                    queue.unshift(\"inprogress\");\n\t                }\n\t\n\t                fn.call(elem, function() {\n\t                    $.dequeue(elem, type);\n\t                });\n\t            }\n\t        });\n\t    };\n\t\n\t    /******************\n\t       $.fn Methods\n\t    ******************/\n\t\n\t    /* jQuery */\n\t    $.fn = $.prototype = {\n\t        init: function (selector) {\n\t            /* Just return the element wrapped inside an array; don't proceed with the actual jQuery node wrapping process. */\n\t            if (selector.nodeType) {\n\t                this[0] = selector;\n\t\n\t                return this;\n\t            } else {\n\t                throw new Error(\"Not a DOM node.\");\n\t            }\n\t        },\n\t\n\t        offset: function () {\n\t            /* jQuery altered code: Dropped disconnected DOM node checking. */\n\t            var box = this[0].getBoundingClientRect ? this[0].getBoundingClientRect() : { top: 0, left: 0 };\n\t\n\t            return {\n\t                top: box.top + (window.pageYOffset || document.scrollTop  || 0)  - (document.clientTop  || 0),\n\t                left: box.left + (window.pageXOffset || document.scrollLeft  || 0) - (document.clientLeft || 0)\n\t            };\n\t        },\n\t\n\t        position: function () {\n\t            /* jQuery */\n\t            function offsetParent() {\n\t                var offsetParent = this.offsetParent || document;\n\t\n\t                while (offsetParent && (!offsetParent.nodeType.toLowerCase === \"html\" && offsetParent.style.position === \"static\")) {\n\t                    offsetParent = offsetParent.offsetParent;\n\t                }\n\t\n\t                return offsetParent || document;\n\t            }\n\t\n\t            /* Zepto */\n\t            var elem = this[0],\n\t                offsetParent = offsetParent.apply(elem),\n\t                offset = this.offset(),\n\t                parentOffset = /^(?:body|html)$/i.test(offsetParent.nodeName) ? { top: 0, left: 0 } : $(offsetParent).offset()\n\t\n\t            offset.top -= parseFloat(elem.style.marginTop) || 0;\n\t            offset.left -= parseFloat(elem.style.marginLeft) || 0;\n\t\n\t            if (offsetParent.style) {\n\t                parentOffset.top += parseFloat(offsetParent.style.borderTopWidth) || 0\n\t                parentOffset.left += parseFloat(offsetParent.style.borderLeftWidth) || 0\n\t            }\n\t\n\t            return {\n\t                top: offset.top - parentOffset.top,\n\t                left: offset.left - parentOffset.left\n\t            };\n\t        }\n\t    };\n\t\n\t    /**********************\n\t       Private Variables\n\t    **********************/\n\t\n\t    /* For $.data() */\n\t    var cache = {};\n\t    $.expando = \"velocity\" + (new Date().getTime());\n\t    $.uuid = 0;\n\t\n\t    /* For $.queue() */\n\t    var class2type = {},\n\t        hasOwn = class2type.hasOwnProperty,\n\t        toString = class2type.toString;\n\t\n\t    var types = \"Boolean Number String Function Array Date RegExp Object Error\".split(\" \");\n\t    for (var i = 0; i < types.length; i++) {\n\t        class2type[\"[object \" + types[i] + \"]\"] = types[i].toLowerCase();\n\t    }\n\t\n\t    /* Makes $(node) possible, without having to call init. */\n\t    $.fn.init.prototype = $.fn;\n\t\n\t    /* Globalize Velocity onto the window, and assign its Utilities property. */\n\t    window.Velocity = { Utilities: $ };\n\t})(window);\n\t\n\t/******************\n\t    Velocity.js\n\t******************/\n\t\n\t;(function (factory) {\n\t    /* CommonJS module. */\n\t    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n\t        module.exports = factory();\n\t    /* AMD module. */\n\t    } else if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    /* Browser globals. */\n\t    } else {\n\t        factory();\n\t    }\n\t}(function() {\n\treturn function (global, window, document, undefined) {\n\t\n\t    /***************\n\t        Summary\n\t    ***************/\n\t\n\t    /*\n\t    - CSS: CSS stack that works independently from the rest of Velocity.\n\t    - animate(): Core animation method that iterates over the targeted elements and queues the incoming call onto each element individually.\n\t      - Pre-Queueing: Prepare the element for animation by instantiating its data cache and processing the call's options.\n\t      - Queueing: The logic that runs once the call has reached its point of execution in the element's $.queue() stack.\n\t                  Most logic is placed here to avoid risking it becoming stale (if the element's properties have changed).\n\t      - Pushing: Consolidation of the tween data followed by its push onto the global in-progress calls container.\n\t    - tick(): The single requestAnimationFrame loop responsible for tweening all in-progress calls.\n\t    - completeCall(): Handles the cleanup process for each Velocity call.\n\t    */\n\t\n\t    /*********************\n\t       Helper Functions\n\t    *********************/\n\t\n\t    /* IE detection. Gist: https://gist.github.com/julianshapiro/9098609 */\n\t    var IE = (function() {\n\t        if (document.documentMode) {\n\t            return document.documentMode;\n\t        } else {\n\t            for (var i = 7; i > 4; i--) {\n\t                var div = document.createElement(\"div\");\n\t\n\t                div.innerHTML = \"<!--[if IE \" + i + \"]><span></span><![endif]-->\";\n\t\n\t                if (div.getElementsByTagName(\"span\").length) {\n\t                    div = null;\n\t\n\t                    return i;\n\t                }\n\t            }\n\t        }\n\t\n\t        return undefined;\n\t    })();\n\t\n\t    /* rAF shim. Gist: https://gist.github.com/julianshapiro/9497513 */\n\t    var rAFShim = (function() {\n\t        var timeLast = 0;\n\t\n\t        return window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {\n\t            var timeCurrent = (new Date()).getTime(),\n\t                timeDelta;\n\t\n\t            /* Dynamically set delay on a per-tick basis to match 60fps. */\n\t            /* Technique by Erik Moller. MIT license: https://gist.github.com/paulirish/1579671 */\n\t            timeDelta = Math.max(0, 16 - (timeCurrent - timeLast));\n\t            timeLast = timeCurrent + timeDelta;\n\t\n\t            return setTimeout(function() { callback(timeCurrent + timeDelta); }, timeDelta);\n\t        };\n\t    })();\n\t\n\t    /* Array compacting. Copyright Lo-Dash. MIT License: https://github.com/lodash/lodash/blob/master/LICENSE.txt */\n\t    function compactSparseArray (array) {\n\t        var index = -1,\n\t            length = array ? array.length : 0,\n\t            result = [];\n\t\n\t        while (++index < length) {\n\t            var value = array[index];\n\t\n\t            if (value) {\n\t                result.push(value);\n\t            }\n\t        }\n\t\n\t        return result;\n\t    }\n\t\n\t    function sanitizeElements (elements) {\n\t        /* Unwrap jQuery/Zepto objects. */\n\t        if (Type.isWrapped(elements)) {\n\t            elements = [].slice.call(elements);\n\t        /* Wrap a single element in an array so that $.each() can iterate with the element instead of its node's children. */\n\t        } else if (Type.isNode(elements)) {\n\t            elements = [ elements ];\n\t        }\n\t\n\t        return elements;\n\t    }\n\t\n\t    var Type = {\n\t        isString: function (variable) {\n\t            return (typeof variable === \"string\");\n\t        },\n\t        isArray: Array.isArray || function (variable) {\n\t            return Object.prototype.toString.call(variable) === \"[object Array]\";\n\t        },\n\t        isFunction: function (variable) {\n\t            return Object.prototype.toString.call(variable) === \"[object Function]\";\n\t        },\n\t        isNode: function (variable) {\n\t            return variable && variable.nodeType;\n\t        },\n\t        /* Copyright Martin Bohm. MIT License: https://gist.github.com/Tomalak/818a78a226a0738eaade */\n\t        isNodeList: function (variable) {\n\t            return typeof variable === \"object\" &&\n\t                /^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(Object.prototype.toString.call(variable)) &&\n\t                variable.length !== undefined &&\n\t                (variable.length === 0 || (typeof variable[0] === \"object\" && variable[0].nodeType > 0));\n\t        },\n\t        /* Determine if variable is a wrapped jQuery or Zepto element. */\n\t        isWrapped: function (variable) {\n\t            return variable && (variable.jquery || (window.Zepto && window.Zepto.zepto.isZ(variable)));\n\t        },\n\t        isSVG: function (variable) {\n\t            return window.SVGElement && (variable instanceof window.SVGElement);\n\t        },\n\t        isEmptyObject: function (variable) {\n\t            for (var name in variable) {\n\t                return false;\n\t            }\n\t\n\t            return true;\n\t        }\n\t    };\n\t\n\t    /*****************\n\t       Dependencies\n\t    *****************/\n\t\n\t    var $,\n\t        isJQuery = false;\n\t\n\t    if (global.fn && global.fn.jquery) {\n\t        $ = global;\n\t        isJQuery = true;\n\t    } else {\n\t        $ = window.Velocity.Utilities;\n\t    }\n\t\n\t    if (IE <= 8 && !isJQuery) {\n\t        throw new Error(\"Velocity: IE8 and below require jQuery to be loaded before Velocity.\");\n\t    } else if (IE <= 7) {\n\t        /* Revert to jQuery's $.animate(), and lose Velocity's extra features. */\n\t        jQuery.fn.velocity = jQuery.fn.animate;\n\t\n\t        /* Now that $.fn.velocity is aliased, abort this Velocity declaration. */\n\t        return;\n\t    }\n\t\n\t    /*****************\n\t        Constants\n\t    *****************/\n\t\n\t    var DURATION_DEFAULT = 400,\n\t        EASING_DEFAULT = \"swing\";\n\t\n\t    /*************\n\t        State\n\t    *************/\n\t\n\t    var Velocity = {\n\t        /* Container for page-wide Velocity state data. */\n\t        State: {\n\t            /* Detect mobile devices to determine if mobileHA should be turned on. */\n\t            isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\n\t            /* The mobileHA option's behavior changes on older Android devices (Gingerbread, versions 2.3.3-2.3.7). */\n\t            isAndroid: /Android/i.test(navigator.userAgent),\n\t            isGingerbread: /Android 2\\.3\\.[3-7]/i.test(navigator.userAgent),\n\t            isChrome: window.chrome,\n\t            isFirefox: /Firefox/i.test(navigator.userAgent),\n\t            /* Create a cached element for re-use when checking for CSS property prefixes. */\n\t            prefixElement: document.createElement(\"div\"),\n\t            /* Cache every prefix match to avoid repeating lookups. */\n\t            prefixMatches: {},\n\t            /* Cache the anchor used for animating window scrolling. */\n\t            scrollAnchor: null,\n\t            /* Cache the browser-specific property names associated with the scroll anchor. */\n\t            scrollPropertyLeft: null,\n\t            scrollPropertyTop: null,\n\t            /* Keep track of whether our RAF tick is running. */\n\t            isTicking: false,\n\t            /* Container for every in-progress call to Velocity. */\n\t            calls: []\n\t        },\n\t        /* Velocity's custom CSS stack. Made global for unit testing. */\n\t        CSS: { /* Defined below. */ },\n\t        /* A shim of the jQuery utility functions used by Velocity -- provided by Velocity's optional jQuery shim. */\n\t        Utilities: $,\n\t        /* Container for the user's custom animation redirects that are referenced by name in place of the properties map argument. */\n\t        Redirects: { /* Manually registered by the user. */ },\n\t        Easings: { /* Defined below. */ },\n\t        /* Attempt to use ES6 Promises by default. Users can override this with a third-party promises library. */\n\t        Promise: window.Promise,\n\t        /* Velocity option defaults, which can be overriden by the user. */\n\t        defaults: {\n\t            queue: \"\",\n\t            duration: DURATION_DEFAULT,\n\t            easing: EASING_DEFAULT,\n\t            begin: undefined,\n\t            complete: undefined,\n\t            progress: undefined,\n\t            display: undefined,\n\t            visibility: undefined,\n\t            loop: false,\n\t            delay: false,\n\t            mobileHA: true,\n\t            /* Advanced: Set to false to prevent property values from being cached between consecutive Velocity-initiated chain calls. */\n\t            _cacheValues: true\n\t        },\n\t        /* A design goal of Velocity is to cache data wherever possible in order to avoid DOM requerying. Accordingly, each element has a data cache. */\n\t        init: function (element) {\n\t            $.data(element, \"velocity\", {\n\t                /* Store whether this is an SVG element, since its properties are retrieved and updated differently than standard HTML elements. */\n\t                isSVG: Type.isSVG(element),\n\t                /* Keep track of whether the element is currently being animated by Velocity.\n\t                   This is used to ensure that property values are not transferred between non-consecutive (stale) calls. */\n\t                isAnimating: false,\n\t                /* A reference to the element's live computedStyle object. Learn more here: https://developer.mozilla.org/en/docs/Web/API/window.getComputedStyle */\n\t                computedStyle: null,\n\t                /* Tween data is cached for each animation on the element so that data can be passed across calls --\n\t                   in particular, end values are used as subsequent start values in consecutive Velocity calls. */\n\t                tweensContainer: null,\n\t                /* The full root property values of each CSS hook being animated on this element are cached so that:\n\t                   1) Concurrently-animating hooks sharing the same root can have their root values' merged into one while tweening.\n\t                   2) Post-hook-injection root values can be transferred over to consecutively chained Velocity calls as starting root values. */\n\t                rootPropertyValueCache: {},\n\t                /* A cache for transform updates, which must be manually flushed via CSS.flushTransformCache(). */\n\t                transformCache: {}\n\t            });\n\t        },\n\t        /* A parallel to jQuery's $.css(), used for getting/setting Velocity's hooked CSS properties. */\n\t        hook: null, /* Defined below. */\n\t        /* Velocity-wide animation time remapping for testing purposes. */\n\t        mock: false,\n\t        version: { major: 1, minor: 2, patch: 2 },\n\t        /* Set to 1 or 2 (most verbose) to output debug info to console. */\n\t        debug: false\n\t    };\n\t\n\t    /* Retrieve the appropriate scroll anchor and property name for the browser: https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY */\n\t    if (window.pageYOffset !== undefined) {\n\t        Velocity.State.scrollAnchor = window;\n\t        Velocity.State.scrollPropertyLeft = \"pageXOffset\";\n\t        Velocity.State.scrollPropertyTop = \"pageYOffset\";\n\t    } else {\n\t        Velocity.State.scrollAnchor = document.documentElement || document.body.parentNode || document.body;\n\t        Velocity.State.scrollPropertyLeft = \"scrollLeft\";\n\t        Velocity.State.scrollPropertyTop = \"scrollTop\";\n\t    }\n\t\n\t    /* Shorthand alias for jQuery's $.data() utility. */\n\t    function Data (element) {\n\t        /* Hardcode a reference to the plugin name. */\n\t        var response = $.data(element, \"velocity\");\n\t\n\t        /* jQuery <=1.4.2 returns null instead of undefined when no match is found. We normalize this behavior. */\n\t        return response === null ? undefined : response;\n\t    };\n\t\n\t    /**************\n\t        Easing\n\t    **************/\n\t\n\t    /* Step easing generator. */\n\t    function generateStep (steps) {\n\t        return function (p) {\n\t            return Math.round(p * steps) * (1 / steps);\n\t        };\n\t    }\n\t\n\t    /* Bezier curve function generator. Copyright Gaetan Renaudeau. MIT License: http://en.wikipedia.org/wiki/MIT_License */\n\t    function generateBezier (mX1, mY1, mX2, mY2) {\n\t        var NEWTON_ITERATIONS = 4,\n\t            NEWTON_MIN_SLOPE = 0.001,\n\t            SUBDIVISION_PRECISION = 0.0000001,\n\t            SUBDIVISION_MAX_ITERATIONS = 10,\n\t            kSplineTableSize = 11,\n\t            kSampleStepSize = 1.0 / (kSplineTableSize - 1.0),\n\t            float32ArraySupported = \"Float32Array\" in window;\n\t\n\t        /* Must contain four arguments. */\n\t        if (arguments.length !== 4) {\n\t            return false;\n\t        }\n\t\n\t        /* Arguments must be numbers. */\n\t        for (var i = 0; i < 4; ++i) {\n\t            if (typeof arguments[i] !== \"number\" || isNaN(arguments[i]) || !isFinite(arguments[i])) {\n\t                return false;\n\t            }\n\t        }\n\t\n\t        /* X values must be in the [0, 1] range. */\n\t        mX1 = Math.min(mX1, 1);\n\t        mX2 = Math.min(mX2, 1);\n\t        mX1 = Math.max(mX1, 0);\n\t        mX2 = Math.max(mX2, 0);\n\t\n\t        var mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n\t\n\t        function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\n\t        function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\n\t        function C (aA1)      { return 3.0 * aA1; }\n\t\n\t        function calcBezier (aT, aA1, aA2) {\n\t            return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\n\t        }\n\t\n\t        function getSlope (aT, aA1, aA2) {\n\t            return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n\t        }\n\t\n\t        function newtonRaphsonIterate (aX, aGuessT) {\n\t            for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n\t                var currentSlope = getSlope(aGuessT, mX1, mX2);\n\t\n\t                if (currentSlope === 0.0) return aGuessT;\n\t\n\t                var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n\t                aGuessT -= currentX / currentSlope;\n\t            }\n\t\n\t            return aGuessT;\n\t        }\n\t\n\t        function calcSampleValues () {\n\t            for (var i = 0; i < kSplineTableSize; ++i) {\n\t                mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n\t            }\n\t        }\n\t\n\t        function binarySubdivide (aX, aA, aB) {\n\t            var currentX, currentT, i = 0;\n\t\n\t            do {\n\t                currentT = aA + (aB - aA) / 2.0;\n\t                currentX = calcBezier(currentT, mX1, mX2) - aX;\n\t                if (currentX > 0.0) {\n\t                  aB = currentT;\n\t                } else {\n\t                  aA = currentT;\n\t                }\n\t            } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n\t\n\t            return currentT;\n\t        }\n\t\n\t        function getTForX (aX) {\n\t            var intervalStart = 0.0,\n\t                currentSample = 1,\n\t                lastSample = kSplineTableSize - 1;\n\t\n\t            for (; currentSample != lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n\t                intervalStart += kSampleStepSize;\n\t            }\n\t\n\t            --currentSample;\n\t\n\t            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]),\n\t                guessForT = intervalStart + dist * kSampleStepSize,\n\t                initialSlope = getSlope(guessForT, mX1, mX2);\n\t\n\t            if (initialSlope >= NEWTON_MIN_SLOPE) {\n\t                return newtonRaphsonIterate(aX, guessForT);\n\t            } else if (initialSlope == 0.0) {\n\t                return guessForT;\n\t            } else {\n\t                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize);\n\t            }\n\t        }\n\t\n\t        var _precomputed = false;\n\t\n\t        function precompute() {\n\t            _precomputed = true;\n\t            if (mX1 != mY1 || mX2 != mY2) calcSampleValues();\n\t        }\n\t\n\t        var f = function (aX) {\n\t            if (!_precomputed) precompute();\n\t            if (mX1 === mY1 && mX2 === mY2) return aX;\n\t            if (aX === 0) return 0;\n\t            if (aX === 1) return 1;\n\t\n\t            return calcBezier(getTForX(aX), mY1, mY2);\n\t        };\n\t\n\t        f.getControlPoints = function() { return [{ x: mX1, y: mY1 }, { x: mX2, y: mY2 }]; };\n\t\n\t        var str = \"generateBezier(\" + [mX1, mY1, mX2, mY2] + \")\";\n\t        f.toString = function () { return str; };\n\t\n\t        return f;\n\t    }\n\t\n\t    /* Runge-Kutta spring physics function generator. Adapted from Framer.js, copyright Koen Bok. MIT License: http://en.wikipedia.org/wiki/MIT_License */\n\t    /* Given a tension, friction, and duration, a simulation at 60FPS will first run without a defined duration in order to calculate the full path. A second pass\n\t       then adjusts the time delta -- using the relation between actual time and duration -- to calculate the path for the duration-constrained animation. */\n\t    var generateSpringRK4 = (function () {\n\t        function springAccelerationForState (state) {\n\t            return (-state.tension * state.x) - (state.friction * state.v);\n\t        }\n\t\n\t        function springEvaluateStateWithDerivative (initialState, dt, derivative) {\n\t            var state = {\n\t                x: initialState.x + derivative.dx * dt,\n\t                v: initialState.v + derivative.dv * dt,\n\t                tension: initialState.tension,\n\t                friction: initialState.friction\n\t            };\n\t\n\t            return { dx: state.v, dv: springAccelerationForState(state) };\n\t        }\n\t\n\t        function springIntegrateState (state, dt) {\n\t            var a = {\n\t                    dx: state.v,\n\t                    dv: springAccelerationForState(state)\n\t                },\n\t                b = springEvaluateStateWithDerivative(state, dt * 0.5, a),\n\t                c = springEvaluateStateWithDerivative(state, dt * 0.5, b),\n\t                d = springEvaluateStateWithDerivative(state, dt, c),\n\t                dxdt = 1.0 / 6.0 * (a.dx + 2.0 * (b.dx + c.dx) + d.dx),\n\t                dvdt = 1.0 / 6.0 * (a.dv + 2.0 * (b.dv + c.dv) + d.dv);\n\t\n\t            state.x = state.x + dxdt * dt;\n\t            state.v = state.v + dvdt * dt;\n\t\n\t            return state;\n\t        }\n\t\n\t        return function springRK4Factory (tension, friction, duration) {\n\t\n\t            var initState = {\n\t                    x: -1,\n\t                    v: 0,\n\t                    tension: null,\n\t                    friction: null\n\t                },\n\t                path = [0],\n\t                time_lapsed = 0,\n\t                tolerance = 1 / 10000,\n\t                DT = 16 / 1000,\n\t                have_duration, dt, last_state;\n\t\n\t            tension = parseFloat(tension) || 500;\n\t            friction = parseFloat(friction) || 20;\n\t            duration = duration || null;\n\t\n\t            initState.tension = tension;\n\t            initState.friction = friction;\n\t\n\t            have_duration = duration !== null;\n\t\n\t            /* Calculate the actual time it takes for this animation to complete with the provided conditions. */\n\t            if (have_duration) {\n\t                /* Run the simulation without a duration. */\n\t                time_lapsed = springRK4Factory(tension, friction);\n\t                /* Compute the adjusted time delta. */\n\t                dt = time_lapsed / duration * DT;\n\t            } else {\n\t                dt = DT;\n\t            }\n\t\n\t            while (true) {\n\t                /* Next/step function .*/\n\t                last_state = springIntegrateState(last_state || initState, dt);\n\t                /* Store the position. */\n\t                path.push(1 + last_state.x);\n\t                time_lapsed += 16;\n\t                /* If the change threshold is reached, break. */\n\t                if (!(Math.abs(last_state.x) > tolerance && Math.abs(last_state.v) > tolerance)) {\n\t                    break;\n\t                }\n\t            }\n\t\n\t            /* If duration is not defined, return the actual time required for completing this animation. Otherwise, return a closure that holds the\n\t               computed path and returns a snapshot of the position according to a given percentComplete. */\n\t            return !have_duration ? time_lapsed : function(percentComplete) { return path[ (percentComplete * (path.length - 1)) | 0 ]; };\n\t        };\n\t    }());\n\t\n\t    /* jQuery easings. */\n\t    Velocity.Easings = {\n\t        linear: function(p) { return p; },\n\t        swing: function(p) { return 0.5 - Math.cos( p * Math.PI ) / 2 },\n\t        /* Bonus \"spring\" easing, which is a less exaggerated version of easeInOutElastic. */\n\t        spring: function(p) { return 1 - (Math.cos(p * 4.5 * Math.PI) * Math.exp(-p * 6)); }\n\t    };\n\t\n\t    /* CSS3 and Robert Penner easings. */\n\t    $.each(\n\t        [\n\t            [ \"ease\", [ 0.25, 0.1, 0.25, 1.0 ] ],\n\t            [ \"ease-in\", [ 0.42, 0.0, 1.00, 1.0 ] ],\n\t            [ \"ease-out\", [ 0.00, 0.0, 0.58, 1.0 ] ],\n\t            [ \"ease-in-out\", [ 0.42, 0.0, 0.58, 1.0 ] ],\n\t            [ \"easeInSine\", [ 0.47, 0, 0.745, 0.715 ] ],\n\t            [ \"easeOutSine\", [ 0.39, 0.575, 0.565, 1 ] ],\n\t            [ \"easeInOutSine\", [ 0.445, 0.05, 0.55, 0.95 ] ],\n\t            [ \"easeInQuad\", [ 0.55, 0.085, 0.68, 0.53 ] ],\n\t            [ \"easeOutQuad\", [ 0.25, 0.46, 0.45, 0.94 ] ],\n\t            [ \"easeInOutQuad\", [ 0.455, 0.03, 0.515, 0.955 ] ],\n\t            [ \"easeInCubic\", [ 0.55, 0.055, 0.675, 0.19 ] ],\n\t            [ \"easeOutCubic\", [ 0.215, 0.61, 0.355, 1 ] ],\n\t            [ \"easeInOutCubic\", [ 0.645, 0.045, 0.355, 1 ] ],\n\t            [ \"easeInQuart\", [ 0.895, 0.03, 0.685, 0.22 ] ],\n\t            [ \"easeOutQuart\", [ 0.165, 0.84, 0.44, 1 ] ],\n\t            [ \"easeInOutQuart\", [ 0.77, 0, 0.175, 1 ] ],\n\t            [ \"easeInQuint\", [ 0.755, 0.05, 0.855, 0.06 ] ],\n\t            [ \"easeOutQuint\", [ 0.23, 1, 0.32, 1 ] ],\n\t            [ \"easeInOutQuint\", [ 0.86, 0, 0.07, 1 ] ],\n\t            [ \"easeInExpo\", [ 0.95, 0.05, 0.795, 0.035 ] ],\n\t            [ \"easeOutExpo\", [ 0.19, 1, 0.22, 1 ] ],\n\t            [ \"easeInOutExpo\", [ 1, 0, 0, 1 ] ],\n\t            [ \"easeInCirc\", [ 0.6, 0.04, 0.98, 0.335 ] ],\n\t            [ \"easeOutCirc\", [ 0.075, 0.82, 0.165, 1 ] ],\n\t            [ \"easeInOutCirc\", [ 0.785, 0.135, 0.15, 0.86 ] ]\n\t        ], function(i, easingArray) {\n\t            Velocity.Easings[easingArray[0]] = generateBezier.apply(null, easingArray[1]);\n\t        });\n\t\n\t    /* Determine the appropriate easing type given an easing input. */\n\t    function getEasing(value, duration) {\n\t        var easing = value;\n\t\n\t        /* The easing option can either be a string that references a pre-registered easing,\n\t           or it can be a two-/four-item array of integers to be converted into a bezier/spring function. */\n\t        if (Type.isString(value)) {\n\t            /* Ensure that the easing has been assigned to jQuery's Velocity.Easings object. */\n\t            if (!Velocity.Easings[value]) {\n\t                easing = false;\n\t            }\n\t        } else if (Type.isArray(value) && value.length === 1) {\n\t            easing = generateStep.apply(null, value);\n\t        } else if (Type.isArray(value) && value.length === 2) {\n\t            /* springRK4 must be passed the animation's duration. */\n\t            /* Note: If the springRK4 array contains non-numbers, generateSpringRK4() returns an easing\n\t               function generated with default tension and friction values. */\n\t            easing = generateSpringRK4.apply(null, value.concat([ duration ]));\n\t        } else if (Type.isArray(value) && value.length === 4) {\n\t            /* Note: If the bezier array contains non-numbers, generateBezier() returns false. */\n\t            easing = generateBezier.apply(null, value);\n\t        } else {\n\t            easing = false;\n\t        }\n\t\n\t        /* Revert to the Velocity-wide default easing type, or fall back to \"swing\" (which is also jQuery's default)\n\t           if the Velocity-wide default has been incorrectly modified. */\n\t        if (easing === false) {\n\t            if (Velocity.Easings[Velocity.defaults.easing]) {\n\t                easing = Velocity.defaults.easing;\n\t            } else {\n\t                easing = EASING_DEFAULT;\n\t            }\n\t        }\n\t\n\t        return easing;\n\t    }\n\t\n\t    /*****************\n\t        CSS Stack\n\t    *****************/\n\t\n\t    /* The CSS object is a highly condensed and performant CSS stack that fully replaces jQuery's.\n\t       It handles the validation, getting, and setting of both standard CSS properties and CSS property hooks. */\n\t    /* Note: A \"CSS\" shorthand is aliased so that our code is easier to read. */\n\t    var CSS = Velocity.CSS = {\n\t\n\t        /*************\n\t            RegEx\n\t        *************/\n\t\n\t        RegEx: {\n\t            isHex: /^#([A-f\\d]{3}){1,2}$/i,\n\t            /* Unwrap a property value's surrounding text, e.g. \"rgba(4, 3, 2, 1)\" ==> \"4, 3, 2, 1\" and \"rect(4px 3px 2px 1px)\" ==> \"4px 3px 2px 1px\". */\n\t            valueUnwrap: /^[A-z]+\\((.*)\\)$/i,\n\t            wrappedValueAlreadyExtracted: /[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,\n\t            /* Split a multi-value property into an array of subvalues, e.g. \"rgba(4, 3, 2, 1) 4px 3px 2px 1px\" ==> [ \"rgba(4, 3, 2, 1)\", \"4px\", \"3px\", \"2px\", \"1px\" ]. */\n\t            valueSplit: /([A-z]+\\(.+\\))|(([A-z0-9#-.]+?)(?=\\s|$))/ig\n\t        },\n\t\n\t        /************\n\t            Lists\n\t        ************/\n\t\n\t        Lists: {\n\t            colors: [ \"fill\", \"stroke\", \"stopColor\", \"color\", \"backgroundColor\", \"borderColor\", \"borderTopColor\", \"borderRightColor\", \"borderBottomColor\", \"borderLeftColor\", \"outlineColor\" ],\n\t            transformsBase: [ \"translateX\", \"translateY\", \"scale\", \"scaleX\", \"scaleY\", \"skewX\", \"skewY\", \"rotateZ\" ],\n\t            transforms3D: [ \"transformPerspective\", \"translateZ\", \"scaleZ\", \"rotateX\", \"rotateY\" ]\n\t        },\n\t\n\t        /************\n\t            Hooks\n\t        ************/\n\t\n\t        /* Hooks allow a subproperty (e.g. \"boxShadowBlur\") of a compound-value CSS property\n\t           (e.g. \"boxShadow: X Y Blur Spread Color\") to be animated as if it were a discrete property. */\n\t        /* Note: Beyond enabling fine-grained property animation, hooking is necessary since Velocity only\n\t           tweens properties with single numeric values; unlike CSS transitions, Velocity does not interpolate compound-values. */\n\t        Hooks: {\n\t            /********************\n\t                Registration\n\t            ********************/\n\t\n\t            /* Templates are a concise way of indicating which subproperties must be individually registered for each compound-value CSS property. */\n\t            /* Each template consists of the compound-value's base name, its constituent subproperty names, and those subproperties' default values. */\n\t            templates: {\n\t                \"textShadow\": [ \"Color X Y Blur\", \"black 0px 0px 0px\" ],\n\t                \"boxShadow\": [ \"Color X Y Blur Spread\", \"black 0px 0px 0px 0px\" ],\n\t                \"clip\": [ \"Top Right Bottom Left\", \"0px 0px 0px 0px\" ],\n\t                \"backgroundPosition\": [ \"X Y\", \"0% 0%\" ],\n\t                \"transformOrigin\": [ \"X Y Z\", \"50% 50% 0px\" ],\n\t                \"perspectiveOrigin\": [ \"X Y\", \"50% 50%\" ]\n\t            },\n\t\n\t            /* A \"registered\" hook is one that has been converted from its template form into a live,\n\t               tweenable property. It contains data to associate it with its root property. */\n\t            registered: {\n\t                /* Note: A registered hook looks like this ==> textShadowBlur: [ \"textShadow\", 3 ],\n\t                   which consists of the subproperty's name, the associated root property's name,\n\t                   and the subproperty's position in the root's value. */\n\t            },\n\t            /* Convert the templates into individual hooks then append them to the registered object above. */\n\t            register: function () {\n\t                /* Color hooks registration: Colors are defaulted to white -- as opposed to black -- since colors that are\n\t                   currently set to \"transparent\" default to their respective template below when color-animated,\n\t                   and white is typically a closer match to transparent than black is. An exception is made for text (\"color\"),\n\t                   which is almost always set closer to black than white. */\n\t                for (var i = 0; i < CSS.Lists.colors.length; i++) {\n\t                    var rgbComponents = (CSS.Lists.colors[i] === \"color\") ? \"0 0 0 1\" : \"255 255 255 1\";\n\t                    CSS.Hooks.templates[CSS.Lists.colors[i]] = [ \"Red Green Blue Alpha\", rgbComponents ];\n\t                }\n\t\n\t                var rootProperty,\n\t                    hookTemplate,\n\t                    hookNames;\n\t\n\t                /* In IE, color values inside compound-value properties are positioned at the end the value instead of at the beginning.\n\t                   Thus, we re-arrange the templates accordingly. */\n\t                if (IE) {\n\t                    for (rootProperty in CSS.Hooks.templates) {\n\t                        hookTemplate = CSS.Hooks.templates[rootProperty];\n\t                        hookNames = hookTemplate[0].split(\" \");\n\t\n\t                        var defaultValues = hookTemplate[1].match(CSS.RegEx.valueSplit);\n\t\n\t                        if (hookNames[0] === \"Color\") {\n\t                            /* Reposition both the hook's name and its default value to the end of their respective strings. */\n\t                            hookNames.push(hookNames.shift());\n\t                            defaultValues.push(defaultValues.shift());\n\t\n\t                            /* Replace the existing template for the hook's root property. */\n\t                            CSS.Hooks.templates[rootProperty] = [ hookNames.join(\" \"), defaultValues.join(\" \") ];\n\t                        }\n\t                    }\n\t                }\n\t\n\t                /* Hook registration. */\n\t                for (rootProperty in CSS.Hooks.templates) {\n\t                    hookTemplate = CSS.Hooks.templates[rootProperty];\n\t                    hookNames = hookTemplate[0].split(\" \");\n\t\n\t                    for (var i in hookNames) {\n\t                        var fullHookName = rootProperty + hookNames[i],\n\t                            hookPosition = i;\n\t\n\t                        /* For each hook, register its full name (e.g. textShadowBlur) with its root property (e.g. textShadow)\n\t                           and the hook's position in its template's default value string. */\n\t                        CSS.Hooks.registered[fullHookName] = [ rootProperty, hookPosition ];\n\t                    }\n\t                }\n\t            },\n\t\n\t            /*****************************\n\t               Injection and Extraction\n\t            *****************************/\n\t\n\t            /* Look up the root property associated with the hook (e.g. return \"textShadow\" for \"textShadowBlur\"). */\n\t            /* Since a hook cannot be set directly (the browser won't recognize it), style updating for hooks is routed through the hook's root property. */\n\t            getRoot: function (property) {\n\t                var hookData = CSS.Hooks.registered[property];\n\t\n\t                if (hookData) {\n\t                    return hookData[0];\n\t                } else {\n\t                    /* If there was no hook match, return the property name untouched. */\n\t                    return property;\n\t                }\n\t            },\n\t            /* Convert any rootPropertyValue, null or otherwise, into a space-delimited list of hook values so that\n\t               the targeted hook can be injected or extracted at its standard position. */\n\t            cleanRootPropertyValue: function(rootProperty, rootPropertyValue) {\n\t                /* If the rootPropertyValue is wrapped with \"rgb()\", \"clip()\", etc., remove the wrapping to normalize the value before manipulation. */\n\t                if (CSS.RegEx.valueUnwrap.test(rootPropertyValue)) {\n\t                    rootPropertyValue = rootPropertyValue.match(CSS.RegEx.valueUnwrap)[1];\n\t                }\n\t\n\t                /* If rootPropertyValue is a CSS null-value (from which there's inherently no hook value to extract),\n\t                   default to the root's default value as defined in CSS.Hooks.templates. */\n\t                /* Note: CSS null-values include \"none\", \"auto\", and \"transparent\". They must be converted into their\n\t                   zero-values (e.g. textShadow: \"none\" ==> textShadow: \"0px 0px 0px black\") for hook manipulation to proceed. */\n\t                if (CSS.Values.isCSSNullValue(rootPropertyValue)) {\n\t                    rootPropertyValue = CSS.Hooks.templates[rootProperty][1];\n\t                }\n\t\n\t                return rootPropertyValue;\n\t            },\n\t            /* Extracted the hook's value from its root property's value. This is used to get the starting value of an animating hook. */\n\t            extractValue: function (fullHookName, rootPropertyValue) {\n\t                var hookData = CSS.Hooks.registered[fullHookName];\n\t\n\t                if (hookData) {\n\t                    var hookRoot = hookData[0],\n\t                        hookPosition = hookData[1];\n\t\n\t                    rootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);\n\t\n\t                    /* Split rootPropertyValue into its constituent hook values then grab the desired hook at its standard position. */\n\t                    return rootPropertyValue.toString().match(CSS.RegEx.valueSplit)[hookPosition];\n\t                } else {\n\t                    /* If the provided fullHookName isn't a registered hook, return the rootPropertyValue that was passed in. */\n\t                    return rootPropertyValue;\n\t                }\n\t            },\n\t            /* Inject the hook's value into its root property's value. This is used to piece back together the root property\n\t               once Velocity has updated one of its individually hooked values through tweening. */\n\t            injectValue: function (fullHookName, hookValue, rootPropertyValue) {\n\t                var hookData = CSS.Hooks.registered[fullHookName];\n\t\n\t                if (hookData) {\n\t                    var hookRoot = hookData[0],\n\t                        hookPosition = hookData[1],\n\t                        rootPropertyValueParts,\n\t                        rootPropertyValueUpdated;\n\t\n\t                    rootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);\n\t\n\t                    /* Split rootPropertyValue into its individual hook values, replace the targeted value with hookValue,\n\t                       then reconstruct the rootPropertyValue string. */\n\t                    rootPropertyValueParts = rootPropertyValue.toString().match(CSS.RegEx.valueSplit);\n\t                    rootPropertyValueParts[hookPosition] = hookValue;\n\t                    rootPropertyValueUpdated = rootPropertyValueParts.join(\" \");\n\t\n\t                    return rootPropertyValueUpdated;\n\t                } else {\n\t                    /* If the provided fullHookName isn't a registered hook, return the rootPropertyValue that was passed in. */\n\t                    return rootPropertyValue;\n\t                }\n\t            }\n\t        },\n\t\n\t        /*******************\n\t           Normalizations\n\t        *******************/\n\t\n\t        /* Normalizations standardize CSS property manipulation by pollyfilling browser-specific implementations (e.g. opacity)\n\t           and reformatting special properties (e.g. clip, rgba) to look like standard ones. */\n\t        Normalizations: {\n\t            /* Normalizations are passed a normalization target (either the property's name, its extracted value, or its injected value),\n\t               the targeted element (which may need to be queried), and the targeted property value. */\n\t            registered: {\n\t                clip: function (type, element, propertyValue) {\n\t                    switch (type) {\n\t                        case \"name\":\n\t                            return \"clip\";\n\t                        /* Clip needs to be unwrapped and stripped of its commas during extraction. */\n\t                        case \"extract\":\n\t                            var extracted;\n\t\n\t                            /* If Velocity also extracted this value, skip extraction. */\n\t                            if (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {\n\t                                extracted = propertyValue;\n\t                            } else {\n\t                                /* Remove the \"rect()\" wrapper. */\n\t                                extracted = propertyValue.toString().match(CSS.RegEx.valueUnwrap);\n\t\n\t                                /* Strip off commas. */\n\t                                extracted = extracted ? extracted[1].replace(/,(\\s+)?/g, \" \") : propertyValue;\n\t                            }\n\t\n\t                            return extracted;\n\t                        /* Clip needs to be re-wrapped during injection. */\n\t                        case \"inject\":\n\t                            return \"rect(\" + propertyValue + \")\";\n\t                    }\n\t                },\n\t\n\t                blur: function(type, element, propertyValue) {\n\t                    switch (type) {\n\t                        case \"name\":\n\t                            return Velocity.State.isFirefox ? \"filter\" : \"-webkit-filter\";\n\t                        case \"extract\":\n\t                            var extracted = parseFloat(propertyValue);\n\t\n\t                            /* If extracted is NaN, meaning the value isn't already extracted. */\n\t                            if (!(extracted || extracted === 0)) {\n\t                                var blurComponent = propertyValue.toString().match(/blur\\(([0-9]+[A-z]+)\\)/i);\n\t\n\t                                /* If the filter string had a blur component, return just the blur value and unit type. */\n\t                                if (blurComponent) {\n\t                                    extracted = blurComponent[1];\n\t                                /* If the component doesn't exist, default blur to 0. */\n\t                                } else {\n\t                                    extracted = 0;\n\t                                }\n\t                            }\n\t\n\t                            return extracted;\n\t                        /* Blur needs to be re-wrapped during injection. */\n\t                        case \"inject\":\n\t                            /* For the blur effect to be fully de-applied, it needs to be set to \"none\" instead of 0. */\n\t                            if (!parseFloat(propertyValue)) {\n\t                                return \"none\";\n\t                            } else {\n\t                                return \"blur(\" + propertyValue + \")\";\n\t                            }\n\t                    }\n\t                },\n\t\n\t                /* <=IE8 do not support the standard opacity property. They use filter:alpha(opacity=INT) instead. */\n\t                opacity: function (type, element, propertyValue) {\n\t                    if (IE <= 8) {\n\t                        switch (type) {\n\t                            case \"name\":\n\t                                return \"filter\";\n\t                            case \"extract\":\n\t                                /* <=IE8 return a \"filter\" value of \"alpha(opacity=\\d{1,3})\".\n\t                                   Extract the value and convert it to a decimal value to match the standard CSS opacity property's formatting. */\n\t                                var extracted = propertyValue.toString().match(/alpha\\(opacity=(.*)\\)/i);\n\t\n\t                                if (extracted) {\n\t                                    /* Convert to decimal value. */\n\t                                    propertyValue = extracted[1] / 100;\n\t                                } else {\n\t                                    /* When extracting opacity, default to 1 since a null value means opacity hasn't been set. */\n\t                                    propertyValue = 1;\n\t                                }\n\t\n\t                                return propertyValue;\n\t                            case \"inject\":\n\t                                /* Opacified elements are required to have their zoom property set to a non-zero value. */\n\t                                element.style.zoom = 1;\n\t\n\t                                /* Setting the filter property on elements with certain font property combinations can result in a\n\t                                   highly unappealing ultra-bolding effect. There's no way to remedy this throughout a tween, but dropping the\n\t                                   value altogether (when opacity hits 1) at leasts ensures that the glitch is gone post-tweening. */\n\t                                if (parseFloat(propertyValue) >= 1) {\n\t                                    return \"\";\n\t                                } else {\n\t                                  /* As per the filter property's spec, convert the decimal value to a whole number and wrap the value. */\n\t                                  return \"alpha(opacity=\" + parseInt(parseFloat(propertyValue) * 100, 10) + \")\";\n\t                                }\n\t                        }\n\t                    /* With all other browsers, normalization is not required; return the same values that were passed in. */\n\t                    } else {\n\t                        switch (type) {\n\t                            case \"name\":\n\t                                return \"opacity\";\n\t                            case \"extract\":\n\t                                return propertyValue;\n\t                            case \"inject\":\n\t                                return propertyValue;\n\t                        }\n\t                    }\n\t                }\n\t            },\n\t\n\t            /*****************************\n\t                Batched Registrations\n\t            *****************************/\n\t\n\t            /* Note: Batched normalizations extend the CSS.Normalizations.registered object. */\n\t            register: function () {\n\t\n\t                /*****************\n\t                    Transforms\n\t                *****************/\n\t\n\t                /* Transforms are the subproperties contained by the CSS \"transform\" property. Transforms must undergo normalization\n\t                   so that they can be referenced in a properties map by their individual names. */\n\t                /* Note: When transforms are \"set\", they are actually assigned to a per-element transformCache. When all transform\n\t                   setting is complete complete, CSS.flushTransformCache() must be manually called to flush the values to the DOM.\n\t                   Transform setting is batched in this way to improve performance: the transform style only needs to be updated\n\t                   once when multiple transform subproperties are being animated simultaneously. */\n\t                /* Note: IE9 and Android Gingerbread have support for 2D -- but not 3D -- transforms. Since animating unsupported\n\t                   transform properties results in the browser ignoring the *entire* transform string, we prevent these 3D values\n\t                   from being normalized for these browsers so that tweening skips these properties altogether\n\t                   (since it will ignore them as being unsupported by the browser.) */\n\t                if (!(IE <= 9) && !Velocity.State.isGingerbread) {\n\t                    /* Note: Since the standalone CSS \"perspective\" property and the CSS transform \"perspective\" subproperty\n\t                    share the same name, the latter is given a unique token within Velocity: \"transformPerspective\". */\n\t                    CSS.Lists.transformsBase = CSS.Lists.transformsBase.concat(CSS.Lists.transforms3D);\n\t                }\n\t\n\t                for (var i = 0; i < CSS.Lists.transformsBase.length; i++) {\n\t                    /* Wrap the dynamically generated normalization function in a new scope so that transformName's value is\n\t                    paired with its respective function. (Otherwise, all functions would take the final for loop's transformName.) */\n\t                    (function() {\n\t                        var transformName = CSS.Lists.transformsBase[i];\n\t\n\t                        CSS.Normalizations.registered[transformName] = function (type, element, propertyValue) {\n\t                            switch (type) {\n\t                                /* The normalized property name is the parent \"transform\" property -- the property that is actually set in CSS. */\n\t                                case \"name\":\n\t                                    return \"transform\";\n\t                                /* Transform values are cached onto a per-element transformCache object. */\n\t                                case \"extract\":\n\t                                    /* If this transform has yet to be assigned a value, return its null value. */\n\t                                    if (Data(element) === undefined || Data(element).transformCache[transformName] === undefined) {\n\t                                        /* Scale CSS.Lists.transformsBase default to 1 whereas all other transform properties default to 0. */\n\t                                        return /^scale/i.test(transformName) ? 1 : 0;\n\t                                    /* When transform values are set, they are wrapped in parentheses as per the CSS spec.\n\t                                       Thus, when extracting their values (for tween calculations), we strip off the parentheses. */\n\t                                    } else {\n\t                                        return Data(element).transformCache[transformName].replace(/[()]/g, \"\");\n\t                                    }\n\t                                case \"inject\":\n\t                                    var invalid = false;\n\t\n\t                                    /* If an individual transform property contains an unsupported unit type, the browser ignores the *entire* transform property.\n\t                                       Thus, protect users from themselves by skipping setting for transform values supplied with invalid unit types. */\n\t                                    /* Switch on the base transform type; ignore the axis by removing the last letter from the transform's name. */\n\t                                    switch (transformName.substr(0, transformName.length - 1)) {\n\t                                        /* Whitelist unit types for each transform. */\n\t                                        case \"translate\":\n\t                                            invalid = !/(%|px|em|rem|vw|vh|\\d)$/i.test(propertyValue);\n\t                                            break;\n\t                                        /* Since an axis-free \"scale\" property is supported as well, a little hack is used here to detect it by chopping off its last letter. */\n\t                                        case \"scal\":\n\t                                        case \"scale\":\n\t                                            /* Chrome on Android has a bug in which scaled elements blur if their initial scale\n\t                                               value is below 1 (which can happen with forcefeeding). Thus, we detect a yet-unset scale property\n\t                                               and ensure that its first value is always 1. More info: http://stackoverflow.com/questions/10417890/css3-animations-with-transform-causes-blurred-elements-on-webkit/10417962#10417962 */\n\t                                            if (Velocity.State.isAndroid && Data(element).transformCache[transformName] === undefined && propertyValue < 1) {\n\t                                                propertyValue = 1;\n\t                                            }\n\t\n\t                                            invalid = !/(\\d)$/i.test(propertyValue);\n\t                                            break;\n\t                                        case \"skew\":\n\t                                            invalid = !/(deg|\\d)$/i.test(propertyValue);\n\t                                            break;\n\t                                        case \"rotate\":\n\t                                            invalid = !/(deg|\\d)$/i.test(propertyValue);\n\t                                            break;\n\t                                    }\n\t\n\t                                    if (!invalid) {\n\t                                        /* As per the CSS spec, wrap the value in parentheses. */\n\t                                        Data(element).transformCache[transformName] = \"(\" + propertyValue + \")\";\n\t                                    }\n\t\n\t                                    /* Although the value is set on the transformCache object, return the newly-updated value for the calling code to process as normal. */\n\t                                    return Data(element).transformCache[transformName];\n\t                            }\n\t                        };\n\t                    })();\n\t                }\n\t\n\t                /*************\n\t                    Colors\n\t                *************/\n\t\n\t                /* Since Velocity only animates a single numeric value per property, color animation is achieved by hooking the individual RGBA components of CSS color properties.\n\t                   Accordingly, color values must be normalized (e.g. \"#ff0000\", \"red\", and \"rgb(255, 0, 0)\" ==> \"255 0 0 1\") so that their components can be injected/extracted by CSS.Hooks logic. */\n\t                for (var i = 0; i < CSS.Lists.colors.length; i++) {\n\t                    /* Wrap the dynamically generated normalization function in a new scope so that colorName's value is paired with its respective function.\n\t                       (Otherwise, all functions would take the final for loop's colorName.) */\n\t                    (function () {\n\t                        var colorName = CSS.Lists.colors[i];\n\t\n\t                        /* Note: In IE<=8, which support rgb but not rgba, color properties are reverted to rgb by stripping off the alpha component. */\n\t                        CSS.Normalizations.registered[colorName] = function(type, element, propertyValue) {\n\t                            switch (type) {\n\t                                case \"name\":\n\t                                    return colorName;\n\t                                /* Convert all color values into the rgb format. (Old IE can return hex values and color names instead of rgb/rgba.) */\n\t                                case \"extract\":\n\t                                    var extracted;\n\t\n\t                                    /* If the color is already in its hookable form (e.g. \"255 255 255 1\") due to having been previously extracted, skip extraction. */\n\t                                    if (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {\n\t                                        extracted = propertyValue;\n\t                                    } else {\n\t                                        var converted,\n\t                                            colorNames = {\n\t                                                black: \"rgb(0, 0, 0)\",\n\t                                                blue: \"rgb(0, 0, 255)\",\n\t                                                gray: \"rgb(128, 128, 128)\",\n\t                                                green: \"rgb(0, 128, 0)\",\n\t                                                red: \"rgb(255, 0, 0)\",\n\t                                                white: \"rgb(255, 255, 255)\"\n\t                                            };\n\t\n\t                                        /* Convert color names to rgb. */\n\t                                        if (/^[A-z]+$/i.test(propertyValue)) {\n\t                                            if (colorNames[propertyValue] !== undefined) {\n\t                                                converted = colorNames[propertyValue]\n\t                                            } else {\n\t                                                /* If an unmatched color name is provided, default to black. */\n\t                                                converted = colorNames.black;\n\t                                            }\n\t                                        /* Convert hex values to rgb. */\n\t                                        } else if (CSS.RegEx.isHex.test(propertyValue)) {\n\t                                            converted = \"rgb(\" + CSS.Values.hexToRgb(propertyValue).join(\" \") + \")\";\n\t                                        /* If the provided color doesn't match any of the accepted color formats, default to black. */\n\t                                        } else if (!(/^rgba?\\(/i.test(propertyValue))) {\n\t                                            converted = colorNames.black;\n\t                                        }\n\t\n\t                                        /* Remove the surrounding \"rgb/rgba()\" string then replace commas with spaces and strip\n\t                                           repeated spaces (in case the value included spaces to begin with). */\n\t                                        extracted = (converted || propertyValue).toString().match(CSS.RegEx.valueUnwrap)[1].replace(/,(\\s+)?/g, \" \");\n\t                                    }\n\t\n\t                                    /* So long as this isn't <=IE8, add a fourth (alpha) component if it's missing and default it to 1 (visible). */\n\t                                    if (!(IE <= 8) && extracted.split(\" \").length === 3) {\n\t                                        extracted += \" 1\";\n\t                                    }\n\t\n\t                                    return extracted;\n\t                                case \"inject\":\n\t                                    /* If this is IE<=8 and an alpha component exists, strip it off. */\n\t                                    if (IE <= 8) {\n\t                                        if (propertyValue.split(\" \").length === 4) {\n\t                                            propertyValue = propertyValue.split(/\\s+/).slice(0, 3).join(\" \");\n\t                                        }\n\t                                    /* Otherwise, add a fourth (alpha) component if it's missing and default it to 1 (visible). */\n\t                                    } else if (propertyValue.split(\" \").length === 3) {\n\t                                        propertyValue += \" 1\";\n\t                                    }\n\t\n\t                                    /* Re-insert the browser-appropriate wrapper(\"rgb/rgba()\"), insert commas, and strip off decimal units\n\t                                       on all values but the fourth (R, G, and B only accept whole numbers). */\n\t                                    return (IE <= 8 ? \"rgb\" : \"rgba\") + \"(\" + propertyValue.replace(/\\s+/g, \",\").replace(/\\.(\\d)+(?=,)/g, \"\") + \")\";\n\t                            }\n\t                        };\n\t                    })();\n\t                }\n\t            }\n\t        },\n\t\n\t        /************************\n\t           CSS Property Names\n\t        ************************/\n\t\n\t        Names: {\n\t            /* Camelcase a property name into its JavaScript notation (e.g. \"background-color\" ==> \"backgroundColor\").\n\t               Camelcasing is used to normalize property names between and across calls. */\n\t            camelCase: function (property) {\n\t                return property.replace(/-(\\w)/g, function (match, subMatch) {\n\t                    return subMatch.toUpperCase();\n\t                });\n\t            },\n\t\n\t            /* For SVG elements, some properties (namely, dimensional ones) are GET/SET via the element's HTML attributes (instead of via CSS styles). */\n\t            SVGAttribute: function (property) {\n\t                var SVGAttributes = \"width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2\";\n\t\n\t                /* Certain browsers require an SVG transform to be applied as an attribute. (Otherwise, application via CSS is preferable due to 3D support.) */\n\t                if (IE || (Velocity.State.isAndroid && !Velocity.State.isChrome)) {\n\t                    SVGAttributes += \"|transform\";\n\t                }\n\t\n\t                return new RegExp(\"^(\" + SVGAttributes + \")$\", \"i\").test(property);\n\t            },\n\t\n\t            /* Determine whether a property should be set with a vendor prefix. */\n\t            /* If a prefixed version of the property exists, return it. Otherwise, return the original property name.\n\t               If the property is not at all supported by the browser, return a false flag. */\n\t            prefixCheck: function (property) {\n\t                /* If this property has already been checked, return the cached value. */\n\t                if (Velocity.State.prefixMatches[property]) {\n\t                    return [ Velocity.State.prefixMatches[property], true ];\n\t                } else {\n\t                    var vendors = [ \"\", \"Webkit\", \"Moz\", \"ms\", \"O\" ];\n\t\n\t                    for (var i = 0, vendorsLength = vendors.length; i < vendorsLength; i++) {\n\t                        var propertyPrefixed;\n\t\n\t                        if (i === 0) {\n\t                            propertyPrefixed = property;\n\t                        } else {\n\t                            /* Capitalize the first letter of the property to conform to JavaScript vendor prefix notation (e.g. webkitFilter). */\n\t                            propertyPrefixed = vendors[i] + property.replace(/^\\w/, function(match) { return match.toUpperCase(); });\n\t                        }\n\t\n\t                        /* Check if the browser supports this property as prefixed. */\n\t                        if (Type.isString(Velocity.State.prefixElement.style[propertyPrefixed])) {\n\t                            /* Cache the match. */\n\t                            Velocity.State.prefixMatches[property] = propertyPrefixed;\n\t\n\t                            return [ propertyPrefixed, true ];\n\t                        }\n\t                    }\n\t\n\t                    /* If the browser doesn't support this property in any form, include a false flag so that the caller can decide how to proceed. */\n\t                    return [ property, false ];\n\t                }\n\t            }\n\t        },\n\t\n\t        /************************\n\t           CSS Property Values\n\t        ************************/\n\t\n\t        Values: {\n\t            /* Hex to RGB conversion. Copyright Tim Down: http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb */\n\t            hexToRgb: function (hex) {\n\t                var shortformRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,\n\t                    longformRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i,\n\t                    rgbParts;\n\t\n\t                hex = hex.replace(shortformRegex, function (m, r, g, b) {\n\t                    return r + r + g + g + b + b;\n\t                });\n\t\n\t                rgbParts = longformRegex.exec(hex);\n\t\n\t                return rgbParts ? [ parseInt(rgbParts[1], 16), parseInt(rgbParts[2], 16), parseInt(rgbParts[3], 16) ] : [ 0, 0, 0 ];\n\t            },\n\t\n\t            isCSSNullValue: function (value) {\n\t                /* The browser defaults CSS values that have not been set to either 0 or one of several possible null-value strings.\n\t                   Thus, we check for both falsiness and these special strings. */\n\t                /* Null-value checking is performed to default the special strings to 0 (for the sake of tweening) or their hook\n\t                   templates as defined as CSS.Hooks (for the sake of hook injection/extraction). */\n\t                /* Note: Chrome returns \"rgba(0, 0, 0, 0)\" for an undefined color whereas IE returns \"transparent\". */\n\t                return (value == 0 || /^(none|auto|transparent|(rgba\\(0, ?0, ?0, ?0\\)))$/i.test(value));\n\t            },\n\t\n\t            /* Retrieve a property's default unit type. Used for assigning a unit type when one is not supplied by the user. */\n\t            getUnitType: function (property) {\n\t                if (/^(rotate|skew)/i.test(property)) {\n\t                    return \"deg\";\n\t                } else if (/(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(property)) {\n\t                    /* The above properties are unitless. */\n\t                    return \"\";\n\t                } else {\n\t                    /* Default to px for all other properties. */\n\t                    return \"px\";\n\t                }\n\t            },\n\t\n\t            /* HTML elements default to an associated display type when they're not set to display:none. */\n\t            /* Note: This function is used for correctly setting the non-\"none\" display value in certain Velocity redirects, such as fadeIn/Out. */\n\t            getDisplayType: function (element) {\n\t                var tagName = element && element.tagName.toString().toLowerCase();\n\t\n\t                if (/^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(tagName)) {\n\t                    return \"inline\";\n\t                } else if (/^(li)$/i.test(tagName)) {\n\t                    return \"list-item\";\n\t                } else if (/^(tr)$/i.test(tagName)) {\n\t                    return \"table-row\";\n\t                } else if (/^(table)$/i.test(tagName)) {\n\t                    return \"table\";\n\t                } else if (/^(tbody)$/i.test(tagName)) {\n\t                    return \"table-row-group\";\n\t                /* Default to \"block\" when no match is found. */\n\t                } else {\n\t                    return \"block\";\n\t                }\n\t            },\n\t\n\t            /* The class add/remove functions are used to temporarily apply a \"velocity-animating\" class to elements while they're animating. */\n\t            addClass: function (element, className) {\n\t                if (element.classList) {\n\t                    element.classList.add(className);\n\t                } else {\n\t                    element.className += (element.className.length ? \" \" : \"\") + className;\n\t                }\n\t            },\n\t\n\t            removeClass: function (element, className) {\n\t                if (element.classList) {\n\t                    element.classList.remove(className);\n\t                } else {\n\t                    element.className = element.className.toString().replace(new RegExp(\"(^|\\\\s)\" + className.split(\" \").join(\"|\") + \"(\\\\s|$)\", \"gi\"), \" \");\n\t                }\n\t            }\n\t        },\n\t\n\t        /****************************\n\t           Style Getting & Setting\n\t        ****************************/\n\t\n\t        /* The singular getPropertyValue, which routes the logic for all normalizations, hooks, and standard CSS properties. */\n\t        getPropertyValue: function (element, property, rootPropertyValue, forceStyleLookup) {\n\t            /* Get an element's computed property value. */\n\t            /* Note: Retrieving the value of a CSS property cannot simply be performed by checking an element's\n\t               style attribute (which only reflects user-defined values). Instead, the browser must be queried for a property's\n\t               *computed* value. You can read more about getComputedStyle here: https://developer.mozilla.org/en/docs/Web/API/window.getComputedStyle */\n\t            function computePropertyValue (element, property) {\n\t                /* When box-sizing isn't set to border-box, height and width style values are incorrectly computed when an\n\t                   element's scrollbars are visible (which expands the element's dimensions). Thus, we defer to the more accurate\n\t                   offsetHeight/Width property, which includes the total dimensions for interior, border, padding, and scrollbar.\n\t                   We subtract border and padding to get the sum of interior + scrollbar. */\n\t                var computedValue = 0;\n\t\n\t                /* IE<=8 doesn't support window.getComputedStyle, thus we defer to jQuery, which has an extensive array\n\t                   of hacks to accurately retrieve IE8 property values. Re-implementing that logic here is not worth bloating the\n\t                   codebase for a dying browser. The performance repercussions of using jQuery here are minimal since\n\t                   Velocity is optimized to rarely (and sometimes never) query the DOM. Further, the $.css() codepath isn't that slow. */\n\t                if (IE <= 8) {\n\t                    computedValue = $.css(element, property); /* GET */\n\t                /* All other browsers support getComputedStyle. The returned live object reference is cached onto its\n\t                   associated element so that it does not need to be refetched upon every GET. */\n\t                } else {\n\t                    /* Browsers do not return height and width values for elements that are set to display:\"none\". Thus, we temporarily\n\t                       toggle display to the element type's default value. */\n\t                    var toggleDisplay = false;\n\t\n\t                    if (/^(width|height)$/.test(property) && CSS.getPropertyValue(element, \"display\") === 0) {\n\t                        toggleDisplay = true;\n\t                        CSS.setPropertyValue(element, \"display\", CSS.Values.getDisplayType(element));\n\t                    }\n\t\n\t                    function revertDisplay () {\n\t                        if (toggleDisplay) {\n\t                            CSS.setPropertyValue(element, \"display\", \"none\");\n\t                        }\n\t                    }\n\t\n\t                    if (!forceStyleLookup) {\n\t                        if (property === \"height\" && CSS.getPropertyValue(element, \"boxSizing\").toString().toLowerCase() !== \"border-box\") {\n\t                            var contentBoxHeight = element.offsetHeight - (parseFloat(CSS.getPropertyValue(element, \"borderTopWidth\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"borderBottomWidth\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"paddingTop\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"paddingBottom\")) || 0);\n\t                            revertDisplay();\n\t\n\t                            return contentBoxHeight;\n\t                        } else if (property === \"width\" && CSS.getPropertyValue(element, \"boxSizing\").toString().toLowerCase() !== \"border-box\") {\n\t                            var contentBoxWidth = element.offsetWidth - (parseFloat(CSS.getPropertyValue(element, \"borderLeftWidth\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"borderRightWidth\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"paddingLeft\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"paddingRight\")) || 0);\n\t                            revertDisplay();\n\t\n\t                            return contentBoxWidth;\n\t                        }\n\t                    }\n\t\n\t                    var computedStyle;\n\t\n\t                    /* For elements that Velocity hasn't been called on directly (e.g. when Velocity queries the DOM on behalf\n\t                       of a parent of an element its animating), perform a direct getComputedStyle lookup since the object isn't cached. */\n\t                    if (Data(element) === undefined) {\n\t                        computedStyle = window.getComputedStyle(element, null); /* GET */\n\t                    /* If the computedStyle object has yet to be cached, do so now. */\n\t                    } else if (!Data(element).computedStyle) {\n\t                        computedStyle = Data(element).computedStyle = window.getComputedStyle(element, null); /* GET */\n\t                    /* If computedStyle is cached, use it. */\n\t                    } else {\n\t                        computedStyle = Data(element).computedStyle;\n\t                    }\n\t\n\t                    /* IE and Firefox do not return a value for the generic borderColor -- they only return individual values for each border side's color.\n\t                       Also, in all browsers, when border colors aren't all the same, a compound value is returned that Velocity isn't setup to parse.\n\t                       So, as a polyfill for querying individual border side colors, we just return the top border's color and animate all borders from that value. */\n\t                    if (property === \"borderColor\") {\n\t                        property = \"borderTopColor\";\n\t                    }\n\t\n\t                    /* IE9 has a bug in which the \"filter\" property must be accessed from computedStyle using the getPropertyValue method\n\t                       instead of a direct property lookup. The getPropertyValue method is slower than a direct lookup, which is why we avoid it by default. */\n\t                    if (IE === 9 && property === \"filter\") {\n\t                        computedValue = computedStyle.getPropertyValue(property); /* GET */\n\t                    } else {\n\t                        computedValue = computedStyle[property];\n\t                    }\n\t\n\t                    /* Fall back to the property's style value (if defined) when computedValue returns nothing,\n\t                       which can happen when the element hasn't been painted. */\n\t                    if (computedValue === \"\" || computedValue === null) {\n\t                        computedValue = element.style[property];\n\t                    }\n\t\n\t                    revertDisplay();\n\t                }\n\t\n\t                /* For top, right, bottom, and left (TRBL) values that are set to \"auto\" on elements of \"fixed\" or \"absolute\" position,\n\t                   defer to jQuery for converting \"auto\" to a numeric value. (For elements with a \"static\" or \"relative\" position, \"auto\" has the same\n\t                   effect as being set to 0, so no conversion is necessary.) */\n\t                /* An example of why numeric conversion is necessary: When an element with \"position:absolute\" has an untouched \"left\"\n\t                   property, which reverts to \"auto\", left's value is 0 relative to its parent element, but is often non-zero relative\n\t                   to its *containing* (not parent) element, which is the nearest \"position:relative\" ancestor or the viewport (and always the viewport in the case of \"position:fixed\"). */\n\t                if (computedValue === \"auto\" && /^(top|right|bottom|left)$/i.test(property)) {\n\t                    var position = computePropertyValue(element, \"position\"); /* GET */\n\t\n\t                    /* For absolute positioning, jQuery's $.position() only returns values for top and left;\n\t                       right and bottom will have their \"auto\" value reverted to 0. */\n\t                    /* Note: A jQuery object must be created here since jQuery doesn't have a low-level alias for $.position().\n\t                       Not a big deal since we're currently in a GET batch anyway. */\n\t                    if (position === \"fixed\" || (position === \"absolute\" && /top|left/i.test(property))) {\n\t                        /* Note: jQuery strips the pixel unit from its returned values; we re-add it here to conform with computePropertyValue's behavior. */\n\t                        computedValue = $(element).position()[property] + \"px\"; /* GET */\n\t                    }\n\t                }\n\t\n\t                return computedValue;\n\t            }\n\t\n\t            var propertyValue;\n\t\n\t            /* If this is a hooked property (e.g. \"clipLeft\" instead of the root property of \"clip\"),\n\t               extract the hook's value from a normalized rootPropertyValue using CSS.Hooks.extractValue(). */\n\t            if (CSS.Hooks.registered[property]) {\n\t                var hook = property,\n\t                    hookRoot = CSS.Hooks.getRoot(hook);\n\t\n\t                /* If a cached rootPropertyValue wasn't passed in (which Velocity always attempts to do in order to avoid requerying the DOM),\n\t                   query the DOM for the root property's value. */\n\t                if (rootPropertyValue === undefined) {\n\t                    /* Since the browser is now being directly queried, use the official post-prefixing property name for this lookup. */\n\t                    rootPropertyValue = CSS.getPropertyValue(element, CSS.Names.prefixCheck(hookRoot)[0]); /* GET */\n\t                }\n\t\n\t                /* If this root has a normalization registered, peform the associated normalization extraction. */\n\t                if (CSS.Normalizations.registered[hookRoot]) {\n\t                    rootPropertyValue = CSS.Normalizations.registered[hookRoot](\"extract\", element, rootPropertyValue);\n\t                }\n\t\n\t                /* Extract the hook's value. */\n\t                propertyValue = CSS.Hooks.extractValue(hook, rootPropertyValue);\n\t\n\t            /* If this is a normalized property (e.g. \"opacity\" becomes \"filter\" in <=IE8) or \"translateX\" becomes \"transform\"),\n\t               normalize the property's name and value, and handle the special case of transforms. */\n\t            /* Note: Normalizing a property is mutually exclusive from hooking a property since hook-extracted values are strictly\n\t               numerical and therefore do not require normalization extraction. */\n\t            } else if (CSS.Normalizations.registered[property]) {\n\t                var normalizedPropertyName,\n\t                    normalizedPropertyValue;\n\t\n\t                normalizedPropertyName = CSS.Normalizations.registered[property](\"name\", element);\n\t\n\t                /* Transform values are calculated via normalization extraction (see below), which checks against the element's transformCache.\n\t                   At no point do transform GETs ever actually query the DOM; initial stylesheet values are never processed.\n\t                   This is because parsing 3D transform matrices is not always accurate and would bloat our codebase;\n\t                   thus, normalization extraction defaults initial transform values to their zero-values (e.g. 1 for scaleX and 0 for translateX). */\n\t                if (normalizedPropertyName !== \"transform\") {\n\t                    normalizedPropertyValue = computePropertyValue(element, CSS.Names.prefixCheck(normalizedPropertyName)[0]); /* GET */\n\t\n\t                    /* If the value is a CSS null-value and this property has a hook template, use that zero-value template so that hooks can be extracted from it. */\n\t                    if (CSS.Values.isCSSNullValue(normalizedPropertyValue) && CSS.Hooks.templates[property]) {\n\t                        normalizedPropertyValue = CSS.Hooks.templates[property][1];\n\t                    }\n\t                }\n\t\n\t                propertyValue = CSS.Normalizations.registered[property](\"extract\", element, normalizedPropertyValue);\n\t            }\n\t\n\t            /* If a (numeric) value wasn't produced via hook extraction or normalization, query the DOM. */\n\t            if (!/^[\\d-]/.test(propertyValue)) {\n\t                /* For SVG elements, dimensional properties (which SVGAttribute() detects) are tweened via\n\t                   their HTML attribute values instead of their CSS style values. */\n\t                if (Data(element) && Data(element).isSVG && CSS.Names.SVGAttribute(property)) {\n\t                    /* Since the height/width attribute values must be set manually, they don't reflect computed values.\n\t                       Thus, we use use getBBox() to ensure we always get values for elements with undefined height/width attributes. */\n\t                    if (/^(height|width)$/i.test(property)) {\n\t                        /* Firefox throws an error if .getBBox() is called on an SVG that isn't attached to the DOM. */\n\t                        try {\n\t                            propertyValue = element.getBBox()[property];\n\t                        } catch (error) {\n\t                            propertyValue = 0;\n\t                        }\n\t                    /* Otherwise, access the attribute value directly. */\n\t                    } else {\n\t                        propertyValue = element.getAttribute(property);\n\t                    }\n\t                } else {\n\t                    propertyValue = computePropertyValue(element, CSS.Names.prefixCheck(property)[0]); /* GET */\n\t                }\n\t            }\n\t\n\t            /* Since property lookups are for animation purposes (which entails computing the numeric delta between start and end values),\n\t               convert CSS null-values to an integer of value 0. */\n\t            if (CSS.Values.isCSSNullValue(propertyValue)) {\n\t                propertyValue = 0;\n\t            }\n\t\n\t            if (Velocity.debug >= 2) console.log(\"Get \" + property + \": \" + propertyValue);\n\t\n\t            return propertyValue;\n\t        },\n\t\n\t        /* The singular setPropertyValue, which routes the logic for all normalizations, hooks, and standard CSS properties. */\n\t        setPropertyValue: function(element, property, propertyValue, rootPropertyValue, scrollData) {\n\t            var propertyName = property;\n\t\n\t            /* In order to be subjected to call options and element queueing, scroll animation is routed through Velocity as if it were a standard CSS property. */\n\t            if (property === \"scroll\") {\n\t                /* If a container option is present, scroll the container instead of the browser window. */\n\t                if (scrollData.container) {\n\t                    scrollData.container[\"scroll\" + scrollData.direction] = propertyValue;\n\t                /* Otherwise, Velocity defaults to scrolling the browser window. */\n\t                } else {\n\t                    if (scrollData.direction === \"Left\") {\n\t                        window.scrollTo(propertyValue, scrollData.alternateValue);\n\t                    } else {\n\t                        window.scrollTo(scrollData.alternateValue, propertyValue);\n\t                    }\n\t                }\n\t            } else {\n\t                /* Transforms (translateX, rotateZ, etc.) are applied to a per-element transformCache object, which is manually flushed via flushTransformCache().\n\t                   Thus, for now, we merely cache transforms being SET. */\n\t                if (CSS.Normalizations.registered[property] && CSS.Normalizations.registered[property](\"name\", element) === \"transform\") {\n\t                    /* Perform a normalization injection. */\n\t                    /* Note: The normalization logic handles the transformCache updating. */\n\t                    CSS.Normalizations.registered[property](\"inject\", element, propertyValue);\n\t\n\t                    propertyName = \"transform\";\n\t                    propertyValue = Data(element).transformCache[property];\n\t                } else {\n\t                    /* Inject hooks. */\n\t                    if (CSS.Hooks.registered[property]) {\n\t                        var hookName = property,\n\t                            hookRoot = CSS.Hooks.getRoot(property);\n\t\n\t                        /* If a cached rootPropertyValue was not provided, query the DOM for the hookRoot's current value. */\n\t                        rootPropertyValue = rootPropertyValue || CSS.getPropertyValue(element, hookRoot); /* GET */\n\t\n\t                        propertyValue = CSS.Hooks.injectValue(hookName, propertyValue, rootPropertyValue);\n\t                        property = hookRoot;\n\t                    }\n\t\n\t                    /* Normalize names and values. */\n\t                    if (CSS.Normalizations.registered[property]) {\n\t                        propertyValue = CSS.Normalizations.registered[property](\"inject\", element, propertyValue);\n\t                        property = CSS.Normalizations.registered[property](\"name\", element);\n\t                    }\n\t\n\t                    /* Assign the appropriate vendor prefix before performing an official style update. */\n\t                    propertyName = CSS.Names.prefixCheck(property)[0];\n\t\n\t                    /* A try/catch is used for IE<=8, which throws an error when \"invalid\" CSS values are set, e.g. a negative width.\n\t                       Try/catch is avoided for other browsers since it incurs a performance overhead. */\n\t                    if (IE <= 8) {\n\t                        try {\n\t                            element.style[propertyName] = propertyValue;\n\t                        } catch (error) { if (Velocity.debug) console.log(\"Browser does not support [\" + propertyValue + \"] for [\" + propertyName + \"]\"); }\n\t                    /* SVG elements have their dimensional properties (width, height, x, y, cx, etc.) applied directly as attributes instead of as styles. */\n\t                    /* Note: IE8 does not support SVG elements, so it's okay that we skip it for SVG animation. */\n\t                    } else if (Data(element) && Data(element).isSVG && CSS.Names.SVGAttribute(property)) {\n\t                        /* Note: For SVG attributes, vendor-prefixed property names are never used. */\n\t                        /* Note: Not all CSS properties can be animated via attributes, but the browser won't throw an error for unsupported properties. */\n\t                        element.setAttribute(property, propertyValue);\n\t                    } else {\n\t                        element.style[propertyName] = propertyValue;\n\t                    }\n\t\n\t                    if (Velocity.debug >= 2) console.log(\"Set \" + property + \" (\" + propertyName + \"): \" + propertyValue);\n\t                }\n\t            }\n\t\n\t            /* Return the normalized property name and value in case the caller wants to know how these values were modified before being applied to the DOM. */\n\t            return [ propertyName, propertyValue ];\n\t        },\n\t\n\t        /* To increase performance by batching transform updates into a single SET, transforms are not directly applied to an element until flushTransformCache() is called. */\n\t        /* Note: Velocity applies transform properties in the same order that they are chronogically introduced to the element's CSS styles. */\n\t        flushTransformCache: function(element) {\n\t            var transformString = \"\";\n\t\n\t            /* Certain browsers require that SVG transforms be applied as an attribute. However, the SVG transform attribute takes a modified version of CSS's transform string\n\t               (units are dropped and, except for skewX/Y, subproperties are merged into their master property -- e.g. scaleX and scaleY are merged into scale(X Y). */\n\t            if ((IE || (Velocity.State.isAndroid && !Velocity.State.isChrome)) && Data(element).isSVG) {\n\t                /* Since transform values are stored in their parentheses-wrapped form, we use a helper function to strip out their numeric values.\n\t                   Further, SVG transform properties only take unitless (representing pixels) values, so it's okay that parseFloat() strips the unit suffixed to the float value. */\n\t                function getTransformFloat (transformProperty) {\n\t                    return parseFloat(CSS.getPropertyValue(element, transformProperty));\n\t                }\n\t\n\t                /* Create an object to organize all the transforms that we'll apply to the SVG element. To keep the logic simple,\n\t                   we process *all* transform properties -- even those that may not be explicitly applied (since they default to their zero-values anyway). */\n\t                var SVGTransforms = {\n\t                    translate: [ getTransformFloat(\"translateX\"), getTransformFloat(\"translateY\") ],\n\t                    skewX: [ getTransformFloat(\"skewX\") ], skewY: [ getTransformFloat(\"skewY\") ],\n\t                    /* If the scale property is set (non-1), use that value for the scaleX and scaleY values\n\t                       (this behavior mimics the result of animating all these properties at once on HTML elements). */\n\t                    scale: getTransformFloat(\"scale\") !== 1 ? [ getTransformFloat(\"scale\"), getTransformFloat(\"scale\") ] : [ getTransformFloat(\"scaleX\"), getTransformFloat(\"scaleY\") ],\n\t                    /* Note: SVG's rotate transform takes three values: rotation degrees followed by the X and Y values\n\t                       defining the rotation's origin point. We ignore the origin values (default them to 0). */\n\t                    rotate: [ getTransformFloat(\"rotateZ\"), 0, 0 ]\n\t                };\n\t\n\t                /* Iterate through the transform properties in the user-defined property map order.\n\t                   (This mimics the behavior of non-SVG transform animation.) */\n\t                $.each(Data(element).transformCache, function(transformName) {\n\t                    /* Except for with skewX/Y, revert the axis-specific transform subproperties to their axis-free master\n\t                       properties so that they match up with SVG's accepted transform properties. */\n\t                    if (/^translate/i.test(transformName)) {\n\t                        transformName = \"translate\";\n\t                    } else if (/^scale/i.test(transformName)) {\n\t                        transformName = \"scale\";\n\t                    } else if (/^rotate/i.test(transformName)) {\n\t                        transformName = \"rotate\";\n\t                    }\n\t\n\t                    /* Check that we haven't yet deleted the property from the SVGTransforms container. */\n\t                    if (SVGTransforms[transformName]) {\n\t                        /* Append the transform property in the SVG-supported transform format. As per the spec, surround the space-delimited values in parentheses. */\n\t                        transformString += transformName + \"(\" + SVGTransforms[transformName].join(\" \") + \")\" + \" \";\n\t\n\t                        /* After processing an SVG transform property, delete it from the SVGTransforms container so we don't\n\t                           re-insert the same master property if we encounter another one of its axis-specific properties. */\n\t                        delete SVGTransforms[transformName];\n\t                    }\n\t                });\n\t            } else {\n\t                var transformValue,\n\t                    perspective;\n\t\n\t                /* Transform properties are stored as members of the transformCache object. Concatenate all the members into a string. */\n\t                $.each(Data(element).transformCache, function(transformName) {\n\t                    transformValue = Data(element).transformCache[transformName];\n\t\n\t                    /* Transform's perspective subproperty must be set first in order to take effect. Store it temporarily. */\n\t                    if (transformName === \"transformPerspective\") {\n\t                        perspective = transformValue;\n\t                        return true;\n\t                    }\n\t\n\t                    /* IE9 only supports one rotation type, rotateZ, which it refers to as \"rotate\". */\n\t                    if (IE === 9 && transformName === \"rotateZ\") {\n\t                        transformName = \"rotate\";\n\t                    }\n\t\n\t                    transformString += transformName + transformValue + \" \";\n\t                });\n\t\n\t                /* If present, set the perspective subproperty first. */\n\t                if (perspective) {\n\t                    transformString = \"perspective\" + perspective + \" \" + transformString;\n\t                }\n\t            }\n\t\n\t            CSS.setPropertyValue(element, \"transform\", transformString);\n\t        }\n\t    };\n\t\n\t    /* Register hooks and normalizations. */\n\t    CSS.Hooks.register();\n\t    CSS.Normalizations.register();\n\t\n\t    /* Allow hook setting in the same fashion as jQuery's $.css(). */\n\t    Velocity.hook = function (elements, arg2, arg3) {\n\t        var value = undefined;\n\t\n\t        elements = sanitizeElements(elements);\n\t\n\t        $.each(elements, function(i, element) {\n\t            /* Initialize Velocity's per-element data cache if this element hasn't previously been animated. */\n\t            if (Data(element) === undefined) {\n\t                Velocity.init(element);\n\t            }\n\t\n\t            /* Get property value. If an element set was passed in, only return the value for the first element. */\n\t            if (arg3 === undefined) {\n\t                if (value === undefined) {\n\t                    value = Velocity.CSS.getPropertyValue(element, arg2);\n\t                }\n\t            /* Set property value. */\n\t            } else {\n\t                /* sPV returns an array of the normalized propertyName/propertyValue pair used to update the DOM. */\n\t                var adjustedSet = Velocity.CSS.setPropertyValue(element, arg2, arg3);\n\t\n\t                /* Transform properties don't automatically set. They have to be flushed to the DOM. */\n\t                if (adjustedSet[0] === \"transform\") {\n\t                    Velocity.CSS.flushTransformCache(element);\n\t                }\n\t\n\t                value = adjustedSet;\n\t            }\n\t        });\n\t\n\t        return value;\n\t    };\n\t\n\t    /*****************\n\t        Animation\n\t    *****************/\n\t\n\t    var animate = function() {\n\t\n\t        /******************\n\t            Call Chain\n\t        ******************/\n\t\n\t        /* Logic for determining what to return to the call stack when exiting out of Velocity. */\n\t        function getChain () {\n\t            /* If we are using the utility function, attempt to return this call's promise. If no promise library was detected,\n\t               default to null instead of returning the targeted elements so that utility function's return value is standardized. */\n\t            if (isUtility) {\n\t                return promiseData.promise || null;\n\t            /* Otherwise, if we're using $.fn, return the jQuery-/Zepto-wrapped element set. */\n\t            } else {\n\t                return elementsWrapped;\n\t            }\n\t        }\n\t\n\t        /*************************\n\t           Arguments Assignment\n\t        *************************/\n\t\n\t        /* To allow for expressive CoffeeScript code, Velocity supports an alternative syntax in which \"elements\" (or \"e\"), \"properties\" (or \"p\"), and \"options\" (or \"o\")\n\t           objects are defined on a container object that's passed in as Velocity's sole argument. */\n\t        /* Note: Some browsers automatically populate arguments with a \"properties\" object. We detect it by checking for its default \"names\" property. */\n\t        var syntacticSugar = (arguments[0] && (arguments[0].p || (($.isPlainObject(arguments[0].properties) && !arguments[0].properties.names) || Type.isString(arguments[0].properties)))),\n\t            /* Whether Velocity was called via the utility function (as opposed to on a jQuery/Zepto object). */\n\t            isUtility,\n\t            /* When Velocity is called via the utility function ($.Velocity()/Velocity()), elements are explicitly\n\t               passed in as the first parameter. Thus, argument positioning varies. We normalize them here. */\n\t            elementsWrapped,\n\t            argumentIndex;\n\t\n\t        var elements,\n\t            propertiesMap,\n\t            options;\n\t\n\t        /* Detect jQuery/Zepto elements being animated via the $.fn method. */\n\t        if (Type.isWrapped(this)) {\n\t            isUtility = false;\n\t\n\t            argumentIndex = 0;\n\t            elements = this;\n\t            elementsWrapped = this;\n\t        /* Otherwise, raw elements are being animated via the utility function. */\n\t        } else {\n\t            isUtility = true;\n\t\n\t            argumentIndex = 1;\n\t            elements = syntacticSugar ? (arguments[0].elements || arguments[0].e) : arguments[0];\n\t        }\n\t\n\t        elements = sanitizeElements(elements);\n\t\n\t        if (!elements) {\n\t            return;\n\t        }\n\t\n\t        if (syntacticSugar) {\n\t            propertiesMap = arguments[0].properties || arguments[0].p;\n\t            options = arguments[0].options || arguments[0].o;\n\t        } else {\n\t            propertiesMap = arguments[argumentIndex];\n\t            options = arguments[argumentIndex + 1];\n\t        }\n\t\n\t        /* The length of the element set (in the form of a nodeList or an array of elements) is defaulted to 1 in case a\n\t           single raw DOM element is passed in (which doesn't contain a length property). */\n\t        var elementsLength = elements.length,\n\t            elementsIndex = 0;\n\t\n\t        /***************************\n\t            Argument Overloading\n\t        ***************************/\n\t\n\t        /* Support is included for jQuery's argument overloading: $.animate(propertyMap [, duration] [, easing] [, complete]).\n\t           Overloading is detected by checking for the absence of an object being passed into options. */\n\t        /* Note: The stop and finish actions do not accept animation options, and are therefore excluded from this check. */\n\t        if (!/^(stop|finish|finishAll)$/i.test(propertiesMap) && !$.isPlainObject(options)) {\n\t            /* The utility function shifts all arguments one position to the right, so we adjust for that offset. */\n\t            var startingArgumentPosition = argumentIndex + 1;\n\t\n\t            options = {};\n\t\n\t            /* Iterate through all options arguments */\n\t            for (var i = startingArgumentPosition; i < arguments.length; i++) {\n\t                /* Treat a number as a duration. Parse it out. */\n\t                /* Note: The following RegEx will return true if passed an array with a number as its first item.\n\t                   Thus, arrays are skipped from this check. */\n\t                if (!Type.isArray(arguments[i]) && (/^(fast|normal|slow)$/i.test(arguments[i]) || /^\\d/.test(arguments[i]))) {\n\t                    options.duration = arguments[i];\n\t                /* Treat strings and arrays as easings. */\n\t                } else if (Type.isString(arguments[i]) || Type.isArray(arguments[i])) {\n\t                    options.easing = arguments[i];\n\t                /* Treat a function as a complete callback. */\n\t                } else if (Type.isFunction(arguments[i])) {\n\t                    options.complete = arguments[i];\n\t                }\n\t            }\n\t        }\n\t\n\t        /***************\n\t            Promises\n\t        ***************/\n\t\n\t        var promiseData = {\n\t                promise: null,\n\t                resolver: null,\n\t                rejecter: null\n\t            };\n\t\n\t        /* If this call was made via the utility function (which is the default method of invocation when jQuery/Zepto are not being used), and if\n\t           promise support was detected, create a promise object for this call and store references to its resolver and rejecter methods. The resolve\n\t           method is used when a call completes naturally or is prematurely stopped by the user. In both cases, completeCall() handles the associated\n\t           call cleanup and promise resolving logic. The reject method is used when an invalid set of arguments is passed into a Velocity call. */\n\t        /* Note: Velocity employs a call-based queueing architecture, which means that stopping an animating element actually stops the full call that\n\t           triggered it -- not that one element exclusively. Similarly, there is one promise per call, and all elements targeted by a Velocity call are\n\t           grouped together for the purposes of resolving and rejecting a promise. */\n\t        if (isUtility && Velocity.Promise) {\n\t            promiseData.promise = new Velocity.Promise(function (resolve, reject) {\n\t                promiseData.resolver = resolve;\n\t                promiseData.rejecter = reject;\n\t            });\n\t        }\n\t\n\t        /*********************\n\t           Action Detection\n\t        *********************/\n\t\n\t        /* Velocity's behavior is categorized into \"actions\": Elements can either be specially scrolled into view,\n\t           or they can be started, stopped, or reversed. If a literal or referenced properties map is passed in as Velocity's\n\t           first argument, the associated action is \"start\". Alternatively, \"scroll\", \"reverse\", or \"stop\" can be passed in instead of a properties map. */\n\t        var action;\n\t\n\t        switch (propertiesMap) {\n\t            case \"scroll\":\n\t                action = \"scroll\";\n\t                break;\n\t\n\t            case \"reverse\":\n\t                action = \"reverse\";\n\t                break;\n\t\n\t            case \"finish\":\n\t            case \"finishAll\":\n\t            case \"stop\":\n\t                /*******************\n\t                    Action: Stop\n\t                *******************/\n\t\n\t                /* Clear the currently-active delay on each targeted element. */\n\t                $.each(elements, function(i, element) {\n\t                    if (Data(element) && Data(element).delayTimer) {\n\t                        /* Stop the timer from triggering its cached next() function. */\n\t                        clearTimeout(Data(element).delayTimer.setTimeout);\n\t\n\t                        /* Manually call the next() function so that the subsequent queue items can progress. */\n\t                        if (Data(element).delayTimer.next) {\n\t                            Data(element).delayTimer.next();\n\t                        }\n\t\n\t                        delete Data(element).delayTimer;\n\t                    }\n\t\n\t                    /* If we want to finish everything in the queue, we have to iterate through it\n\t                       and call each function. This will make them active calls below, which will\n\t                       cause them to be applied via the duration setting. */\n\t                    if (propertiesMap === \"finishAll\" && (options === true || Type.isString(options))) {\n\t                        /* Iterate through the items in the element's queue. */\n\t                        $.each($.queue(element, Type.isString(options) ? options : \"\"), function(_, item) {\n\t                            /* The queue array can contain an \"inprogress\" string, which we skip. */\n\t                            if (Type.isFunction(item)) {\n\t                                item();\n\t                            }\n\t                        });\n\t\n\t                        /* Clearing the $.queue() array is achieved by resetting it to []. */\n\t                        $.queue(element, Type.isString(options) ? options : \"\", []);\n\t                    }\n\t                });\n\t\n\t                var callsToStop = [];\n\t\n\t                /* When the stop action is triggered, the elements' currently active call is immediately stopped. The active call might have\n\t                   been applied to multiple elements, in which case all of the call's elements will be stopped. When an element\n\t                   is stopped, the next item in its animation queue is immediately triggered. */\n\t                /* An additional argument may be passed in to clear an element's remaining queued calls. Either true (which defaults to the \"fx\" queue)\n\t                   or a custom queue string can be passed in. */\n\t                /* Note: The stop command runs prior to Velocity's Queueing phase since its behavior is intended to take effect *immediately*,\n\t                   regardless of the element's current queue state. */\n\t\n\t                /* Iterate through every active call. */\n\t                $.each(Velocity.State.calls, function(i, activeCall) {\n\t                    /* Inactive calls are set to false by the logic inside completeCall(). Skip them. */\n\t                    if (activeCall) {\n\t                        /* Iterate through the active call's targeted elements. */\n\t                        $.each(activeCall[1], function(k, activeElement) {\n\t                            /* If true was passed in as a secondary argument, clear absolutely all calls on this element. Otherwise, only\n\t                               clear calls associated with the relevant queue. */\n\t                            /* Call stopping logic works as follows:\n\t                               - options === true --> stop current default queue calls (and queue:false calls), including remaining queued ones.\n\t                               - options === undefined --> stop current queue:\"\" call and all queue:false calls.\n\t                               - options === false --> stop only queue:false calls.\n\t                               - options === \"custom\" --> stop current queue:\"custom\" call, including remaining queued ones (there is no functionality to only clear the currently-running queue:\"custom\" call). */\n\t                            var queueName = (options === undefined) ? \"\" : options;\n\t\n\t                            if (queueName !== true && (activeCall[2].queue !== queueName) && !(options === undefined && activeCall[2].queue === false)) {\n\t                                return true;\n\t                            }\n\t\n\t                            /* Iterate through the calls targeted by the stop command. */\n\t                            $.each(elements, function(l, element) {\n\t                                /* Check that this call was applied to the target element. */\n\t                                if (element === activeElement) {\n\t                                    /* Optionally clear the remaining queued calls. If we're doing \"finishAll\" this won't find anything,\n\t                                       due to the queue-clearing above. */\n\t                                    if (options === true || Type.isString(options)) {\n\t                                        /* Iterate through the items in the element's queue. */\n\t                                        $.each($.queue(element, Type.isString(options) ? options : \"\"), function(_, item) {\n\t                                            /* The queue array can contain an \"inprogress\" string, which we skip. */\n\t                                            if (Type.isFunction(item)) {\n\t                                                /* Pass the item's callback a flag indicating that we want to abort from the queue call.\n\t                                                   (Specifically, the queue will resolve the call's associated promise then abort.)  */\n\t                                                item(null, true);\n\t                                            }\n\t                                        });\n\t\n\t                                        /* Clearing the $.queue() array is achieved by resetting it to []. */\n\t                                        $.queue(element, Type.isString(options) ? options : \"\", []);\n\t                                    }\n\t\n\t                                    if (propertiesMap === \"stop\") {\n\t                                        /* Since \"reverse\" uses cached start values (the previous call's endValues), these values must be\n\t                                           changed to reflect the final value that the elements were actually tweened to. */\n\t                                        /* Note: If only queue:false animations are currently running on an element, it won't have a tweensContainer\n\t                                           object. Also, queue:false animations can't be reversed. */\n\t                                        if (Data(element) && Data(element).tweensContainer && queueName !== false) {\n\t                                            $.each(Data(element).tweensContainer, function(m, activeTween) {\n\t                                                activeTween.endValue = activeTween.currentValue;\n\t                                            });\n\t                                        }\n\t\n\t                                        callsToStop.push(i);\n\t                                    } else if (propertiesMap === \"finish\" || propertiesMap === \"finishAll\") {\n\t                                        /* To get active tweens to finish immediately, we forcefully shorten their durations to 1ms so that\n\t                                        they finish upon the next rAf tick then proceed with normal call completion logic. */\n\t                                        activeCall[2].duration = 1;\n\t                                    }\n\t                                }\n\t                            });\n\t                        });\n\t                    }\n\t                });\n\t\n\t                /* Prematurely call completeCall() on each matched active call. Pass an additional flag for \"stop\" to indicate\n\t                   that the complete callback and display:none setting should be skipped since we're completing prematurely. */\n\t                if (propertiesMap === \"stop\") {\n\t                    $.each(callsToStop, function(i, j) {\n\t                        completeCall(j, true);\n\t                    });\n\t\n\t                    if (promiseData.promise) {\n\t                        /* Immediately resolve the promise associated with this stop call since stop runs synchronously. */\n\t                        promiseData.resolver(elements);\n\t                    }\n\t                }\n\t\n\t                /* Since we're stopping, and not proceeding with queueing, exit out of Velocity. */\n\t                return getChain();\n\t\n\t            default:\n\t                /* Treat a non-empty plain object as a literal properties map. */\n\t                if ($.isPlainObject(propertiesMap) && !Type.isEmptyObject(propertiesMap)) {\n\t                    action = \"start\";\n\t\n\t                /****************\n\t                    Redirects\n\t                ****************/\n\t\n\t                /* Check if a string matches a registered redirect (see Redirects above). */\n\t                } else if (Type.isString(propertiesMap) && Velocity.Redirects[propertiesMap]) {\n\t                    var opts = $.extend({}, options),\n\t                        durationOriginal = opts.duration,\n\t                        delayOriginal = opts.delay || 0;\n\t\n\t                    /* If the backwards option was passed in, reverse the element set so that elements animate from the last to the first. */\n\t                    if (opts.backwards === true) {\n\t                        elements = $.extend(true, [], elements).reverse();\n\t                    }\n\t\n\t                    /* Individually trigger the redirect for each element in the set to prevent users from having to handle iteration logic in their redirect. */\n\t                    $.each(elements, function(elementIndex, element) {\n\t                        /* If the stagger option was passed in, successively delay each element by the stagger value (in ms). Retain the original delay value. */\n\t                        if (parseFloat(opts.stagger)) {\n\t                            opts.delay = delayOriginal + (parseFloat(opts.stagger) * elementIndex);\n\t                        } else if (Type.isFunction(opts.stagger)) {\n\t                            opts.delay = delayOriginal + opts.stagger.call(element, elementIndex, elementsLength);\n\t                        }\n\t\n\t                        /* If the drag option was passed in, successively increase/decrease (depending on the presense of opts.backwards)\n\t                           the duration of each element's animation, using floors to prevent producing very short durations. */\n\t                        if (opts.drag) {\n\t                            /* Default the duration of UI pack effects (callouts and transitions) to 1000ms instead of the usual default duration of 400ms. */\n\t                            opts.duration = parseFloat(durationOriginal) || (/^(callout|transition)/.test(propertiesMap) ? 1000 : DURATION_DEFAULT);\n\t\n\t                            /* For each element, take the greater duration of: A) animation completion percentage relative to the original duration,\n\t                               B) 75% of the original duration, or C) a 200ms fallback (in case duration is already set to a low value).\n\t                               The end result is a baseline of 75% of the redirect's duration that increases/decreases as the end of the element set is approached. */\n\t                            opts.duration = Math.max(opts.duration * (opts.backwards ? 1 - elementIndex/elementsLength : (elementIndex + 1) / elementsLength), opts.duration * 0.75, 200);\n\t                        }\n\t\n\t                        /* Pass in the call's opts object so that the redirect can optionally extend it. It defaults to an empty object instead of null to\n\t                           reduce the opts checking logic required inside the redirect. */\n\t                        Velocity.Redirects[propertiesMap].call(element, element, opts || {}, elementIndex, elementsLength, elements, promiseData.promise ? promiseData : undefined);\n\t                    });\n\t\n\t                    /* Since the animation logic resides within the redirect's own code, abort the remainder of this call.\n\t                       (The performance overhead up to this point is virtually non-existant.) */\n\t                    /* Note: The jQuery call chain is kept intact by returning the complete element set. */\n\t                    return getChain();\n\t                } else {\n\t                    var abortError = \"Velocity: First argument (\" + propertiesMap + \") was not a property map, a known action, or a registered redirect. Aborting.\";\n\t\n\t                    if (promiseData.promise) {\n\t                        promiseData.rejecter(new Error(abortError));\n\t                    } else {\n\t                        console.log(abortError);\n\t                    }\n\t\n\t                    return getChain();\n\t                }\n\t        }\n\t\n\t        /**************************\n\t            Call-Wide Variables\n\t        **************************/\n\t\n\t        /* A container for CSS unit conversion ratios (e.g. %, rem, and em ==> px) that is used to cache ratios across all elements\n\t           being animated in a single Velocity call. Calculating unit ratios necessitates DOM querying and updating, and is therefore\n\t           avoided (via caching) wherever possible. This container is call-wide instead of page-wide to avoid the risk of using stale\n\t           conversion metrics across Velocity animations that are not immediately consecutively chained. */\n\t        var callUnitConversionData = {\n\t                lastParent: null,\n\t                lastPosition: null,\n\t                lastFontSize: null,\n\t                lastPercentToPxWidth: null,\n\t                lastPercentToPxHeight: null,\n\t                lastEmToPx: null,\n\t                remToPx: null,\n\t                vwToPx: null,\n\t                vhToPx: null\n\t            };\n\t\n\t        /* A container for all the ensuing tween data and metadata associated with this call. This container gets pushed to the page-wide\n\t           Velocity.State.calls array that is processed during animation ticking. */\n\t        var call = [];\n\t\n\t        /************************\n\t           Element Processing\n\t        ************************/\n\t\n\t        /* Element processing consists of three parts -- data processing that cannot go stale and data processing that *can* go stale (i.e. third-party style modifications):\n\t           1) Pre-Queueing: Element-wide variables, including the element's data storage, are instantiated. Call options are prepared. If triggered, the Stop action is executed.\n\t           2) Queueing: The logic that runs once this call has reached its point of execution in the element's $.queue() stack. Most logic is placed here to avoid risking it becoming stale.\n\t           3) Pushing: Consolidation of the tween data followed by its push onto the global in-progress calls container.\n\t        */\n\t\n\t        function processElement () {\n\t\n\t            /*************************\n\t               Part I: Pre-Queueing\n\t            *************************/\n\t\n\t            /***************************\n\t               Element-Wide Variables\n\t            ***************************/\n\t\n\t            var element = this,\n\t                /* The runtime opts object is the extension of the current call's options and Velocity's page-wide option defaults. */\n\t                opts = $.extend({}, Velocity.defaults, options),\n\t                /* A container for the processed data associated with each property in the propertyMap.\n\t                   (Each property in the map produces its own \"tween\".) */\n\t                tweensContainer = {},\n\t                elementUnitConversionData;\n\t\n\t            /******************\n\t               Element Init\n\t            ******************/\n\t\n\t            if (Data(element) === undefined) {\n\t                Velocity.init(element);\n\t            }\n\t\n\t            /******************\n\t               Option: Delay\n\t            ******************/\n\t\n\t            /* Since queue:false doesn't respect the item's existing queue, we avoid injecting its delay here (it's set later on). */\n\t            /* Note: Velocity rolls its own delay function since jQuery doesn't have a utility alias for $.fn.delay()\n\t               (and thus requires jQuery element creation, which we avoid since its overhead includes DOM querying). */\n\t            if (parseFloat(opts.delay) && opts.queue !== false) {\n\t                $.queue(element, opts.queue, function(next) {\n\t                    /* This is a flag used to indicate to the upcoming completeCall() function that this queue entry was initiated by Velocity. See completeCall() for further details. */\n\t                    Velocity.velocityQueueEntryFlag = true;\n\t\n\t                    /* The ensuing queue item (which is assigned to the \"next\" argument that $.queue() automatically passes in) will be triggered after a setTimeout delay.\n\t                       The setTimeout is stored so that it can be subjected to clearTimeout() if this animation is prematurely stopped via Velocity's \"stop\" command. */\n\t                    Data(element).delayTimer = {\n\t                        setTimeout: setTimeout(next, parseFloat(opts.delay)),\n\t                        next: next\n\t                    };\n\t                });\n\t            }\n\t\n\t            /*********************\n\t               Option: Duration\n\t            *********************/\n\t\n\t            /* Support for jQuery's named durations. */\n\t            switch (opts.duration.toString().toLowerCase()) {\n\t                case \"fast\":\n\t                    opts.duration = 200;\n\t                    break;\n\t\n\t                case \"normal\":\n\t                    opts.duration = DURATION_DEFAULT;\n\t                    break;\n\t\n\t                case \"slow\":\n\t                    opts.duration = 600;\n\t                    break;\n\t\n\t                default:\n\t                    /* Remove the potential \"ms\" suffix and default to 1 if the user is attempting to set a duration of 0 (in order to produce an immediate style change). */\n\t                    opts.duration = parseFloat(opts.duration) || 1;\n\t            }\n\t\n\t            /************************\n\t               Global Option: Mock\n\t            ************************/\n\t\n\t            if (Velocity.mock !== false) {\n\t                /* In mock mode, all animations are forced to 1ms so that they occur immediately upon the next rAF tick.\n\t                   Alternatively, a multiplier can be passed in to time remap all delays and durations. */\n\t                if (Velocity.mock === true) {\n\t                    opts.duration = opts.delay = 1;\n\t                } else {\n\t                    opts.duration *= parseFloat(Velocity.mock) || 1;\n\t                    opts.delay *= parseFloat(Velocity.mock) || 1;\n\t                }\n\t            }\n\t\n\t            /*******************\n\t               Option: Easing\n\t            *******************/\n\t\n\t            opts.easing = getEasing(opts.easing, opts.duration);\n\t\n\t            /**********************\n\t               Option: Callbacks\n\t            **********************/\n\t\n\t            /* Callbacks must functions. Otherwise, default to null. */\n\t            if (opts.begin && !Type.isFunction(opts.begin)) {\n\t                opts.begin = null;\n\t            }\n\t\n\t            if (opts.progress && !Type.isFunction(opts.progress)) {\n\t                opts.progress = null;\n\t            }\n\t\n\t            if (opts.complete && !Type.isFunction(opts.complete)) {\n\t                opts.complete = null;\n\t            }\n\t\n\t            /*********************************\n\t               Option: Display & Visibility\n\t            *********************************/\n\t\n\t            /* Refer to Velocity's documentation (VelocityJS.org/#displayAndVisibility) for a description of the display and visibility options' behavior. */\n\t            /* Note: We strictly check for undefined instead of falsiness because display accepts an empty string value. */\n\t            if (opts.display !== undefined && opts.display !== null) {\n\t                opts.display = opts.display.toString().toLowerCase();\n\t\n\t                /* Users can pass in a special \"auto\" value to instruct Velocity to set the element to its default display value. */\n\t                if (opts.display === \"auto\") {\n\t                    opts.display = Velocity.CSS.Values.getDisplayType(element);\n\t                }\n\t            }\n\t\n\t            if (opts.visibility !== undefined && opts.visibility !== null) {\n\t                opts.visibility = opts.visibility.toString().toLowerCase();\n\t            }\n\t\n\t            /**********************\n\t               Option: mobileHA\n\t            **********************/\n\t\n\t            /* When set to true, and if this is a mobile device, mobileHA automatically enables hardware acceleration (via a null transform hack)\n\t               on animating elements. HA is removed from the element at the completion of its animation. */\n\t            /* Note: Android Gingerbread doesn't support HA. If a null transform hack (mobileHA) is in fact set, it will prevent other tranform subproperties from taking effect. */\n\t            /* Note: You can read more about the use of mobileHA in Velocity's documentation: VelocityJS.org/#mobileHA. */\n\t            opts.mobileHA = (opts.mobileHA && Velocity.State.isMobile && !Velocity.State.isGingerbread);\n\t\n\t            /***********************\n\t               Part II: Queueing\n\t            ***********************/\n\t\n\t            /* When a set of elements is targeted by a Velocity call, the set is broken up and each element has the current Velocity call individually queued onto it.\n\t               In this way, each element's existing queue is respected; some elements may already be animating and accordingly should not have this current Velocity call triggered immediately. */\n\t            /* In each queue, tween data is processed for each animating property then pushed onto the call-wide calls array. When the last element in the set has had its tweens processed,\n\t               the call array is pushed to Velocity.State.calls for live processing by the requestAnimationFrame tick. */\n\t            function buildQueue (next) {\n\t\n\t                /*******************\n\t                   Option: Begin\n\t                *******************/\n\t\n\t                /* The begin callback is fired once per call -- not once per elemenet -- and is passed the full raw DOM element set as both its context and its first argument. */\n\t                if (opts.begin && elementsIndex === 0) {\n\t                    /* We throw callbacks in a setTimeout so that thrown errors don't halt the execution of Velocity itself. */\n\t                    try {\n\t                        opts.begin.call(elements, elements);\n\t                    } catch (error) {\n\t                        setTimeout(function() { throw error; }, 1);\n\t                    }\n\t                }\n\t\n\t                /*****************************************\n\t                   Tween Data Construction (for Scroll)\n\t                *****************************************/\n\t\n\t                /* Note: In order to be subjected to chaining and animation options, scroll's tweening is routed through Velocity as if it were a standard CSS property animation. */\n\t                if (action === \"scroll\") {\n\t                    /* The scroll action uniquely takes an optional \"offset\" option -- specified in pixels -- that offsets the targeted scroll position. */\n\t                    var scrollDirection = (/^x$/i.test(opts.axis) ? \"Left\" : \"Top\"),\n\t                        scrollOffset = parseFloat(opts.offset) || 0,\n\t                        scrollPositionCurrent,\n\t                        scrollPositionCurrentAlternate,\n\t                        scrollPositionEnd;\n\t\n\t                    /* Scroll also uniquely takes an optional \"container\" option, which indicates the parent element that should be scrolled --\n\t                       as opposed to the browser window itself. This is useful for scrolling toward an element that's inside an overflowing parent element. */\n\t                    if (opts.container) {\n\t                        /* Ensure that either a jQuery object or a raw DOM element was passed in. */\n\t                        if (Type.isWrapped(opts.container) || Type.isNode(opts.container)) {\n\t                            /* Extract the raw DOM element from the jQuery wrapper. */\n\t                            opts.container = opts.container[0] || opts.container;\n\t                            /* Note: Unlike other properties in Velocity, the browser's scroll position is never cached since it so frequently changes\n\t                               (due to the user's natural interaction with the page). */\n\t                            scrollPositionCurrent = opts.container[\"scroll\" + scrollDirection]; /* GET */\n\t\n\t                            /* $.position() values are relative to the container's currently viewable area (without taking into account the container's true dimensions\n\t                               -- say, for example, if the container was not overflowing). Thus, the scroll end value is the sum of the child element's position *and*\n\t                               the scroll container's current scroll position. */\n\t                            scrollPositionEnd = (scrollPositionCurrent + $(element).position()[scrollDirection.toLowerCase()]) + scrollOffset; /* GET */\n\t                        /* If a value other than a jQuery object or a raw DOM element was passed in, default to null so that this option is ignored. */\n\t                        } else {\n\t                            opts.container = null;\n\t                        }\n\t                    } else {\n\t                        /* If the window itself is being scrolled -- not a containing element -- perform a live scroll position lookup using\n\t                           the appropriate cached property names (which differ based on browser type). */\n\t                        scrollPositionCurrent = Velocity.State.scrollAnchor[Velocity.State[\"scrollProperty\" + scrollDirection]]; /* GET */\n\t                        /* When scrolling the browser window, cache the alternate axis's current value since window.scrollTo() doesn't let us change only one value at a time. */\n\t                        scrollPositionCurrentAlternate = Velocity.State.scrollAnchor[Velocity.State[\"scrollProperty\" + (scrollDirection === \"Left\" ? \"Top\" : \"Left\")]]; /* GET */\n\t\n\t                        /* Unlike $.position(), $.offset() values are relative to the browser window's true dimensions -- not merely its currently viewable area --\n\t                           and therefore end values do not need to be compounded onto current values. */\n\t                        scrollPositionEnd = $(element).offset()[scrollDirection.toLowerCase()] + scrollOffset; /* GET */\n\t                    }\n\t\n\t                    /* Since there's only one format that scroll's associated tweensContainer can take, we create it manually. */\n\t                    tweensContainer = {\n\t                        scroll: {\n\t                            rootPropertyValue: false,\n\t                            startValue: scrollPositionCurrent,\n\t                            currentValue: scrollPositionCurrent,\n\t                            endValue: scrollPositionEnd,\n\t                            unitType: \"\",\n\t                            easing: opts.easing,\n\t                            scrollData: {\n\t                                container: opts.container,\n\t                                direction: scrollDirection,\n\t                                alternateValue: scrollPositionCurrentAlternate\n\t                            }\n\t                        },\n\t                        element: element\n\t                    };\n\t\n\t                    if (Velocity.debug) console.log(\"tweensContainer (scroll): \", tweensContainer.scroll, element);\n\t\n\t                /******************************************\n\t                   Tween Data Construction (for Reverse)\n\t                ******************************************/\n\t\n\t                /* Reverse acts like a \"start\" action in that a property map is animated toward. The only difference is\n\t                   that the property map used for reverse is the inverse of the map used in the previous call. Thus, we manipulate\n\t                   the previous call to construct our new map: use the previous map's end values as our new map's start values. Copy over all other data. */\n\t                /* Note: Reverse can be directly called via the \"reverse\" parameter, or it can be indirectly triggered via the loop option. (Loops are composed of multiple reverses.) */\n\t                /* Note: Reverse calls do not need to be consecutively chained onto a currently-animating element in order to operate on cached values;\n\t                   there is no harm to reverse being called on a potentially stale data cache since reverse's behavior is simply defined\n\t                   as reverting to the element's values as they were prior to the previous *Velocity* call. */\n\t                } else if (action === \"reverse\") {\n\t                    /* Abort if there is no prior animation data to reverse to. */\n\t                    if (!Data(element).tweensContainer) {\n\t                        /* Dequeue the element so that this queue entry releases itself immediately, allowing subsequent queue entries to run. */\n\t                        $.dequeue(element, opts.queue);\n\t\n\t                        return;\n\t                    } else {\n\t                        /*********************\n\t                           Options Parsing\n\t                        *********************/\n\t\n\t                        /* If the element was hidden via the display option in the previous call,\n\t                           revert display to \"auto\" prior to reversal so that the element is visible again. */\n\t                        if (Data(element).opts.display === \"none\") {\n\t                            Data(element).opts.display = \"auto\";\n\t                        }\n\t\n\t                        if (Data(element).opts.visibility === \"hidden\") {\n\t                            Data(element).opts.visibility = \"visible\";\n\t                        }\n\t\n\t                        /* If the loop option was set in the previous call, disable it so that \"reverse\" calls aren't recursively generated.\n\t                           Further, remove the previous call's callback options; typically, users do not want these to be refired. */\n\t                        Data(element).opts.loop = false;\n\t                        Data(element).opts.begin = null;\n\t                        Data(element).opts.complete = null;\n\t\n\t                        /* Since we're extending an opts object that has already been extended with the defaults options object,\n\t                           we remove non-explicitly-defined properties that are auto-assigned values. */\n\t                        if (!options.easing) {\n\t                            delete opts.easing;\n\t                        }\n\t\n\t                        if (!options.duration) {\n\t                            delete opts.duration;\n\t                        }\n\t\n\t                        /* The opts object used for reversal is an extension of the options object optionally passed into this\n\t                           reverse call plus the options used in the previous Velocity call. */\n\t                        opts = $.extend({}, Data(element).opts, opts);\n\t\n\t                        /*************************************\n\t                           Tweens Container Reconstruction\n\t                        *************************************/\n\t\n\t                        /* Create a deepy copy (indicated via the true flag) of the previous call's tweensContainer. */\n\t                        var lastTweensContainer = $.extend(true, {}, Data(element).tweensContainer);\n\t\n\t                        /* Manipulate the previous tweensContainer by replacing its end values and currentValues with its start values. */\n\t                        for (var lastTween in lastTweensContainer) {\n\t                            /* In addition to tween data, tweensContainers contain an element property that we ignore here. */\n\t                            if (lastTween !== \"element\") {\n\t                                var lastStartValue = lastTweensContainer[lastTween].startValue;\n\t\n\t                                lastTweensContainer[lastTween].startValue = lastTweensContainer[lastTween].currentValue = lastTweensContainer[lastTween].endValue;\n\t                                lastTweensContainer[lastTween].endValue = lastStartValue;\n\t\n\t                                /* Easing is the only option that embeds into the individual tween data (since it can be defined on a per-property basis).\n\t                                   Accordingly, every property's easing value must be updated when an options object is passed in with a reverse call.\n\t                                   The side effect of this extensibility is that all per-property easing values are forcefully reset to the new value. */\n\t                                if (!Type.isEmptyObject(options)) {\n\t                                    lastTweensContainer[lastTween].easing = opts.easing;\n\t                                }\n\t\n\t                                if (Velocity.debug) console.log(\"reverse tweensContainer (\" + lastTween + \"): \" + JSON.stringify(lastTweensContainer[lastTween]), element);\n\t                            }\n\t                        }\n\t\n\t                        tweensContainer = lastTweensContainer;\n\t                    }\n\t\n\t                /*****************************************\n\t                   Tween Data Construction (for Start)\n\t                *****************************************/\n\t\n\t                } else if (action === \"start\") {\n\t\n\t                    /*************************\n\t                        Value Transferring\n\t                    *************************/\n\t\n\t                    /* If this queue entry follows a previous Velocity-initiated queue entry *and* if this entry was created\n\t                       while the element was in the process of being animated by Velocity, then this current call is safe to use\n\t                       the end values from the prior call as its start values. Velocity attempts to perform this value transfer\n\t                       process whenever possible in order to avoid requerying the DOM. */\n\t                    /* If values aren't transferred from a prior call and start values were not forcefed by the user (more on this below),\n\t                       then the DOM is queried for the element's current values as a last resort. */\n\t                    /* Note: Conversely, animation reversal (and looping) *always* perform inter-call value transfers; they never requery the DOM. */\n\t                    var lastTweensContainer;\n\t\n\t                    /* The per-element isAnimating flag is used to indicate whether it's safe (i.e. the data isn't stale)\n\t                       to transfer over end values to use as start values. If it's set to true and there is a previous\n\t                       Velocity call to pull values from, do so. */\n\t                    if (Data(element).tweensContainer && Data(element).isAnimating === true) {\n\t                        lastTweensContainer = Data(element).tweensContainer;\n\t                    }\n\t\n\t                    /***************************\n\t                       Tween Data Calculation\n\t                    ***************************/\n\t\n\t                    /* This function parses property data and defaults endValue, easing, and startValue as appropriate. */\n\t                    /* Property map values can either take the form of 1) a single value representing the end value,\n\t                       or 2) an array in the form of [ endValue, [, easing] [, startValue] ].\n\t                       The optional third parameter is a forcefed startValue to be used instead of querying the DOM for\n\t                       the element's current value. Read Velocity's docmentation to learn more about forcefeeding: VelocityJS.org/#forcefeeding */\n\t                    function parsePropertyValue (valueData, skipResolvingEasing) {\n\t                        var endValue = undefined,\n\t                            easing = undefined,\n\t                            startValue = undefined;\n\t\n\t                        /* Handle the array format, which can be structured as one of three potential overloads:\n\t                           A) [ endValue, easing, startValue ], B) [ endValue, easing ], or C) [ endValue, startValue ] */\n\t                        if (Type.isArray(valueData)) {\n\t                            /* endValue is always the first item in the array. Don't bother validating endValue's value now\n\t                               since the ensuing property cycling logic does that. */\n\t                            endValue = valueData[0];\n\t\n\t                            /* Two-item array format: If the second item is a number, function, or hex string, treat it as a\n\t                               start value since easings can only be non-hex strings or arrays. */\n\t                            if ((!Type.isArray(valueData[1]) && /^[\\d-]/.test(valueData[1])) || Type.isFunction(valueData[1]) || CSS.RegEx.isHex.test(valueData[1])) {\n\t                                startValue = valueData[1];\n\t                            /* Two or three-item array: If the second item is a non-hex string or an array, treat it as an easing. */\n\t                            } else if ((Type.isString(valueData[1]) && !CSS.RegEx.isHex.test(valueData[1])) || Type.isArray(valueData[1])) {\n\t                                easing = skipResolvingEasing ? valueData[1] : getEasing(valueData[1], opts.duration);\n\t\n\t                                /* Don't bother validating startValue's value now since the ensuing property cycling logic inherently does that. */\n\t                                if (valueData[2] !== undefined) {\n\t                                    startValue = valueData[2];\n\t                                }\n\t                            }\n\t                        /* Handle the single-value format. */\n\t                        } else {\n\t                            endValue = valueData;\n\t                        }\n\t\n\t                        /* Default to the call's easing if a per-property easing type was not defined. */\n\t                        if (!skipResolvingEasing) {\n\t                            easing = easing || opts.easing;\n\t                        }\n\t\n\t                        /* If functions were passed in as values, pass the function the current element as its context,\n\t                           plus the element's index and the element set's size as arguments. Then, assign the returned value. */\n\t                        if (Type.isFunction(endValue)) {\n\t                            endValue = endValue.call(element, elementsIndex, elementsLength);\n\t                        }\n\t\n\t                        if (Type.isFunction(startValue)) {\n\t                            startValue = startValue.call(element, elementsIndex, elementsLength);\n\t                        }\n\t\n\t                        /* Allow startValue to be left as undefined to indicate to the ensuing code that its value was not forcefed. */\n\t                        return [ endValue || 0, easing, startValue ];\n\t                    }\n\t\n\t                    /* Cycle through each property in the map, looking for shorthand color properties (e.g. \"color\" as opposed to \"colorRed\"). Inject the corresponding\n\t                       colorRed, colorGreen, and colorBlue RGB component tweens into the propertiesMap (which Velocity understands) and remove the shorthand property. */\n\t                    $.each(propertiesMap, function(property, value) {\n\t                        /* Find shorthand color properties that have been passed a hex string. */\n\t                        if (RegExp(\"^\" + CSS.Lists.colors.join(\"$|^\") + \"$\").test(property)) {\n\t                            /* Parse the value data for each shorthand. */\n\t                            var valueData = parsePropertyValue(value, true),\n\t                                endValue = valueData[0],\n\t                                easing = valueData[1],\n\t                                startValue = valueData[2];\n\t\n\t                            if (CSS.RegEx.isHex.test(endValue)) {\n\t                                /* Convert the hex strings into their RGB component arrays. */\n\t                                var colorComponents = [ \"Red\", \"Green\", \"Blue\" ],\n\t                                    endValueRGB = CSS.Values.hexToRgb(endValue),\n\t                                    startValueRGB = startValue ? CSS.Values.hexToRgb(startValue) : undefined;\n\t\n\t                                /* Inject the RGB component tweens into propertiesMap. */\n\t                                for (var i = 0; i < colorComponents.length; i++) {\n\t                                    var dataArray = [ endValueRGB[i] ];\n\t\n\t                                    if (easing) {\n\t                                        dataArray.push(easing);\n\t                                    }\n\t\n\t                                    if (startValueRGB !== undefined) {\n\t                                        dataArray.push(startValueRGB[i]);\n\t                                    }\n\t\n\t                                    propertiesMap[property + colorComponents[i]] = dataArray;\n\t                                }\n\t\n\t                                /* Remove the intermediary shorthand property entry now that we've processed it. */\n\t                                delete propertiesMap[property];\n\t                            }\n\t                        }\n\t                    });\n\t\n\t                    /* Create a tween out of each property, and append its associated data to tweensContainer. */\n\t                    for (var property in propertiesMap) {\n\t\n\t                        /**************************\n\t                           Start Value Sourcing\n\t                        **************************/\n\t\n\t                        /* Parse out endValue, easing, and startValue from the property's data. */\n\t                        var valueData = parsePropertyValue(propertiesMap[property]),\n\t                            endValue = valueData[0],\n\t                            easing = valueData[1],\n\t                            startValue = valueData[2];\n\t\n\t                        /* Now that the original property name's format has been used for the parsePropertyValue() lookup above,\n\t                           we force the property to its camelCase styling to normalize it for manipulation. */\n\t                        property = CSS.Names.camelCase(property);\n\t\n\t                        /* In case this property is a hook, there are circumstances where we will intend to work on the hook's root property and not the hooked subproperty. */\n\t                        var rootProperty = CSS.Hooks.getRoot(property),\n\t                            rootPropertyValue = false;\n\t\n\t                        /* Other than for the dummy tween property, properties that are not supported by the browser (and do not have an associated normalization) will\n\t                           inherently produce no style changes when set, so they are skipped in order to decrease animation tick overhead.\n\t                           Property support is determined via prefixCheck(), which returns a false flag when no supported is detected. */\n\t                        /* Note: Since SVG elements have some of their properties directly applied as HTML attributes,\n\t                           there is no way to check for their explicit browser support, and so we skip skip this check for them. */\n\t                        if (!Data(element).isSVG && rootProperty !== \"tween\" && CSS.Names.prefixCheck(rootProperty)[1] === false && CSS.Normalizations.registered[rootProperty] === undefined) {\n\t                            if (Velocity.debug) console.log(\"Skipping [\" + rootProperty + \"] due to a lack of browser support.\");\n\t\n\t                            continue;\n\t                        }\n\t\n\t                        /* If the display option is being set to a non-\"none\" (e.g. \"block\") and opacity (filter on IE<=8) is being\n\t                           animated to an endValue of non-zero, the user's intention is to fade in from invisible, thus we forcefeed opacity\n\t                           a startValue of 0 if its startValue hasn't already been sourced by value transferring or prior forcefeeding. */\n\t                        if (((opts.display !== undefined && opts.display !== null && opts.display !== \"none\") || (opts.visibility !== undefined && opts.visibility !== \"hidden\")) && /opacity|filter/.test(property) && !startValue && endValue !== 0) {\n\t                            startValue = 0;\n\t                        }\n\t\n\t                        /* If values have been transferred from the previous Velocity call, extract the endValue and rootPropertyValue\n\t                           for all of the current call's properties that were *also* animated in the previous call. */\n\t                        /* Note: Value transferring can optionally be disabled by the user via the _cacheValues option. */\n\t                        if (opts._cacheValues && lastTweensContainer && lastTweensContainer[property]) {\n\t                            if (startValue === undefined) {\n\t                                startValue = lastTweensContainer[property].endValue + lastTweensContainer[property].unitType;\n\t                            }\n\t\n\t                            /* The previous call's rootPropertyValue is extracted from the element's data cache since that's the\n\t                               instance of rootPropertyValue that gets freshly updated by the tweening process, whereas the rootPropertyValue\n\t                               attached to the incoming lastTweensContainer is equal to the root property's value prior to any tweening. */\n\t                            rootPropertyValue = Data(element).rootPropertyValueCache[rootProperty];\n\t                        /* If values were not transferred from a previous Velocity call, query the DOM as needed. */\n\t                        } else {\n\t                            /* Handle hooked properties. */\n\t                            if (CSS.Hooks.registered[property]) {\n\t                               if (startValue === undefined) {\n\t                                    rootPropertyValue = CSS.getPropertyValue(element, rootProperty); /* GET */\n\t                                    /* Note: The following getPropertyValue() call does not actually trigger a DOM query;\n\t                                       getPropertyValue() will extract the hook from rootPropertyValue. */\n\t                                    startValue = CSS.getPropertyValue(element, property, rootPropertyValue);\n\t                                /* If startValue is already defined via forcefeeding, do not query the DOM for the root property's value;\n\t                                   just grab rootProperty's zero-value template from CSS.Hooks. This overwrites the element's actual\n\t                                   root property value (if one is set), but this is acceptable since the primary reason users forcefeed is\n\t                                   to avoid DOM queries, and thus we likewise avoid querying the DOM for the root property's value. */\n\t                                } else {\n\t                                    /* Grab this hook's zero-value template, e.g. \"0px 0px 0px black\". */\n\t                                    rootPropertyValue = CSS.Hooks.templates[rootProperty][1];\n\t                                }\n\t                            /* Handle non-hooked properties that haven't already been defined via forcefeeding. */\n\t                            } else if (startValue === undefined) {\n\t                                startValue = CSS.getPropertyValue(element, property); /* GET */\n\t                            }\n\t                        }\n\t\n\t                        /**************************\n\t                           Value Data Extraction\n\t                        **************************/\n\t\n\t                        var separatedValue,\n\t                            endValueUnitType,\n\t                            startValueUnitType,\n\t                            operator = false;\n\t\n\t                        /* Separates a property value into its numeric value and its unit type. */\n\t                        function separateValue (property, value) {\n\t                            var unitType,\n\t                                numericValue;\n\t\n\t                            numericValue = (value || \"0\")\n\t                                .toString()\n\t                                .toLowerCase()\n\t                                /* Match the unit type at the end of the value. */\n\t                                .replace(/[%A-z]+$/, function(match) {\n\t                                    /* Grab the unit type. */\n\t                                    unitType = match;\n\t\n\t                                    /* Strip the unit type off of value. */\n\t                                    return \"\";\n\t                                });\n\t\n\t                            /* If no unit type was supplied, assign one that is appropriate for this property (e.g. \"deg\" for rotateZ or \"px\" for width). */\n\t                            if (!unitType) {\n\t                                unitType = CSS.Values.getUnitType(property);\n\t                            }\n\t\n\t                            return [ numericValue, unitType ];\n\t                        }\n\t\n\t                        /* Separate startValue. */\n\t                        separatedValue = separateValue(property, startValue);\n\t                        startValue = separatedValue[0];\n\t                        startValueUnitType = separatedValue[1];\n\t\n\t                        /* Separate endValue, and extract a value operator (e.g. \"+=\", \"-=\") if one exists. */\n\t                        separatedValue = separateValue(property, endValue);\n\t                        endValue = separatedValue[0].replace(/^([+-\\/*])=/, function(match, subMatch) {\n\t                            operator = subMatch;\n\t\n\t                            /* Strip the operator off of the value. */\n\t                            return \"\";\n\t                        });\n\t                        endValueUnitType = separatedValue[1];\n\t\n\t                        /* Parse float values from endValue and startValue. Default to 0 if NaN is returned. */\n\t                        startValue = parseFloat(startValue) || 0;\n\t                        endValue = parseFloat(endValue) || 0;\n\t\n\t                        /***************************************\n\t                           Property-Specific Value Conversion\n\t                        ***************************************/\n\t\n\t                        /* Custom support for properties that don't actually accept the % unit type, but where pollyfilling is trivial and relatively foolproof. */\n\t                        if (endValueUnitType === \"%\") {\n\t                            /* A %-value fontSize/lineHeight is relative to the parent's fontSize (as opposed to the parent's dimensions),\n\t                               which is identical to the em unit's behavior, so we piggyback off of that. */\n\t                            if (/^(fontSize|lineHeight)$/.test(property)) {\n\t                                /* Convert % into an em decimal value. */\n\t                                endValue = endValue / 100;\n\t                                endValueUnitType = \"em\";\n\t                            /* For scaleX and scaleY, convert the value into its decimal format and strip off the unit type. */\n\t                            } else if (/^scale/.test(property)) {\n\t                                endValue = endValue / 100;\n\t                                endValueUnitType = \"\";\n\t                            /* For RGB components, take the defined percentage of 255 and strip off the unit type. */\n\t                            } else if (/(Red|Green|Blue)$/i.test(property)) {\n\t                                endValue = (endValue / 100) * 255;\n\t                                endValueUnitType = \"\";\n\t                            }\n\t                        }\n\t\n\t                        /***************************\n\t                           Unit Ratio Calculation\n\t                        ***************************/\n\t\n\t                        /* When queried, the browser returns (most) CSS property values in pixels. Therefore, if an endValue with a unit type of\n\t                           %, em, or rem is animated toward, startValue must be converted from pixels into the same unit type as endValue in order\n\t                           for value manipulation logic (increment/decrement) to proceed. Further, if the startValue was forcefed or transferred\n\t                           from a previous call, startValue may also not be in pixels. Unit conversion logic therefore consists of two steps:\n\t                           1) Calculating the ratio of %/em/rem/vh/vw relative to pixels\n\t                           2) Converting startValue into the same unit of measurement as endValue based on these ratios. */\n\t                        /* Unit conversion ratios are calculated by inserting a sibling node next to the target node, copying over its position property,\n\t                           setting values with the target unit type then comparing the returned pixel value. */\n\t                        /* Note: Even if only one of these unit types is being animated, all unit ratios are calculated at once since the overhead\n\t                           of batching the SETs and GETs together upfront outweights the potential overhead\n\t                           of layout thrashing caused by re-querying for uncalculated ratios for subsequently-processed properties. */\n\t                        /* Todo: Shift this logic into the calls' first tick instance so that it's synced with RAF. */\n\t                        function calculateUnitRatios () {\n\t\n\t                            /************************\n\t                                Same Ratio Checks\n\t                            ************************/\n\t\n\t                            /* The properties below are used to determine whether the element differs sufficiently from this call's\n\t                               previously iterated element to also differ in its unit conversion ratios. If the properties match up with those\n\t                               of the prior element, the prior element's conversion ratios are used. Like most optimizations in Velocity,\n\t                               this is done to minimize DOM querying. */\n\t                            var sameRatioIndicators = {\n\t                                    myParent: element.parentNode || document.body, /* GET */\n\t                                    position: CSS.getPropertyValue(element, \"position\"), /* GET */\n\t                                    fontSize: CSS.getPropertyValue(element, \"fontSize\") /* GET */\n\t                                },\n\t                                /* Determine if the same % ratio can be used. % is based on the element's position value and its parent's width and height dimensions. */\n\t                                samePercentRatio = ((sameRatioIndicators.position === callUnitConversionData.lastPosition) && (sameRatioIndicators.myParent === callUnitConversionData.lastParent)),\n\t                                /* Determine if the same em ratio can be used. em is relative to the element's fontSize. */\n\t                                sameEmRatio = (sameRatioIndicators.fontSize === callUnitConversionData.lastFontSize);\n\t\n\t                            /* Store these ratio indicators call-wide for the next element to compare against. */\n\t                            callUnitConversionData.lastParent = sameRatioIndicators.myParent;\n\t                            callUnitConversionData.lastPosition = sameRatioIndicators.position;\n\t                            callUnitConversionData.lastFontSize = sameRatioIndicators.fontSize;\n\t\n\t                            /***************************\n\t                               Element-Specific Units\n\t                            ***************************/\n\t\n\t                            /* Note: IE8 rounds to the nearest pixel when returning CSS values, thus we perform conversions using a measurement\n\t                               of 100 (instead of 1) to give our ratios a precision of at least 2 decimal values. */\n\t                            var measurement = 100,\n\t                                unitRatios = {};\n\t\n\t                            if (!sameEmRatio || !samePercentRatio) {\n\t                                var dummy = Data(element).isSVG ? document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\") : document.createElement(\"div\");\n\t\n\t                                Velocity.init(dummy);\n\t                                sameRatioIndicators.myParent.appendChild(dummy);\n\t\n\t                                /* To accurately and consistently calculate conversion ratios, the element's cascaded overflow and box-sizing are stripped.\n\t                                   Similarly, since width/height can be artificially constrained by their min-/max- equivalents, these are controlled for as well. */\n\t                                /* Note: Overflow must be also be controlled for per-axis since the overflow property overwrites its per-axis values. */\n\t                                $.each([ \"overflow\", \"overflowX\", \"overflowY\" ], function(i, property) {\n\t                                    Velocity.CSS.setPropertyValue(dummy, property, \"hidden\");\n\t                                });\n\t                                Velocity.CSS.setPropertyValue(dummy, \"position\", sameRatioIndicators.position);\n\t                                Velocity.CSS.setPropertyValue(dummy, \"fontSize\", sameRatioIndicators.fontSize);\n\t                                Velocity.CSS.setPropertyValue(dummy, \"boxSizing\", \"content-box\");\n\t\n\t                                /* width and height act as our proxy properties for measuring the horizontal and vertical % ratios. */\n\t                                $.each([ \"minWidth\", \"maxWidth\", \"width\", \"minHeight\", \"maxHeight\", \"height\" ], function(i, property) {\n\t                                    Velocity.CSS.setPropertyValue(dummy, property, measurement + \"%\");\n\t                                });\n\t                                /* paddingLeft arbitrarily acts as our proxy property for the em ratio. */\n\t                                Velocity.CSS.setPropertyValue(dummy, \"paddingLeft\", measurement + \"em\");\n\t\n\t                                /* Divide the returned value by the measurement to get the ratio between 1% and 1px. Default to 1 since working with 0 can produce Infinite. */\n\t                                unitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth = (parseFloat(CSS.getPropertyValue(dummy, \"width\", null, true)) || 1) / measurement; /* GET */\n\t                                unitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight = (parseFloat(CSS.getPropertyValue(dummy, \"height\", null, true)) || 1) / measurement; /* GET */\n\t                                unitRatios.emToPx = callUnitConversionData.lastEmToPx = (parseFloat(CSS.getPropertyValue(dummy, \"paddingLeft\")) || 1) / measurement; /* GET */\n\t\n\t                                sameRatioIndicators.myParent.removeChild(dummy);\n\t                            } else {\n\t                                unitRatios.emToPx = callUnitConversionData.lastEmToPx;\n\t                                unitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth;\n\t                                unitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight;\n\t                            }\n\t\n\t                            /***************************\n\t                               Element-Agnostic Units\n\t                            ***************************/\n\t\n\t                            /* Whereas % and em ratios are determined on a per-element basis, the rem unit only needs to be checked\n\t                               once per call since it's exclusively dependant upon document.body's fontSize. If this is the first time\n\t                               that calculateUnitRatios() is being run during this call, remToPx will still be set to its default value of null,\n\t                               so we calculate it now. */\n\t                            if (callUnitConversionData.remToPx === null) {\n\t                                /* Default to browsers' default fontSize of 16px in the case of 0. */\n\t                                callUnitConversionData.remToPx = parseFloat(CSS.getPropertyValue(document.body, \"fontSize\")) || 16; /* GET */\n\t                            }\n\t\n\t                            /* Similarly, viewport units are %-relative to the window's inner dimensions. */\n\t                            if (callUnitConversionData.vwToPx === null) {\n\t                                callUnitConversionData.vwToPx = parseFloat(window.innerWidth) / 100; /* GET */\n\t                                callUnitConversionData.vhToPx = parseFloat(window.innerHeight) / 100; /* GET */\n\t                            }\n\t\n\t                            unitRatios.remToPx = callUnitConversionData.remToPx;\n\t                            unitRatios.vwToPx = callUnitConversionData.vwToPx;\n\t                            unitRatios.vhToPx = callUnitConversionData.vhToPx;\n\t\n\t                            if (Velocity.debug >= 1) console.log(\"Unit ratios: \" + JSON.stringify(unitRatios), element);\n\t\n\t                            return unitRatios;\n\t                        }\n\t\n\t                        /********************\n\t                           Unit Conversion\n\t                        ********************/\n\t\n\t                        /* The * and / operators, which are not passed in with an associated unit, inherently use startValue's unit. Skip value and unit conversion. */\n\t                        if (/[\\/*]/.test(operator)) {\n\t                            endValueUnitType = startValueUnitType;\n\t                        /* If startValue and endValue differ in unit type, convert startValue into the same unit type as endValue so that if endValueUnitType\n\t                           is a relative unit (%, em, rem), the values set during tweening will continue to be accurately relative even if the metrics they depend\n\t                           on are dynamically changing during the course of the animation. Conversely, if we always normalized into px and used px for setting values, the px ratio\n\t                           would become stale if the original unit being animated toward was relative and the underlying metrics change during the animation. */\n\t                        /* Since 0 is 0 in any unit type, no conversion is necessary when startValue is 0 -- we just start at 0 with endValueUnitType. */\n\t                        } else if ((startValueUnitType !== endValueUnitType) && startValue !== 0) {\n\t                            /* Unit conversion is also skipped when endValue is 0, but *startValueUnitType* must be used for tween values to remain accurate. */\n\t                            /* Note: Skipping unit conversion here means that if endValueUnitType was originally a relative unit, the animation won't relatively\n\t                               match the underlying metrics if they change, but this is acceptable since we're animating toward invisibility instead of toward visibility,\n\t                               which remains past the point of the animation's completion. */\n\t                            if (endValue === 0) {\n\t                                endValueUnitType = startValueUnitType;\n\t                            } else {\n\t                                /* By this point, we cannot avoid unit conversion (it's undesirable since it causes layout thrashing).\n\t                                   If we haven't already, we trigger calculateUnitRatios(), which runs once per element per call. */\n\t                                elementUnitConversionData = elementUnitConversionData || calculateUnitRatios();\n\t\n\t                                /* The following RegEx matches CSS properties that have their % values measured relative to the x-axis. */\n\t                                /* Note: W3C spec mandates that all of margin and padding's properties (even top and bottom) are %-relative to the *width* of the parent element. */\n\t                                var axis = (/margin|padding|left|right|width|text|word|letter/i.test(property) || /X$/.test(property) || property === \"x\") ? \"x\" : \"y\";\n\t\n\t                                /* In order to avoid generating n^2 bespoke conversion functions, unit conversion is a two-step process:\n\t                                   1) Convert startValue into pixels. 2) Convert this new pixel value into endValue's unit type. */\n\t                                switch (startValueUnitType) {\n\t                                    case \"%\":\n\t                                        /* Note: translateX and translateY are the only properties that are %-relative to an element's own dimensions -- not its parent's dimensions.\n\t                                           Velocity does not include a special conversion process to account for this behavior. Therefore, animating translateX/Y from a % value\n\t                                           to a non-% value will produce an incorrect start value. Fortunately, this sort of cross-unit conversion is rarely done by users in practice. */\n\t                                        startValue *= (axis === \"x\" ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight);\n\t                                        break;\n\t\n\t                                    case \"px\":\n\t                                        /* px acts as our midpoint in the unit conversion process; do nothing. */\n\t                                        break;\n\t\n\t                                    default:\n\t                                        startValue *= elementUnitConversionData[startValueUnitType + \"ToPx\"];\n\t                                }\n\t\n\t                                /* Invert the px ratios to convert into to the target unit. */\n\t                                switch (endValueUnitType) {\n\t                                    case \"%\":\n\t                                        startValue *= 1 / (axis === \"x\" ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight);\n\t                                        break;\n\t\n\t                                    case \"px\":\n\t                                        /* startValue is already in px, do nothing; we're done. */\n\t                                        break;\n\t\n\t                                    default:\n\t                                        startValue *= 1 / elementUnitConversionData[endValueUnitType + \"ToPx\"];\n\t                                }\n\t                            }\n\t                        }\n\t\n\t                        /*********************\n\t                           Relative Values\n\t                        *********************/\n\t\n\t                        /* Operator logic must be performed last since it requires unit-normalized start and end values. */\n\t                        /* Note: Relative *percent values* do not behave how most people think; while one would expect \"+=50%\"\n\t                           to increase the property 1.5x its current value, it in fact increases the percent units in absolute terms:\n\t                           50 points is added on top of the current % value. */\n\t                        switch (operator) {\n\t                            case \"+\":\n\t                                endValue = startValue + endValue;\n\t                                break;\n\t\n\t                            case \"-\":\n\t                                endValue = startValue - endValue;\n\t                                break;\n\t\n\t                            case \"*\":\n\t                                endValue = startValue * endValue;\n\t                                break;\n\t\n\t                            case \"/\":\n\t                                endValue = startValue / endValue;\n\t                                break;\n\t                        }\n\t\n\t                        /**************************\n\t                           tweensContainer Push\n\t                        **************************/\n\t\n\t                        /* Construct the per-property tween object, and push it to the element's tweensContainer. */\n\t                        tweensContainer[property] = {\n\t                            rootPropertyValue: rootPropertyValue,\n\t                            startValue: startValue,\n\t                            currentValue: startValue,\n\t                            endValue: endValue,\n\t                            unitType: endValueUnitType,\n\t                            easing: easing\n\t                        };\n\t\n\t                        if (Velocity.debug) console.log(\"tweensContainer (\" + property + \"): \" + JSON.stringify(tweensContainer[property]), element);\n\t                    }\n\t\n\t                    /* Along with its property data, store a reference to the element itself onto tweensContainer. */\n\t                    tweensContainer.element = element;\n\t                }\n\t\n\t                /*****************\n\t                    Call Push\n\t                *****************/\n\t\n\t                /* Note: tweensContainer can be empty if all of the properties in this call's property map were skipped due to not\n\t                   being supported by the browser. The element property is used for checking that the tweensContainer has been appended to. */\n\t                if (tweensContainer.element) {\n\t                    /* Apply the \"velocity-animating\" indicator class. */\n\t                    CSS.Values.addClass(element, \"velocity-animating\");\n\t\n\t                    /* The call array houses the tweensContainers for each element being animated in the current call. */\n\t                    call.push(tweensContainer);\n\t\n\t                    /* Store the tweensContainer and options if we're working on the default effects queue, so that they can be used by the reverse command. */\n\t                    if (opts.queue === \"\") {\n\t                        Data(element).tweensContainer = tweensContainer;\n\t                        Data(element).opts = opts;\n\t                    }\n\t\n\t                    /* Switch on the element's animating flag. */\n\t                    Data(element).isAnimating = true;\n\t\n\t                    /* Once the final element in this call's element set has been processed, push the call array onto\n\t                       Velocity.State.calls for the animation tick to immediately begin processing. */\n\t                    if (elementsIndex === elementsLength - 1) {\n\t                        /* Add the current call plus its associated metadata (the element set and the call's options) onto the global call container.\n\t                           Anything on this call container is subjected to tick() processing. */\n\t                        Velocity.State.calls.push([ call, elements, opts, null, promiseData.resolver ]);\n\t\n\t                        /* If the animation tick isn't running, start it. (Velocity shuts it off when there are no active calls to process.) */\n\t                        if (Velocity.State.isTicking === false) {\n\t                            Velocity.State.isTicking = true;\n\t\n\t                            /* Start the tick loop. */\n\t                            tick();\n\t                        }\n\t                    } else {\n\t                        elementsIndex++;\n\t                    }\n\t                }\n\t            }\n\t\n\t            /* When the queue option is set to false, the call skips the element's queue and fires immediately. */\n\t            if (opts.queue === false) {\n\t                /* Since this buildQueue call doesn't respect the element's existing queue (which is where a delay option would have been appended),\n\t                   we manually inject the delay property here with an explicit setTimeout. */\n\t                if (opts.delay) {\n\t                    setTimeout(buildQueue, opts.delay);\n\t                } else {\n\t                    buildQueue();\n\t                }\n\t            /* Otherwise, the call undergoes element queueing as normal. */\n\t            /* Note: To interoperate with jQuery, Velocity uses jQuery's own $.queue() stack for queuing logic. */\n\t            } else {\n\t                $.queue(element, opts.queue, function(next, clearQueue) {\n\t                    /* If the clearQueue flag was passed in by the stop command, resolve this call's promise. (Promises can only be resolved once,\n\t                       so it's fine if this is repeatedly triggered for each element in the associated call.) */\n\t                    if (clearQueue === true) {\n\t                        if (promiseData.promise) {\n\t                            promiseData.resolver(elements);\n\t                        }\n\t\n\t                        /* Do not continue with animation queueing. */\n\t                        return true;\n\t                    }\n\t\n\t                    /* This flag indicates to the upcoming completeCall() function that this queue entry was initiated by Velocity.\n\t                       See completeCall() for further details. */\n\t                    Velocity.velocityQueueEntryFlag = true;\n\t\n\t                    buildQueue(next);\n\t                });\n\t            }\n\t\n\t            /*********************\n\t                Auto-Dequeuing\n\t            *********************/\n\t\n\t            /* As per jQuery's $.queue() behavior, to fire the first non-custom-queue entry on an element, the element\n\t               must be dequeued if its queue stack consists *solely* of the current call. (This can be determined by checking\n\t               for the \"inprogress\" item that jQuery prepends to active queue stack arrays.) Regardless, whenever the element's\n\t               queue is further appended with additional items -- including $.delay()'s or even $.animate() calls, the queue's\n\t               first entry is automatically fired. This behavior contrasts that of custom queues, which never auto-fire. */\n\t            /* Note: When an element set is being subjected to a non-parallel Velocity call, the animation will not begin until\n\t               each one of the elements in the set has reached the end of its individually pre-existing queue chain. */\n\t            /* Note: Unfortunately, most people don't fully grasp jQuery's powerful, yet quirky, $.queue() function.\n\t               Lean more here: http://stackoverflow.com/questions/1058158/can-somebody-explain-jquery-queue-to-me */\n\t            if ((opts.queue === \"\" || opts.queue === \"fx\") && $.queue(element)[0] !== \"inprogress\") {\n\t                $.dequeue(element);\n\t            }\n\t        }\n\t\n\t        /**************************\n\t           Element Set Iteration\n\t        **************************/\n\t\n\t        /* If the \"nodeType\" property exists on the elements variable, we're animating a single element.\n\t           Place it in an array so that $.each() can iterate over it. */\n\t        $.each(elements, function(i, element) {\n\t            /* Ensure each element in a set has a nodeType (is a real element) to avoid throwing errors. */\n\t            if (Type.isNode(element)) {\n\t                processElement.call(element);\n\t            }\n\t        });\n\t\n\t        /******************\n\t           Option: Loop\n\t        ******************/\n\t\n\t        /* The loop option accepts an integer indicating how many times the element should loop between the values in the\n\t           current call's properties map and the element's property values prior to this call. */\n\t        /* Note: The loop option's logic is performed here -- after element processing -- because the current call needs\n\t           to undergo its queue insertion prior to the loop option generating its series of constituent \"reverse\" calls,\n\t           which chain after the current call. Two reverse calls (two \"alternations\") constitute one loop. */\n\t        var opts = $.extend({}, Velocity.defaults, options),\n\t            reverseCallsCount;\n\t\n\t        opts.loop = parseInt(opts.loop);\n\t        reverseCallsCount = (opts.loop * 2) - 1;\n\t\n\t        if (opts.loop) {\n\t            /* Double the loop count to convert it into its appropriate number of \"reverse\" calls.\n\t               Subtract 1 from the resulting value since the current call is included in the total alternation count. */\n\t            for (var x = 0; x < reverseCallsCount; x++) {\n\t                /* Since the logic for the reverse action occurs inside Queueing and therefore this call's options object\n\t                   isn't parsed until then as well, the current call's delay option must be explicitly passed into the reverse\n\t                   call so that the delay logic that occurs inside *Pre-Queueing* can process it. */\n\t                var reverseOptions = {\n\t                    delay: opts.delay,\n\t                    progress: opts.progress\n\t                };\n\t\n\t                /* If a complete callback was passed into this call, transfer it to the loop redirect's final \"reverse\" call\n\t                   so that it's triggered when the entire redirect is complete (and not when the very first animation is complete). */\n\t                if (x === reverseCallsCount - 1) {\n\t                    reverseOptions.display = opts.display;\n\t                    reverseOptions.visibility = opts.visibility;\n\t                    reverseOptions.complete = opts.complete;\n\t                }\n\t\n\t                animate(elements, \"reverse\", reverseOptions);\n\t            }\n\t        }\n\t\n\t        /***************\n\t            Chaining\n\t        ***************/\n\t\n\t        /* Return the elements back to the call chain, with wrapped elements taking precedence in case Velocity was called via the $.fn. extension. */\n\t        return getChain();\n\t    };\n\t\n\t    /* Turn Velocity into the animation function, extended with the pre-existing Velocity object. */\n\t    Velocity = $.extend(animate, Velocity);\n\t    /* For legacy support, also expose the literal animate method. */\n\t    Velocity.animate = animate;\n\t\n\t    /**************\n\t        Timing\n\t    **************/\n\t\n\t    /* Ticker function. */\n\t    var ticker = window.requestAnimationFrame || rAFShim;\n\t\n\t    /* Inactive browser tabs pause rAF, which results in all active animations immediately sprinting to their completion states when the tab refocuses.\n\t       To get around this, we dynamically switch rAF to setTimeout (which the browser *doesn't* pause) when the tab loses focus. We skip this for mobile\n\t       devices to avoid wasting battery power on inactive tabs. */\n\t    /* Note: Tab focus detection doesn't work on older versions of IE, but that's okay since they don't support rAF to begin with. */\n\t    if (!Velocity.State.isMobile && document.hidden !== undefined) {\n\t        document.addEventListener(\"visibilitychange\", function() {\n\t            /* Reassign the rAF function (which the global tick() function uses) based on the tab's focus state. */\n\t            if (document.hidden) {\n\t                ticker = function(callback) {\n\t                    /* The tick function needs a truthy first argument in order to pass its internal timestamp check. */\n\t                    return setTimeout(function() { callback(true) }, 16);\n\t                };\n\t\n\t                /* The rAF loop has been paused by the browser, so we manually restart the tick. */\n\t                tick();\n\t            } else {\n\t                ticker = window.requestAnimationFrame || rAFShim;\n\t            }\n\t        });\n\t    }\n\t\n\t    /************\n\t        Tick\n\t    ************/\n\t\n\t    /* Note: All calls to Velocity are pushed to the Velocity.State.calls array, which is fully iterated through upon each tick. */\n\t    function tick (timestamp) {\n\t        /* An empty timestamp argument indicates that this is the first tick occurence since ticking was turned on.\n\t           We leverage this metadata to fully ignore the first tick pass since RAF's initial pass is fired whenever\n\t           the browser's next tick sync time occurs, which results in the first elements subjected to Velocity\n\t           calls being animated out of sync with any elements animated immediately thereafter. In short, we ignore\n\t           the first RAF tick pass so that elements being immediately consecutively animated -- instead of simultaneously animated\n\t           by the same Velocity call -- are properly batched into the same initial RAF tick and consequently remain in sync thereafter. */\n\t        if (timestamp) {\n\t            /* We ignore RAF's high resolution timestamp since it can be significantly offset when the browser is\n\t               under high stress; we opt for choppiness over allowing the browser to drop huge chunks of frames. */\n\t            var timeCurrent = (new Date).getTime();\n\t\n\t            /********************\n\t               Call Iteration\n\t            ********************/\n\t\n\t            var callsLength = Velocity.State.calls.length;\n\t\n\t            /* To speed up iterating over this array, it is compacted (falsey items -- calls that have completed -- are removed)\n\t               when its length has ballooned to a point that can impact tick performance. This only becomes necessary when animation\n\t               has been continuous with many elements over a long period of time; whenever all active calls are completed, completeCall() clears Velocity.State.calls. */\n\t            if (callsLength > 10000) {\n\t                Velocity.State.calls = compactSparseArray(Velocity.State.calls);\n\t            }\n\t\n\t            /* Iterate through each active call. */\n\t            for (var i = 0; i < callsLength; i++) {\n\t                /* When a Velocity call is completed, its Velocity.State.calls entry is set to false. Continue on to the next call. */\n\t                if (!Velocity.State.calls[i]) {\n\t                    continue;\n\t                }\n\t\n\t                /************************\n\t                   Call-Wide Variables\n\t                ************************/\n\t\n\t                var callContainer = Velocity.State.calls[i],\n\t                    call = callContainer[0],\n\t                    opts = callContainer[2],\n\t                    timeStart = callContainer[3],\n\t                    firstTick = !!timeStart,\n\t                    tweenDummyValue = null;\n\t\n\t                /* If timeStart is undefined, then this is the first time that this call has been processed by tick().\n\t                   We assign timeStart now so that its value is as close to the real animation start time as possible.\n\t                   (Conversely, had timeStart been defined when this call was added to Velocity.State.calls, the delay\n\t                   between that time and now would cause the first few frames of the tween to be skipped since\n\t                   percentComplete is calculated relative to timeStart.) */\n\t                /* Further, subtract 16ms (the approximate resolution of RAF) from the current time value so that the\n\t                   first tick iteration isn't wasted by animating at 0% tween completion, which would produce the\n\t                   same style value as the element's current value. */\n\t                if (!timeStart) {\n\t                    timeStart = Velocity.State.calls[i][3] = timeCurrent - 16;\n\t                }\n\t\n\t                /* The tween's completion percentage is relative to the tween's start time, not the tween's start value\n\t                   (which would result in unpredictable tween durations since JavaScript's timers are not particularly accurate).\n\t                   Accordingly, we ensure that percentComplete does not exceed 1. */\n\t                var percentComplete = Math.min((timeCurrent - timeStart) / opts.duration, 1);\n\t\n\t                /**********************\n\t                   Element Iteration\n\t                **********************/\n\t\n\t                /* For every call, iterate through each of the elements in its set. */\n\t                for (var j = 0, callLength = call.length; j < callLength; j++) {\n\t                    var tweensContainer = call[j],\n\t                        element = tweensContainer.element;\n\t\n\t                    /* Check to see if this element has been deleted midway through the animation by checking for the\n\t                       continued existence of its data cache. If it's gone, skip animating this element. */\n\t                    if (!Data(element)) {\n\t                        continue;\n\t                    }\n\t\n\t                    var transformPropertyExists = false;\n\t\n\t                    /**********************************\n\t                       Display & Visibility Toggling\n\t                    **********************************/\n\t\n\t                    /* If the display option is set to non-\"none\", set it upfront so that the element can become visible before tweening begins.\n\t                       (Otherwise, display's \"none\" value is set in completeCall() once the animation has completed.) */\n\t                    if (opts.display !== undefined && opts.display !== null && opts.display !== \"none\") {\n\t                        if (opts.display === \"flex\") {\n\t                            var flexValues = [ \"-webkit-box\", \"-moz-box\", \"-ms-flexbox\", \"-webkit-flex\" ];\n\t\n\t                            $.each(flexValues, function(i, flexValue) {\n\t                                CSS.setPropertyValue(element, \"display\", flexValue);\n\t                            });\n\t                        }\n\t\n\t                        CSS.setPropertyValue(element, \"display\", opts.display);\n\t                    }\n\t\n\t                    /* Same goes with the visibility option, but its \"none\" equivalent is \"hidden\". */\n\t                    if (opts.visibility !== undefined && opts.visibility !== \"hidden\") {\n\t                        CSS.setPropertyValue(element, \"visibility\", opts.visibility);\n\t                    }\n\t\n\t                    /************************\n\t                       Property Iteration\n\t                    ************************/\n\t\n\t                    /* For every element, iterate through each property. */\n\t                    for (var property in tweensContainer) {\n\t                        /* Note: In addition to property tween data, tweensContainer contains a reference to its associated element. */\n\t                        if (property !== \"element\") {\n\t                            var tween = tweensContainer[property],\n\t                                currentValue,\n\t                                /* Easing can either be a pre-genereated function or a string that references a pre-registered easing\n\t                                   on the Velocity.Easings object. In either case, return the appropriate easing *function*. */\n\t                                easing = Type.isString(tween.easing) ? Velocity.Easings[tween.easing] : tween.easing;\n\t\n\t                            /******************************\n\t                               Current Value Calculation\n\t                            ******************************/\n\t\n\t                            /* If this is the last tick pass (if we've reached 100% completion for this tween),\n\t                               ensure that currentValue is explicitly set to its target endValue so that it's not subjected to any rounding. */\n\t                            if (percentComplete === 1) {\n\t                                currentValue = tween.endValue;\n\t                            /* Otherwise, calculate currentValue based on the current delta from startValue. */\n\t                            } else {\n\t                                var tweenDelta = tween.endValue - tween.startValue;\n\t                                currentValue = tween.startValue + (tweenDelta * easing(percentComplete, opts, tweenDelta));\n\t\n\t                                /* If no value change is occurring, don't proceed with DOM updating. */\n\t                                if (!firstTick && (currentValue === tween.currentValue)) {\n\t                                    continue;\n\t                                }\n\t                            }\n\t\n\t                            tween.currentValue = currentValue;\n\t\n\t                            /* If we're tweening a fake 'tween' property in order to log transition values, update the one-per-call variable so that\n\t                               it can be passed into the progress callback. */\n\t                            if (property === \"tween\") {\n\t                                tweenDummyValue = currentValue;\n\t                            } else {\n\t                                /******************\n\t                                   Hooks: Part I\n\t                                ******************/\n\t\n\t                                /* For hooked properties, the newly-updated rootPropertyValueCache is cached onto the element so that it can be used\n\t                                   for subsequent hooks in this call that are associated with the same root property. If we didn't cache the updated\n\t                                   rootPropertyValue, each subsequent update to the root property in this tick pass would reset the previous hook's\n\t                                   updates to rootPropertyValue prior to injection. A nice performance byproduct of rootPropertyValue caching is that\n\t                                   subsequently chained animations using the same hookRoot but a different hook can use this cached rootPropertyValue. */\n\t                                if (CSS.Hooks.registered[property]) {\n\t                                    var hookRoot = CSS.Hooks.getRoot(property),\n\t                                        rootPropertyValueCache = Data(element).rootPropertyValueCache[hookRoot];\n\t\n\t                                    if (rootPropertyValueCache) {\n\t                                        tween.rootPropertyValue = rootPropertyValueCache;\n\t                                    }\n\t                                }\n\t\n\t                                /*****************\n\t                                    DOM Update\n\t                                *****************/\n\t\n\t                                /* setPropertyValue() returns an array of the property name and property value post any normalization that may have been performed. */\n\t                                /* Note: To solve an IE<=8 positioning bug, the unit type is dropped when setting a property value of 0. */\n\t                                var adjustedSetData = CSS.setPropertyValue(element, /* SET */\n\t                                                                           property,\n\t                                                                           tween.currentValue + (parseFloat(currentValue) === 0 ? \"\" : tween.unitType),\n\t                                                                           tween.rootPropertyValue,\n\t                                                                           tween.scrollData);\n\t\n\t                                /*******************\n\t                                   Hooks: Part II\n\t                                *******************/\n\t\n\t                                /* Now that we have the hook's updated rootPropertyValue (the post-processed value provided by adjustedSetData), cache it onto the element. */\n\t                                if (CSS.Hooks.registered[property]) {\n\t                                    /* Since adjustedSetData contains normalized data ready for DOM updating, the rootPropertyValue needs to be re-extracted from its normalized form. ?? */\n\t                                    if (CSS.Normalizations.registered[hookRoot]) {\n\t                                        Data(element).rootPropertyValueCache[hookRoot] = CSS.Normalizations.registered[hookRoot](\"extract\", null, adjustedSetData[1]);\n\t                                    } else {\n\t                                        Data(element).rootPropertyValueCache[hookRoot] = adjustedSetData[1];\n\t                                    }\n\t                                }\n\t\n\t                                /***************\n\t                                   Transforms\n\t                                ***************/\n\t\n\t                                /* Flag whether a transform property is being animated so that flushTransformCache() can be triggered once this tick pass is complete. */\n\t                                if (adjustedSetData[0] === \"transform\") {\n\t                                    transformPropertyExists = true;\n\t                                }\n\t\n\t                            }\n\t                        }\n\t                    }\n\t\n\t                    /****************\n\t                        mobileHA\n\t                    ****************/\n\t\n\t                    /* If mobileHA is enabled, set the translate3d transform to null to force hardware acceleration.\n\t                       It's safe to override this property since Velocity doesn't actually support its animation (hooks are used in its place). */\n\t                    if (opts.mobileHA) {\n\t                        /* Don't set the null transform hack if we've already done so. */\n\t                        if (Data(element).transformCache.translate3d === undefined) {\n\t                            /* All entries on the transformCache object are later concatenated into a single transform string via flushTransformCache(). */\n\t                            Data(element).transformCache.translate3d = \"(0px, 0px, 0px)\";\n\t\n\t                            transformPropertyExists = true;\n\t                        }\n\t                    }\n\t\n\t                    if (transformPropertyExists) {\n\t                        CSS.flushTransformCache(element);\n\t                    }\n\t                }\n\t\n\t                /* The non-\"none\" display value is only applied to an element once -- when its associated call is first ticked through.\n\t                   Accordingly, it's set to false so that it isn't re-processed by this call in the next tick. */\n\t                if (opts.display !== undefined && opts.display !== \"none\") {\n\t                    Velocity.State.calls[i][2].display = false;\n\t                }\n\t                if (opts.visibility !== undefined && opts.visibility !== \"hidden\") {\n\t                    Velocity.State.calls[i][2].visibility = false;\n\t                }\n\t\n\t                /* Pass the elements and the timing data (percentComplete, msRemaining, timeStart, tweenDummyValue) into the progress callback. */\n\t                if (opts.progress) {\n\t                    opts.progress.call(callContainer[1],\n\t                                       callContainer[1],\n\t                                       percentComplete,\n\t                                       Math.max(0, (timeStart + opts.duration) - timeCurrent),\n\t                                       timeStart,\n\t                                       tweenDummyValue);\n\t                }\n\t\n\t                /* If this call has finished tweening, pass its index to completeCall() to handle call cleanup. */\n\t                if (percentComplete === 1) {\n\t                    completeCall(i);\n\t                }\n\t            }\n\t        }\n\t\n\t        /* Note: completeCall() sets the isTicking flag to false when the last call on Velocity.State.calls has completed. */\n\t        if (Velocity.State.isTicking) {\n\t            ticker(tick);\n\t        }\n\t    }\n\t\n\t    /**********************\n\t        Call Completion\n\t    **********************/\n\t\n\t    /* Note: Unlike tick(), which processes all active calls at once, call completion is handled on a per-call basis. */\n\t    function completeCall (callIndex, isStopped) {\n\t        /* Ensure the call exists. */\n\t        if (!Velocity.State.calls[callIndex]) {\n\t            return false;\n\t        }\n\t\n\t        /* Pull the metadata from the call. */\n\t        var call = Velocity.State.calls[callIndex][0],\n\t            elements = Velocity.State.calls[callIndex][1],\n\t            opts = Velocity.State.calls[callIndex][2],\n\t            resolver = Velocity.State.calls[callIndex][4];\n\t\n\t        var remainingCallsExist = false;\n\t\n\t        /*************************\n\t           Element Finalization\n\t        *************************/\n\t\n\t        for (var i = 0, callLength = call.length; i < callLength; i++) {\n\t            var element = call[i].element;\n\t\n\t            /* If the user set display to \"none\" (intending to hide the element), set it now that the animation has completed. */\n\t            /* Note: display:none isn't set when calls are manually stopped (via Velocity(\"stop\"). */\n\t            /* Note: Display gets ignored with \"reverse\" calls and infinite loops, since this behavior would be undesirable. */\n\t            if (!isStopped && !opts.loop) {\n\t                if (opts.display === \"none\") {\n\t                    CSS.setPropertyValue(element, \"display\", opts.display);\n\t                }\n\t\n\t                if (opts.visibility === \"hidden\") {\n\t                    CSS.setPropertyValue(element, \"visibility\", opts.visibility);\n\t                }\n\t            }\n\t\n\t            /* If the element's queue is empty (if only the \"inprogress\" item is left at position 0) or if its queue is about to run\n\t               a non-Velocity-initiated entry, turn off the isAnimating flag. A non-Velocity-initiatied queue entry's logic might alter\n\t               an element's CSS values and thereby cause Velocity's cached value data to go stale. To detect if a queue entry was initiated by Velocity,\n\t               we check for the existence of our special Velocity.queueEntryFlag declaration, which minifiers won't rename since the flag\n\t               is assigned to jQuery's global $ object and thus exists out of Velocity's own scope. */\n\t            if (opts.loop !== true && ($.queue(element)[1] === undefined || !/\\.velocityQueueEntryFlag/i.test($.queue(element)[1]))) {\n\t                /* The element may have been deleted. Ensure that its data cache still exists before acting on it. */\n\t                if (Data(element)) {\n\t                    Data(element).isAnimating = false;\n\t                    /* Clear the element's rootPropertyValueCache, which will become stale. */\n\t                    Data(element).rootPropertyValueCache = {};\n\t\n\t                    var transformHAPropertyExists = false;\n\t                    /* If any 3D transform subproperty is at its default value (regardless of unit type), remove it. */\n\t                    $.each(CSS.Lists.transforms3D, function(i, transformName) {\n\t                        var defaultValue = /^scale/.test(transformName) ? 1 : 0,\n\t                            currentValue = Data(element).transformCache[transformName];\n\t\n\t                        if (Data(element).transformCache[transformName] !== undefined && new RegExp(\"^\\\\(\" + defaultValue + \"[^.]\").test(currentValue)) {\n\t                            transformHAPropertyExists = true;\n\t\n\t                            delete Data(element).transformCache[transformName];\n\t                        }\n\t                    });\n\t\n\t                    /* Mobile devices have hardware acceleration removed at the end of the animation in order to avoid hogging the GPU's memory. */\n\t                    if (opts.mobileHA) {\n\t                        transformHAPropertyExists = true;\n\t                        delete Data(element).transformCache.translate3d;\n\t                    }\n\t\n\t                    /* Flush the subproperty removals to the DOM. */\n\t                    if (transformHAPropertyExists) {\n\t                        CSS.flushTransformCache(element);\n\t                    }\n\t\n\t                    /* Remove the \"velocity-animating\" indicator class. */\n\t                    CSS.Values.removeClass(element, \"velocity-animating\");\n\t                }\n\t            }\n\t\n\t            /*********************\n\t               Option: Complete\n\t            *********************/\n\t\n\t            /* Complete is fired once per call (not once per element) and is passed the full raw DOM element set as both its context and its first argument. */\n\t            /* Note: Callbacks aren't fired when calls are manually stopped (via Velocity(\"stop\"). */\n\t            if (!isStopped && opts.complete && !opts.loop && (i === callLength - 1)) {\n\t                /* We throw callbacks in a setTimeout so that thrown errors don't halt the execution of Velocity itself. */\n\t                try {\n\t                    opts.complete.call(elements, elements);\n\t                } catch (error) {\n\t                    setTimeout(function() { throw error; }, 1);\n\t                }\n\t            }\n\t\n\t            /**********************\n\t               Promise Resolving\n\t            **********************/\n\t\n\t            /* Note: Infinite loops don't return promises. */\n\t            if (resolver && opts.loop !== true) {\n\t                resolver(elements);\n\t            }\n\t\n\t            /****************************\n\t               Option: Loop (Infinite)\n\t            ****************************/\n\t\n\t            if (Data(element) && opts.loop === true && !isStopped) {\n\t                /* If a rotateX/Y/Z property is being animated to 360 deg with loop:true, swap tween start/end values to enable\n\t                   continuous iterative rotation looping. (Otherise, the element would just rotate back and forth.) */\n\t                $.each(Data(element).tweensContainer, function(propertyName, tweenContainer) {\n\t                    if (/^rotate/.test(propertyName) && parseFloat(tweenContainer.endValue) === 360) {\n\t                        tweenContainer.endValue = 0;\n\t                        tweenContainer.startValue = 360;\n\t                    }\n\t\n\t                    if (/^backgroundPosition/.test(propertyName) && parseFloat(tweenContainer.endValue) === 100 && tweenContainer.unitType === \"%\") {\n\t                        tweenContainer.endValue = 0;\n\t                        tweenContainer.startValue = 100;\n\t                    }\n\t                });\n\t\n\t                Velocity(element, \"reverse\", { loop: true, delay: opts.delay });\n\t            }\n\t\n\t            /***************\n\t               Dequeueing\n\t            ***************/\n\t\n\t            /* Fire the next call in the queue so long as this call's queue wasn't set to false (to trigger a parallel animation),\n\t               which would have already caused the next call to fire. Note: Even if the end of the animation queue has been reached,\n\t               $.dequeue() must still be called in order to completely clear jQuery's animation queue. */\n\t            if (opts.queue !== false) {\n\t                $.dequeue(element, opts.queue);\n\t            }\n\t        }\n\t\n\t        /************************\n\t           Calls Array Cleanup\n\t        ************************/\n\t\n\t        /* Since this call is complete, set it to false so that the rAF tick skips it. This array is later compacted via compactSparseArray().\n\t          (For performance reasons, the call is set to false instead of being deleted from the array: http://www.html5rocks.com/en/tutorials/speed/v8/) */\n\t        Velocity.State.calls[callIndex] = false;\n\t\n\t        /* Iterate through the calls array to determine if this was the final in-progress animation.\n\t           If so, set a flag to end ticking and clear the calls array. */\n\t        for (var j = 0, callsLength = Velocity.State.calls.length; j < callsLength; j++) {\n\t            if (Velocity.State.calls[j] !== false) {\n\t                remainingCallsExist = true;\n\t\n\t                break;\n\t            }\n\t        }\n\t\n\t        if (remainingCallsExist === false) {\n\t            /* tick() will detect this flag upon its next iteration and subsequently turn itself off. */\n\t            Velocity.State.isTicking = false;\n\t\n\t            /* Clear the calls array so that its length is reset. */\n\t            delete Velocity.State.calls;\n\t            Velocity.State.calls = [];\n\t        }\n\t    }\n\t\n\t    /******************\n\t        Frameworks\n\t    ******************/\n\t\n\t    /* Both jQuery and Zepto allow their $.fn object to be extended to allow wrapped elements to be subjected to plugin calls.\n\t       If either framework is loaded, register a \"velocity\" extension pointing to Velocity's core animate() method.  Velocity\n\t       also registers itself onto a global container (window.jQuery || window.Zepto || window) so that certain features are\n\t       accessible beyond just a per-element scope. This master object contains an .animate() method, which is later assigned to $.fn\n\t       (if jQuery or Zepto are present). Accordingly, Velocity can both act on wrapped DOM elements and stand alone for targeting raw DOM elements. */\n\t    global.Velocity = Velocity;\n\t\n\t    if (global !== window) {\n\t        /* Assign the element function to Velocity's core animate() method. */\n\t        global.fn.velocity = animate;\n\t        /* Assign the object function's defaults to Velocity's global defaults object. */\n\t        global.fn.velocity.defaults = Velocity.defaults;\n\t    }\n\t\n\t    /***********************\n\t       Packaged Redirects\n\t    ***********************/\n\t\n\t    /* slideUp, slideDown */\n\t    $.each([ \"Down\", \"Up\" ], function(i, direction) {\n\t        Velocity.Redirects[\"slide\" + direction] = function (element, options, elementsIndex, elementsSize, elements, promiseData) {\n\t            var opts = $.extend({}, options),\n\t                begin = opts.begin,\n\t                complete = opts.complete,\n\t                computedValues = { height: \"\", marginTop: \"\", marginBottom: \"\", paddingTop: \"\", paddingBottom: \"\" },\n\t                inlineValues = {};\n\t\n\t            if (opts.display === undefined) {\n\t                /* Show the element before slideDown begins and hide the element after slideUp completes. */\n\t                /* Note: Inline elements cannot have dimensions animated, so they're reverted to inline-block. */\n\t                opts.display = (direction === \"Down\" ? (Velocity.CSS.Values.getDisplayType(element) === \"inline\" ? \"inline-block\" : \"block\") : \"none\");\n\t            }\n\t\n\t            opts.begin = function() {\n\t                /* If the user passed in a begin callback, fire it now. */\n\t                begin && begin.call(elements, elements);\n\t\n\t                /* Cache the elements' original vertical dimensional property values so that we can animate back to them. */\n\t                for (var property in computedValues) {\n\t                    inlineValues[property] = element.style[property];\n\t\n\t                    /* For slideDown, use forcefeeding to animate all vertical properties from 0. For slideUp,\n\t                       use forcefeeding to start from computed values and animate down to 0. */\n\t                    var propertyValue = Velocity.CSS.getPropertyValue(element, property);\n\t                    computedValues[property] = (direction === \"Down\") ? [ propertyValue, 0 ] : [ 0, propertyValue ];\n\t                }\n\t\n\t                /* Force vertical overflow content to clip so that sliding works as expected. */\n\t                inlineValues.overflow = element.style.overflow;\n\t                element.style.overflow = \"hidden\";\n\t            }\n\t\n\t            opts.complete = function() {\n\t                /* Reset element to its pre-slide inline values once its slide animation is complete. */\n\t                for (var property in inlineValues) {\n\t                    element.style[property] = inlineValues[property];\n\t                }\n\t\n\t                /* If the user passed in a complete callback, fire it now. */\n\t                complete && complete.call(elements, elements);\n\t                promiseData && promiseData.resolver(elements);\n\t            };\n\t\n\t            Velocity(element, computedValues, opts);\n\t        };\n\t    });\n\t\n\t    /* fadeIn, fadeOut */\n\t    $.each([ \"In\", \"Out\" ], function(i, direction) {\n\t        Velocity.Redirects[\"fade\" + direction] = function (element, options, elementsIndex, elementsSize, elements, promiseData) {\n\t            var opts = $.extend({}, options),\n\t                propertiesMap = { opacity: (direction === \"In\") ? 1 : 0 },\n\t                originalComplete = opts.complete;\n\t\n\t            /* Since redirects are triggered individually for each element in the animated set, avoid repeatedly triggering\n\t               callbacks by firing them only when the final element has been reached. */\n\t            if (elementsIndex !== elementsSize - 1) {\n\t                opts.complete = opts.begin = null;\n\t            } else {\n\t                opts.complete = function() {\n\t                    if (originalComplete) {\n\t                        originalComplete.call(elements, elements);\n\t                    }\n\t\n\t                    promiseData && promiseData.resolver(elements);\n\t                }\n\t            }\n\t\n\t            /* If a display was passed in, use it. Otherwise, default to \"none\" for fadeOut or the element-specific default for fadeIn. */\n\t            /* Note: We allow users to pass in \"null\" to skip display setting altogether. */\n\t            if (opts.display === undefined) {\n\t                opts.display = (direction === \"In\" ? \"auto\" : \"none\");\n\t            }\n\t\n\t            Velocity(this, propertiesMap, opts);\n\t        };\n\t    });\n\t\n\t    return Velocity;\n\t}((window.jQuery || window.Zepto || window), window, document);\n\t}));\n\t\n\t/******************\n\t   Known Issues\n\t******************/\n\t\n\t/* The CSS spec mandates that the translateX/Y/Z transforms are %-relative to the element itself -- not its parent.\n\tVelocity, however, doesn't make this distinction. Thus, converting to or from the % unit with these subproperties\n\twill produce an inaccurate conversion value. The same issue exists with the cx/cy attributes of SVG circles and ellipses. */\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Vue.js v1.0.15\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind$1(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a non-enumerable property\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\tvar isIE9 = inBrowser && navigator.userAgent.toLowerCase().indexOf('msie 9.0') > 0;\n\t\n\tvar isAndroid = inBrowser && navigator.userAgent.toLowerCase().indexOf('android') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined') {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    timerFunc = setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  text = text.replace(/\\n/g, '');\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE$1.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether or not to handle fully object properties which\n\t   * are already backed by getters and seters. Depending on\n\t   * use case and environment, this might introduce non-neglible\n\t   * performance penalties.\n\t   */\n\t  convertAllProperties: false,\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t    warn = function (msg, e) {\n\t      if (hasConsole && (!config.silent || config.debug)) {\n\t        console.warn('[Vue warn]: ' + msg);\n\t        /* istanbul ignore if */\n\t        if (config.debug) {\n\t          if (e) {\n\t            throw e;\n\t          } else {\n\t            console.warn(new Error('Warning Stack Trace').stack);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction on$1(el, event, cb) {\n\t  el.addEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !(el instanceof SVGElement)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && el.content instanceof DocumentFragment) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail textNodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  trim(node, node.firstChild);\n\t  trim(node, node.lastChild);\n\t}\n\t\n\tfunction trim(parent, node) {\n\t  if (node && node.nodeType === 3 && !node.data.trim()) {\n\t    parent.removeChild(node);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__vue_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\n\tvar reservedTagRE = /^(slot|partial|component)$/;\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        if (tag.indexOf('-') > -1 || /HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly?');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el) {\n\t  // dynamic syntax\n\t  var exp = getAttr(el, 'is');\n\t  if (exp != null) {\n\t    return { id: exp };\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  var key = prop.path;\n\t  value = coerceProp(prop, value);\n\t  vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction assertProp(prop, value) {\n\t  // if a prop is not provided and is not required,\n\t  // skip the check.\n\t  if (prop.raw === null && !prop.required) {\n\t    return true;\n\t  }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = true;\n\t  var expectedType;\n\t  if (type) {\n\t    if (type === String) {\n\t      expectedType = 'string';\n\t      valid = typeof value === expectedType;\n\t    } else if (type === Number) {\n\t      expectedType = 'number';\n\t      valid = typeof value === 'number';\n\t    } else if (type === Boolean) {\n\t      expectedType = 'boolean';\n\t      valid = typeof value === 'boolean';\n\t    } else if (type === Function) {\n\t      expectedType = 'function';\n\t      valid = typeof value === 'function';\n\t    } else if (type === Object) {\n\t      expectedType = 'object';\n\t      valid = isPlainObject(value);\n\t    } else if (type === Array) {\n\t      expectedType = 'array';\n\t      valid = isArray(value);\n\t    } else {\n\t      valid = value instanceof type;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    (\"production\") !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator.call(null, value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\tfunction formatType(val) {\n\t  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n\t}\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * 0.11 deprecation warning\n\t */\n\t\n\tstrats.paramAttributes = function () {\n\t  /* istanbul ignore next */\n\t  (\"production\") !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var def;\n\t    var ids = Object.keys(components);\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  var options = {};\n\t  var key;\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id) {\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  return assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t}\n\t\n\t/**\n\t * Assert asset exists\n\t */\n\t\n\tfunction assertAsset(val, type, id) {\n\t  if (!val) {\n\t    (\"production\") !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n\t  }\n\t}\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar uid$3 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$3++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  target.__proto__ = src;\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter, setter;\n\t  if (config.convertAllProperties) {\n\t    var property = Object.getOwnPropertyDescriptor(obj, key);\n\t    if (property && property.configurable === false) {\n\t      return;\n\t    }\n\t    getter = property && property.get;\n\t    setter = property && property.set;\n\t  }\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind$1,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on$1,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tassertAsset: assertAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tinitProp: initProp,\n\t\tassertProp: assertProp,\n\t\tcoerceProp: coerceProp,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initScope().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\")|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    return new Function('scope', 'return ' + body + ';');\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar internalQueueDepleted = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue = [];\n\t  userQueue = [];\n\t  has = {};\n\t  circular = {};\n\t  waiting = internalQueueDepleted = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  internalQueueDepleted = true;\n\t  runBatcherQueue(userQueue);\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n\t      window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('flush');\n\t    }\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        queue.splice(has[id], 1);\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // if an internal watcher is pushed, but the internal\n\t    // queue is already depleted, we run it immediately.\n\t    if (internalQueueDepleted && !watcher.user) {\n\t      watcher.run();\n\t      return;\n\t    }\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String} expression\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = isFn ? expOrFn.toString() : expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = Object.create(null);\n\t  this.newDeps = null;\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDeps[id]) {\n\t    this.newDeps[id] = dep;\n\t    if (!this.deps[id]) {\n\t      this.deps[id] = dep;\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t  this.newDeps = Object.create(null);\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var ids = Object.keys(this.deps);\n\t  var i = ids.length;\n\t  while (i--) {\n\t    var id = ids[i];\n\t    if (!this.newDeps[id]) {\n\t      this.deps[id].removeSub(this);\n\t    }\n\t  }\n\t  this.deps = this.newDeps;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var depIds = Object.keys(this.deps);\n\t  var i = depIds.length;\n\t  while (i--) {\n\t    this.deps[depIds[i]].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // we can skip this if the vm if being destroyed\n\t    // which can improve teardown performance.\n\t    if (!this.vm._isBeingDestroyed) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var depIds = Object.keys(this.deps);\n\t    var i = depIds.length;\n\t    while (i--) {\n\t      this.deps[depIds[i]].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tfunction traverse(val) {\n\t  var i, keys;\n\t  if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) traverse(val[i]);\n\t  } else if (isObject(val)) {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) traverse(val[keys[i]]);\n\t  }\n\t}\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n\t  }\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar FOR = 2000;\n\tvar IF = 2000;\n\tvar SLOT = 2100;\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        value = value.replace(importantRE, '').trim();\n\t      }\n\t      this.el.style.setProperty(prop, value, isImportant);\n\t    } else {\n\t      this.el.style.removeProperty(prop);\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  if (camel in testEl.style) {\n\t    return prop;\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return prefixes[i] + prop;\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value);\n\t      } else {\n\t        el.setAttribute(attr, value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': 46,\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tvar on = {\n\t\n\t  acceptStatement: true,\n\t  priority: ON,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on$1(self.el.contentWindow, self.arg, self.handler);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on$1(this.el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      jQuery(el).on('change', this.listener);\n\t      if (!lazy) {\n\t        jQuery(el).on('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.listener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      jQuery(el).off('change', this.listener);\n\t      jQuery(el).off('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && node.content instanceof DocumentFragment;\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var hit = templateCache.get(templateString);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    var templateStringToUse = raw ? templateString : templateString.trim();\n\t    node.innerHTML = prefix + templateStringToUse + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t\n\t  templateCache.put(templateString, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment.\n\t  if (isRealTemplate(node)) {\n\t    trimNode(node.content);\n\t    return node.content;\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (template instanceof DocumentFragment) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__vue_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__vfrag__ = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__vfrag__ = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el)) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : el.outerHTML);\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseFactory = new FragmentFactory(this.vm, next);\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t      this.factory = new FragmentFactory(this.vm, el);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseFactory && !this.elseFrag) {\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar uid$1 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in items\" syntax\n\t    var inMatch = this.expression.match(/(.*) in (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Alias is required in v-for.');\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$1;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          frag.scope[alias] = value;\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    defineReactive(scope, alias, value);\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__vfrag__ = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.before(prevEl.nextSibling);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        def(value, id, frag);\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number') {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__vfrag__;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__vfrag__;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(n);\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n\t  };\n\t}\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\tvar text = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar publicDirectives = {\n\t  text: text,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on,\n\t  bind: bind,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind$1(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t\n\t  // Important hack:\n\t  // in Chrome, if a just-entered element is applied the\n\t  // leave class while its interpolated property still has\n\t  // a very small value (within one frame), Chrome will\n\t  // skip the leave transition entirely and not firing the\n\t  // transtionend event. Therefore we need to protected\n\t  // against such cases using a one-frame timeout.\n\t  this.justEntered = true;\n\t  var self = this;\n\t  setTimeout(function () {\n\t    self.justEntered = false;\n\t  }, 17);\n\t\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on$1(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t}\n\t\n\tvar transition = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    // apply on closest vm\n\t    el.__v_trans = new Transition(el, id, hooks, this.el.__vue__ || this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      val = coerceProp(prop, val);\n\t      if (assertProp(prop, val)) {\n\t        child[childKey] = val;\n\t      }\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(id, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || id;\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(id, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHook = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHook && !cached) {\n\t      this.waitingFor = newComponent;\n\t      activateHook.call(newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      this.waitingFor.$destroy();\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (false) {\n\t      if (current) current._inactive = true;\n\t      target._inactive = false;\n\t    }\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (value && typeof value === 'string') {\n\t      this.handleObject(stringToObject(value));\n\t    } else if (isPlainObject(value)) {\n\t      this.handleObject(value);\n\t    } else if (isArray(value)) {\n\t      this.handleArray(value);\n\t    } else {\n\t      this.cleanup();\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    this.cleanup(value);\n\t    var keys = this.prevKeys = Object.keys(value);\n\t    for (var i = 0, l = keys.length; i < l; i++) {\n\t      var key = keys[i];\n\t      if (value[key]) {\n\t        addClass(this.el, key);\n\t      } else {\n\t        removeClass(this.el, key);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleArray: function handleArray(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      if (value[i]) {\n\t        addClass(this.el, value[i]);\n\t      }\n\t    }\n\t    this.prevKeys = value.slice();\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    if (this.prevKeys) {\n\t      var i = this.prevKeys.length;\n\t      while (i--) {\n\t        var key = this.prevKeys[i];\n\t        if (key && (!value || !contains$1(value, key))) {\n\t          removeClass(this.el, key);\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction stringToObject(value) {\n\t  var res = {};\n\t  var keys = value.trim().split(/\\s+/);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    res[keys[i]] = true;\n\t  }\n\t  return res;\n\t}\n\t\n\tfunction contains$1(value, key) {\n\t  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n\t}\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition\n\t};\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.');\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.');\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (options.required) {\n\t      // warn missing required\n\t      (\"production\") !== 'production' && warn('Missing required prop: ' + name);\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, getDefault(vm, options));\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (vm._context) {\n\t          if (prop.mode === propBindingModes.ONE_TIME) {\n\t            // one time binding\n\t            value = (scope || vm._context).$get(prop.parentPath);\n\t            initProp(vm, prop, value);\n\t          } else {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          }\n\t        } else {\n\t            (\"production\") !== 'production' && warn('Cannot bind dynamic prop on a root instance' + ' with no parent: ' + prop.name + '=\"' + raw + '\"');\n\t          }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value\n\t        value = options.type === Boolean && raw === '' ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction getDefault(vm, options) {\n\t  // no default, return undefined\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar argRE = /:(.*)$/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// terminal directives\n\tvar terminalDirectives = ['for', 'if'];\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (!destroying) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && node.tagName !== 'SCRIPT') {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(el.attributes, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: publicDirectives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) return;\n\t  // special case: give named slot a higher priority\n\t  // than unnamed slots\n\t  if (tag === 'slot' && hasBindAttr(el, 'name')) {\n\t    tag = '_namedSlot';\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t  var value, dirName;\n\t  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n\t    dirName = terminalDirectives[i];\n\t    value = el.getAttribute('v-' + dirName);\n\t    if (value != null) {\n\t      return makeTerminalNodeLinkFn(el, dirName, value, options);\n\t    }\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} [def]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    // either an element directive, or if/for\n\t    def: def || publicDirectives[dirName]\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', publicDirectives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', publicDirectives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', publicDirectives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (name.indexOf('v-') === 0) {\n\t              // check arg\n\t              arg = (arg = name.match(argRE)) && arg[1];\n\t              if (arg) {\n\t                name = name.replace(argRE, '');\n\t              }\n\t              // extract directive name\n\t              dirName = name.slice(2);\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName);\n\t\n\t              if (false) {\n\t                assertAsset(dirDef, 'directive', dirName);\n\t              }\n\t\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (el instanceof DocumentFragment) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value)) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\tterminalDirectives: terminalDirectives,\n\t\ttransclude: transclude\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var propsData = this._data;\n\t    var optionsDataFn = this.$options.data;\n\t    var optionsData = optionsDataFn && optionsDataFn();\n\t    if (optionsData) {\n\t      this._data = optionsData;\n\t      for (var prop in propsData) {\n\t        if (false) {\n\t          warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n\t        }\n\t        if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n\t          set(optionsData, prop, propsData[prop]);\n\t        }\n\t      }\n\t    }\n\t    var data = this._data;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      this._proxy(key);\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind$1(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind$1(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind$1(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {String} name\n\t * @param {Node} el\n\t * @param {Vue} vm\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} raw\n\t * @param {Object} def - directive definition object\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t *\n\t * @param {Object} def\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind$1(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind$1(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = params[i];\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t */\n\t\n\tDirective.prototype.on = function (event, handler) {\n\t  on$1(this.el, event, handler);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   * @return {Element}\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (el instanceof DocumentFragment) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {String} name - directive name\n\t   * @param {Node} node   - target node\n\t   * @param {Object} desc - parsed directive descriptor\n\t   * @param {Object} def  - directive definition object\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name);\n\t      if (false) {\n\t        assertAsset(fn, 'filter', filter.name);\n\t      }\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String} id\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (id, cb) {\n\t    var factory = resolveAsset(this.$options, 'components', id);\n\t    if (false) {\n\t      assertAsset(factory, 'component', id);\n\t    }\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory(function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tfunction globalAPI (Vue) {\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text$1,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]+$/.test(name)) {\n\t        warn('Invalid component name: ' + name);\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t}\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement && !isSimplePath(exp)) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      for (var key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.');\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install APIs\n\tglobalAPI(Vue);\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n\t    return prev.concat(cur);\n\t  }, []);\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} sortKey\n\t * @param {String} reverse\n\t */\n\t\n\tfunction orderBy(arr, sortKey, reverse) {\n\t  arr = convertArray(arr);\n\t  if (!sortKey) {\n\t    return arr;\n\t  }\n\t  var order = reverse && reverse < 0 ? -1 : 1;\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(function (a, b) {\n\t    if (sortKey !== '$key') {\n\t      if (isObject(a) && '$value' in a) a = a.$value;\n\t      if (isObject(b) && '$value' in b) b = b.$value;\n\t    }\n\t    a = isObject(a) ? getPath(a, sortKey) : a;\n\t    b = isObject(b) ? getPath(b, sortKey) : b;\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  });\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   */\n\t\n\t  currency: function currency(value, _currency) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    var stringified = Math.abs(value).toFixed(2);\n\t    var _int = stringified.slice(0, -3);\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = stringified.slice(-3);\n\t    var sign = value < 0 ? '-' : '';\n\t    return _currency + sign + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id);\n\t    if (false) {\n\t      assertAsset(partial, 'partial', id);\n\t    }\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\t// This is the elementDirective that handles <content>\n\t// transclusions. It relies on the raw content of an\n\t// instance being stored as `$options._content` during\n\t// the transclude phase.\n\t\n\t// We are exporting two versions, one for named and one\n\t// for unnamed, because the unnamed slots must be compiled\n\t// AFTER all named slots have selected their content. So\n\t// we need to give them different priorities in the compilation\n\t// process. (See #1965)\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t\n\t  bind: function bind() {\n\t    var host = this.vm;\n\t    var raw = host.$options._content;\n\t    if (!raw) {\n\t      this.fallback();\n\t      return;\n\t    }\n\t    var context = host._context;\n\t    var slotName = this.params && this.params.name;\n\t    if (!slotName) {\n\t      // Default slot\n\t      this.tryCompile(extractFragment(raw.childNodes, raw, true), context, host);\n\t    } else {\n\t      // Named slot\n\t      var selector = '[slot=\"' + slotName + '\"]';\n\t      var nodes = raw.querySelectorAll(selector);\n\t      if (nodes.length) {\n\t        this.tryCompile(extractFragment(nodes, raw), context, host);\n\t      } else {\n\t        this.fallback();\n\t      }\n\t    }\n\t  },\n\t\n\t  tryCompile: function tryCompile(content, context, host) {\n\t    if (content.hasChildNodes()) {\n\t      this.compile(content, context, host);\n\t    } else {\n\t      this.fallback();\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar namedSlot = extend(extend({}, slot), {\n\t  priority: slot.priority + 1,\n\t  params: ['name']\n\t});\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @param {Element} parent\n\t * @param {Boolean} main\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent, main) {\n\t  var frag = document.createDocumentFragment();\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    // if this is the main outlet, we want to skip all\n\t    // previously selected nodes;\n\t    // otherwise, we want to mark the node as selected.\n\t    // clone the node so the original raw content remains\n\t    // intact. this ensures proper re-compilation in cases\n\t    // where the outlet is inside a conditional block\n\t    if (main && !node.__v_selected) {\n\t      append(node);\n\t    } else if (!main && node.parentNode === parent) {\n\t      node.__v_selected = true;\n\t      append(node);\n\t    }\n\t  }\n\t  return frag;\n\t\n\t  function append(node) {\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      node = parseTemplate(node);\n\t    }\n\t    node = cloneNode(node);\n\t    frag.appendChild(node);\n\t  }\n\t}\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  _namedSlot: namedSlot, // same as slot but with higher priority\n\t  partial: partial\n\t};\n\t\n\tVue.version = '1.0.15';\n\t\n\t/**\n\t * Vue and every constructor that extends Vue has an\n\t * associated options object, which can be accessed during\n\t * compilation steps as `this.constructor.options`.\n\t *\n\t * These can be seen as the default options of every\n\t * Vue instance.\n\t */\n\t\n\tVue.options = {\n\t  directives: publicDirectives,\n\t  elementDirectives: elementDirectives,\n\t  filters: filters,\n\t  transitions: {},\n\t  components: {},\n\t  partials: {},\n\t  replace: true\n\t};\n\t\n\t// devtools global hook\n\t/* istanbul ignore if */\n\tif (false) {\n\t  if (window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n\t    window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('init', Vue);\n\t  } else if (/Chrome\\/\\d+/.test(navigator.userAgent)) {\n\t    console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t  }\n\t}\n\t\n\tmodule.exports = Vue;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t/* The following list is defined in React's core */\n\tvar IS_UNITLESS = {\n\t  animationIterationCount: true,\n\t  boxFlex: true,\n\t  boxFlexGroup: true,\n\t  boxOrdinalGroup: true,\n\t  columnCount: true,\n\t  flex: true,\n\t  flexGrow: true,\n\t  flexPositive: true,\n\t  flexShrink: true,\n\t  flexNegative: true,\n\t  flexOrder: true,\n\t  gridRow: true,\n\t  gridColumn: true,\n\t  fontWeight: true,\n\t  lineClamp: true,\n\t  lineHeight: true,\n\t  opacity: true,\n\t  order: true,\n\t  orphans: true,\n\t  tabSize: true,\n\t  widows: true,\n\t  zIndex: true,\n\t  zoom: true,\n\t\n\t  // SVG-related properties\n\t  fillOpacity: true,\n\t  stopOpacity: true,\n\t  strokeDashoffset: true,\n\t  strokeOpacity: true,\n\t  strokeWidth: true\n\t};\n\t\n\tmodule.exports = function(name, value) {\n\t  if(typeof value === 'number' && !IS_UNITLESS[ name ]) {\n\t    return value + 'px';\n\t  } else {\n\t    return value;\n\t  }\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\tvar str = Object.prototype.toString\n\t\n\tmodule.exports = anArray\n\t\n\tfunction anArray(arr) {\n\t  return (\n\t       arr.BYTES_PER_ELEMENT\n\t    && str.call(arr.buffer) === '[object ArrayBuffer]'\n\t    || Array.isArray(arr)\n\t  )\n\t}\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _brindilleResize = __webpack_require__(3);\n\t\n\tvar _brindilleResize2 = _interopRequireDefault(_brindilleResize);\n\t\n\tvar _domCss = __webpack_require__(5);\n\t\n\tvar _domCss2 = _interopRequireDefault(_domCss);\n\t\n\tvar _Preloader = __webpack_require__(72);\n\t\n\tvar _Preloader2 = _interopRequireDefault(_Preloader);\n\t\n\tvar _About = __webpack_require__(71);\n\t\n\tvar _About2 = _interopRequireDefault(_About);\n\t\n\tvar _preloader = __webpack_require__(10);\n\t\n\tvar _preloader2 = _interopRequireDefault(_preloader);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    SectionPreloader: _Preloader2.default,\n\t    SectionAbout: _About2.default\n\t  },\n\t\n\t  computed: {\n\t    isLoaded: function isLoaded() {\n\t      return _preloader2.default.state.progress >= 1;\n\t    },\n\t    isHidden: function isHidden() {\n\t      return _preloader2.default.state.isHidden;\n\t    }\n\t  },\n\t  ready: function ready() {\n\t\n\t    this.resize();\n\t    _brindilleResize2.default.addListener(this.resize);\n\t  },\n\t\n\t  methods: {\n\t    resize: function resize() {\n\t\n\t      (0, _domCss2.default)(this.$els.background, { width: _brindilleResize2.default.width, height: _brindilleResize2.default.height });\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _vue = __webpack_require__(18);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _velocityAnimate = __webpack_require__(17);\n\t\n\tvar _velocityAnimate2 = _interopRequireDefault(_velocityAnimate);\n\t\n\tvar _brindilleResize = __webpack_require__(3);\n\t\n\tvar _brindilleResize2 = _interopRequireDefault(_brindilleResize);\n\t\n\tvar _domCss = __webpack_require__(5);\n\t\n\tvar _domCss2 = _interopRequireDefault(_domCss);\n\t\n\tvar _about = __webpack_require__(9);\n\t\n\tvar _about2 = _interopRequireDefault(_about);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t\n\t  computed: {\n\t    isOpen: function isOpen() {\n\t      return _about2.default.state.isOpen;\n\t    }\n\t  },\n\t  attached: function attached() {\n\t\n\t    this.resize();\n\t    _brindilleResize2.default.addListener(this.resize);\n\t  },\n\t  detached: function detached() {\n\t\n\t    _brindilleResize2.default.removeListener(this.resize);\n\t  },\n\t\n\t  methods: {\n\t    resize: function resize() {\n\t\n\t      (0, _domCss2.default)(this.$els.content, { width: _brindilleResize2.default.width, height: _brindilleResize2.default.height });\n\t      (0, _domCss2.default)(this.$els.openButton, { top: 35 });\n\t      (0, _domCss2.default)(this.$els.closeButton, { top: 35 });\n\t    },\n\t    open: function open() {\n\t\n\t      _about2.default.actions.open();\n\t    },\n\t    close: function close() {\n\t\n\t      _about2.default.actions.close();\n\t    }\n\t  }\n\t};\n\t\n\t_vue2.default.transition('section-about-open-button', {\n\t  css: false,\n\t  enter: function enter(el, done) {\n\t\n\t    (0, _velocityAnimate2.default)(el, { opacity: [1, 'easeInSine', 0], translateX: [0, 'easeInSine', -_brindilleResize2.default.width * 0.02] }, { duration: 200, delay: 300, complete: function complete() {\n\t        done();\n\t      } });\n\t  },\n\t  leave: function leave(el, done) {\n\t\n\t    (0, _velocityAnimate2.default)(el, { opacity: [0, 'easeInSine', 1], translateX: [-_brindilleResize2.default.width * 0.02, 'easeInSine', 0] }, { duration: 200, complete: function complete() {\n\t        done();\n\t      } });\n\t  }\n\t});\n\t\n\t_vue2.default.transition('section-about-content', {\n\t  css: false,\n\t  enter: function enter(el, done) {\n\t\n\t    (0, _domCss2.default)(el, { opacity: 0 });\n\t\n\t    (0, _velocityAnimate2.default)(el, { opacity: [1, 'easeInSine', 0] }, { duration: 400, delay: 200, complete: function complete() {\n\t        done();\n\t      } });\n\t  },\n\t  leave: function leave(el, done) {\n\t\n\t    (0, _velocityAnimate2.default)(el, { opacity: [0, 'easeInSine', 1] }, { duration: 400, complete: function complete() {\n\t        done();\n\t      } });\n\t  }\n\t});\n\t\n\t_vue2.default.transition('section-about-close-button', {\n\t  css: false,\n\t  enter: function enter(el, done) {\n\t\n\t    (0, _velocityAnimate2.default)(el, { opacity: [1, 'easeInSine', 0], translateX: [0, 'easeInSine', _brindilleResize2.default.width * 0.02] }, { duration: 200, delay: 300, complete: function complete() {\n\t        done();\n\t      } });\n\t  },\n\t  leave: function leave(el, done) {\n\t\n\t    (0, _velocityAnimate2.default)(el, { opacity: [0, 'easeInSine', 1], translateX: [_brindilleResize2.default.width * 0.02, 'easeInSine', 0] }, { duration: 200, complete: function complete() {\n\t        done();\n\t      } });\n\t  }\n\t});\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _velocityAnimate = __webpack_require__(17);\n\t\n\tvar _velocityAnimate2 = _interopRequireDefault(_velocityAnimate);\n\t\n\tvar _preloader = __webpack_require__(58);\n\t\n\tvar _preloader2 = _interopRequireDefault(_preloader);\n\t\n\tvar _brindilleResize = __webpack_require__(3);\n\t\n\tvar _brindilleResize2 = _interopRequireDefault(_brindilleResize);\n\t\n\tvar _domCss = __webpack_require__(5);\n\t\n\tvar _domCss2 = _interopRequireDefault(_domCss);\n\t\n\tvar _domCssTransform = __webpack_require__(43);\n\t\n\tvar _domCssTransform2 = _interopRequireDefault(_domCssTransform);\n\t\n\tvar _preloader3 = __webpack_require__(10);\n\t\n\tvar _preloader4 = _interopRequireDefault(_preloader3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  attached: function attached() {\n\t\n\t    this.reset();\n\t    this.show();\n\t\n\t    _brindilleResize2.default.addListener(this.resize);\n\t\n\t    this.loader = new _preloader2.default();\n\t    this.loader.addImage('assets/yeoman.png');\n\t\n\t    this.loader.onProgress.add(this.loaderProgressHandler);\n\t    this.loader.onComplete.addOnce(this.loaderCompleteHandler);\n\t    this.loader.load();\n\t  },\n\t  detached: function detached() {\n\t\n\t    _brindilleResize2.default.removeListener(this.resize);\n\t  },\n\t\n\t  methods: {\n\t    reset: function reset() {\n\t\n\t      this.resize();\n\t\n\t      (0, _domCssTransform2.default)(this.$els.loadingProgress, { scale: [1, 0, 1] });\n\t    },\n\t    resize: function resize() {\n\t\n\t      (0, _domCss2.default)(this.$el, { width: _brindilleResize2.default.width, height: _brindilleResize2.default.height });\n\t    },\n\t    show: function show() {\n\t\n\t      (0, _velocityAnimate2.default)(this.$els.loading, { opacity: [1, 0] }, { duration: 200 });\n\t    },\n\t    updateLoadingProgress: function updateLoadingProgress(progress) {\n\t      var isComplete = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\t\n\t      _preloader4.default.actions.progressUpdate(progress);\n\t\n\t      (0, _domCssTransform2.default)(this.$els.loadingProgress, { scale: [1, progress, 1] });\n\t\n\t      if (isComplete) {\n\t        this.hide();\n\t      }\n\t    },\n\t    loaderProgressHandler: function loaderProgressHandler(progress) {\n\t\n\t      this.updateLoadingProgress(progress);\n\t    },\n\t    loaderCompleteHandler: function loaderCompleteHandler() {\n\t\n\t      this.loader.onProgress.remove(this.loaderProgressHandler);\n\t      this.loader = null;\n\t\n\t      this.updateLoadingProgress(1, true);\n\t    },\n\t    hide: function hide() {\n\t\n\t      (0, _velocityAnimate2.default)(this.$els.loading, { opacity: 0 }, { duration: 200, delay: 300 });\n\t\n\t      (0, _velocityAnimate2.default)(this.$els.backgroundBottom, { translateY: '100%' }, { duration: 1000, delay: 500, easing: 'easeInOutCubic' });\n\t\n\t      (0, _velocityAnimate2.default)(this.$els.backgroundTop, { translateY: '-100%' }, { duration: 1000, delay: 500, easing: 'easeInOutCubic', complete: function complete() {\n\t          _preloader4.default.actions.hide();\n\t        } });\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _projects = __webpack_require__(8);\n\t\n\tvar _project = __webpack_require__(26);\n\t\n\tvar _project2 = _interopRequireDefault(_project);\n\t\n\tvar _about = __webpack_require__(9);\n\t\n\tvar _about2 = _interopRequireDefault(_about);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t\n\t  components: {},\n\t  route: {\n\t    data: function data(transition) {\n\t\n\t      if (_projects.data[this.$route.params.id]) {\n\t\n\t        this.projects.push(this.$route.params.id);\n\t\n\t        if (this.projects.length > 1) {\n\t\n\t          this.projects.shift();\n\t        }\n\t\n\t        _project2.default.actions.update(this.$route.params.id);\n\t      } else {\n\t\n\t        transition.redirect('/');\n\t      }\n\t\n\t      _about2.default.actions.close();\n\t    }\n\t  },\n\t  data: function data() {\n\t    return {\n\t      projects: []\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.configRouter = configRouter;\n\t\n\tvar _keys = __webpack_require__(27);\n\t\n\tvar _keys2 = _interopRequireDefault(_keys);\n\t\n\tvar _projects = __webpack_require__(8);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction configRouter(router) {\n\t\n\t  router.on('/project/:id', {\n\t    name: 'project',\n\t    component: __webpack_require__(73)\n\t  });\n\t\n\t  router.redirect({\n\t    '*': '/project/' + (0, _keys2.default)(_projects.data)[0]\n\t  });\n\t\n\t  router.afterEach(function (transition) {});\n\t}\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _vuex = __webpack_require__(2);\n\t\n\tvar _vuex2 = _interopRequireDefault(_vuex);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar state = {\n\t  project: '',\n\t  isDetailsOpen: false\n\t};\n\t\n\tvar actions = {\n\t  update: 'UPDATE',\n\t  openDetails: 'OPEN_DETAILS',\n\t  closeDetails: 'CLOSE_DETAILS'\n\t};\n\t\n\tvar mutations = {\n\t  UPDATE: function UPDATE(state, project) {\n\t    state.project = project;\n\t    state.isDetailsOpen = false;\n\t  },\n\t  OPEN_DETAILS: function OPEN_DETAILS(state) {\n\t    state.isDetailsOpen = true;\n\t  },\n\t  CLOSE_DETAILS: function CLOSE_DETAILS(state) {\n\t    state.isDetailsOpen = false;\n\t  }\n\t};\n\t\n\texports.default = new _vuex2.default.Store({\n\t  state: state,\n\t  actions: actions,\n\t  mutations: mutations\n\t});\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(29), __esModule: true };\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Emitter`.\n\t */\n\t\n\tmodule.exports = Emitter;\n\t\n\t/**\n\t * Initialize a new `Emitter`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\n\t * Mixin the emitter properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.on =\n\tEmitter.prototype.addEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n\t    .push(fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.once = function(event, fn){\n\t  function on() {\n\t    this.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.off =\n\tEmitter.prototype.removeListener =\n\tEmitter.prototype.removeAllListeners =\n\tEmitter.prototype.removeEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks['$' + event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks['$' + event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Emit `event` with the given args.\n\t *\n\t * @param {String} event\n\t * @param {Mixed} ...\n\t * @return {Emitter}\n\t */\n\t\n\tEmitter.prototype.emit = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1)\n\t    , callbacks = this._callbacks['$' + event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return array of callbacks for `event`.\n\t *\n\t * @param {String} event\n\t * @return {Array}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.listeners = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks['$' + event] || [];\n\t};\n\t\n\t/**\n\t * Check if this emitter has `event` handlers.\n\t *\n\t * @param {String} event\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.hasListeners = function(event){\n\t  return !! this.listeners(event).length;\n\t};\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(38);\n\tmodule.exports = __webpack_require__(4).Object.keys;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// optional / simple context binding\n\tvar aFunction = __webpack_require__(30);\n\tmodule.exports = function(fn, that, length){\n\t  aFunction(fn);\n\t  if(that === undefined)return fn;\n\t  switch(length){\n\t    case 1: return function(a){\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function(a, b){\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function(a, b, c){\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function(/* ...args */){\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tmodule.exports = function(it){\n\t  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n\t  return it;\n\t};\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(35)\n\t  , core      = __webpack_require__(4)\n\t  , ctx       = __webpack_require__(31)\n\t  , PROTOTYPE = 'prototype';\n\t\n\tvar $export = function(type, name, source){\n\t  var IS_FORCED = type & $export.F\n\t    , IS_GLOBAL = type & $export.G\n\t    , IS_STATIC = type & $export.S\n\t    , IS_PROTO  = type & $export.P\n\t    , IS_BIND   = type & $export.B\n\t    , IS_WRAP   = type & $export.W\n\t    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n\t    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n\t    , key, own, out;\n\t  if(IS_GLOBAL)source = name;\n\t  for(key in source){\n\t    // contains in native\n\t    own = !IS_FORCED && target && key in target;\n\t    if(own && key in exports)continue;\n\t    // export native or passed\n\t    out = own ? target[key] : source[key];\n\t    // prevent global pollution for namespaces\n\t    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n\t    // bind timers to global for call from export context\n\t    : IS_BIND && own ? ctx(out, global)\n\t    // wrap global constructors for prevent change them in library\n\t    : IS_WRAP && target[key] == out ? (function(C){\n\t      var F = function(param){\n\t        return this instanceof C ? new C(param) : C(param);\n\t      };\n\t      F[PROTOTYPE] = C[PROTOTYPE];\n\t      return F;\n\t    // make static versions for prototype methods\n\t    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n\t  }\n\t};\n\t// type bitmap\n\t$export.F = 1;  // forced\n\t$export.G = 2;  // global\n\t$export.S = 4;  // static\n\t$export.P = 8;  // proto\n\t$export.B = 16; // bind\n\t$export.W = 32; // wrap\n\tmodule.exports = $export;\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(exec){\n\t  try {\n\t    return !!exec();\n\t  } catch(e){\n\t    return true;\n\t  }\n\t};\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\tif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// most Object methods by ES6 should accept primitives\n\tvar $export = __webpack_require__(33)\n\t  , core    = __webpack_require__(4)\n\t  , fails   = __webpack_require__(34);\n\tmodule.exports = function(KEY, exec){\n\t  var fn  = (core.Object || {})[KEY] || Object[KEY]\n\t    , exp = {};\n\t  exp[KEY] = exec(fn);\n\t  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n\t};\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.13 ToObject(argument)\n\tvar defined = __webpack_require__(32);\n\tmodule.exports = function(it){\n\t  return Object(defined(it));\n\t};\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.14 Object.keys(O)\n\tvar toObject = __webpack_require__(37);\n\t\n\t__webpack_require__(36)('keys', function($keys){\n\t  return function keys(it){\n\t    return $keys(toObject(it));\n\t  };\n\t});\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar quat = __webpack_require__(40)\n\tvar mat4 = {\n\t    identity: __webpack_require__(11),\n\t    fromRotationTranslation: __webpack_require__(52),\n\t    scale: __webpack_require__(54),\n\t    multiply: __webpack_require__(53)\n\t}\n\t\n\tvar ZERO3 = [0, 0, 0]\n\tvar ZERO2 = [0, 0]\n\tvar ONES = [1, 1, 1]\n\tvar IDENTITY = [0, 0, 0, 1]\n\tvar tmpQuat = [0, 0, 0, 1]\n\t\n\tvar tmpMat4 = mat4.identity([])\n\tvar translation = [0,0,0],\n\t    euler = [0,0,0],\n\t    scale = [1,1,1],\n\t    skew = [0,0]\n\t\n\tmodule.exports = function compose(out, opt) {\n\t    if (!opt)\n\t        return mat4.identity(out)\n\t        \n\t    copyVec3(translation, opt.translate || ZERO3)\n\t    copyVec2(skew, opt.skew || ZERO2)\n\t    copyScale3(scale, opt.scale || ONES)\n\t    var quaternion = opt.quaternion\n\t\n\t    if (!quaternion) {\n\t        //build a XYZ euler angle from 3D rotation\n\t        quaternion = quat.identity(tmpQuat)\n\t        copyVec3(euler, opt.rotate || ZERO3)\n\t        quat.fromEuler(quaternion, euler)\n\t    }\n\t\n\t    //apply translation & rotation\n\t    mat4.fromRotationTranslation(out, quaternion, translation)\n\t\n\t    //apply a combined 2D skew() operation\n\t    if (skew[0]!==0 || skew[1]!==0) {\n\t        tmpMat4[4] = Math.tan(skew[0])\n\t        tmpMat4[1] = Math.tan(skew[1])\n\t        mat4.multiply(out, out, tmpMat4)\n\t    }\n\t\n\t    //apply the independent skewX() and skewY() operations\n\t    if (typeof opt.skewX === 'number') {\n\t        tmpMat4[4] = Math.tan(opt.skewX)\n\t        tmpMat4[1] = 0\n\t        mat4.multiply(out, out, tmpMat4)\n\t    }\n\t\n\t    if (typeof opt.skewY === 'number') {\n\t        tmpMat4[4] = 0\n\t        tmpMat4[1] = Math.tan(opt.skewY)\n\t        mat4.multiply(out, out, tmpMat4)\n\t    }\n\t    \n\t    //apply scale() operation\n\t    mat4.scale(out, out, scale)\n\t\n\t    return out\n\t}\n\t\n\t//safely copy vec2/vec3 to a vec3\n\tfunction copyVec3(out, a) {\n\t    out[0] = a[0]||0\n\t    out[1] = a[1]||0\n\t    out[2] = a[2]||0\n\t    return out\n\t}\n\t\n\tfunction copyVec2(out, a) {\n\t    out[0] = a[0]||0\n\t    out[1] = a[1]||0\n\t    return out\n\t}\n\t\n\tfunction copyScale3(out, a) {\n\t    out[0] = typeof a[0] === 'number' ? a[0] : 1\n\t    out[1] = typeof a[1] === 'number' ? a[1] : 1\n\t    out[2] = typeof a[2] === 'number' ? a[2] : 1\n\t    return out\n\t}\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\t//ZYX order\n\tmodule.exports.fromEuler = function(quaternion, euler) {\n\t    var x = euler[0], y = euler[1], z = euler[2]\n\t\n\t    var sx = Math.sin(x/2), sy = Math.sin(y/2),\n\t        sz = Math.sin(z/2), cx = Math.cos(x/2),\n\t        cy = Math.cos(y/2), cz = Math.cos(z/2)\n\t\n\t    quaternion[3] = cx*cy*cz - sx*sy*sz\n\t    quaternion[0] = sx*cy*cz + cx*sy*sz\n\t    quaternion[1] = cx*sy*cz - sx*cy*sz\n\t    quaternion[2] = cx*cy*sz + sx*sy*cz\n\t    return quaternion\n\t}\n\t\n\tmodule.exports.identity = function(out) {\n\t    out[0] = 0\n\t    out[1] = 0\n\t    out[2] = 0\n\t    out[3] = 1\n\t    return out\n\t}\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar now = __webpack_require__(42);\n\t\n\t/**\n\t * Returns a function, that, as long as it continues to be invoked, will not\n\t * be triggered. The function will be called after it stops being called for\n\t * N milliseconds. If `immediate` is passed, trigger the function on the\n\t * leading edge, instead of the trailing.\n\t *\n\t * @source underscore.js\n\t * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n\t * @param {Function} function to wrap\n\t * @param {Number} timeout in ms (`100`)\n\t * @param {Boolean} whether to execute at the beginning (`false`)\n\t * @api public\n\t */\n\t\n\tmodule.exports = function debounce(func, wait, immediate){\n\t  var timeout, args, context, timestamp, result;\n\t  if (null == wait) wait = 100;\n\t\n\t  function later() {\n\t    var last = now() - timestamp;\n\t\n\t    if (last < wait && last > 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      if (!immediate) {\n\t        result = func.apply(context, args);\n\t        if (!timeout) context = args = null;\n\t      }\n\t    }\n\t  };\n\t\n\t  return function debounced() {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = now();\n\t    var callNow = immediate && !timeout;\n\t    if (!timeout) timeout = setTimeout(later, wait);\n\t    if (callNow) {\n\t      result = func.apply(context, args);\n\t      context = args = null;\n\t    }\n\t\n\t    return result;\n\t  };\n\t};\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Date.now || now\n\t\n\tfunction now() {\n\t    return new Date().getTime()\n\t}\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar css = __webpack_require__(46)\n\tvar stringify = __webpack_require__(45)\n\tvar compose = __webpack_require__(39)\n\tvar isArray = __webpack_require__(20)\n\tvar identity = __webpack_require__(11)\n\t\n\tvar tmpMat4 = identity([])\n\t\n\tmodule.exports = function(element, value) {\n\t    //is a flat array or matrix components\n\t    if (value && typeof value === 'object') {\n\t        //convert to flat array\n\t        value = isArray(value) \n\t            ? value \n\t            : compose(tmpMat4, value)\n\t        //stringify\n\t        value = stringify(value)\n\t    } \n\t\n\t    //default to identity/none\n\t    if (!value)\n\t        value = 'none'\n\t    css(element, 'transform', value)\n\t}\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\tvar scratch = new Array(6)\n\tfor (var i=0; i<6; i++)\n\t    scratch[i] = 0\n\t\n\tmodule.exports = function stringifyMat2d(matrix) {\n\t    if (!matrix)\n\t        return 'none'\n\t\n\t    for (var i=0; i<6; i++)\n\t        scratch[i] = Math.round(matrix[i]*1e15) / 1e15\n\t    return 'matrix('+Array.prototype.join.call(scratch, ', ')+')'\n\t}\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mat2d = __webpack_require__(44)\n\tvar mat4 = __webpack_require__(56)\n\t\n\tmodule.exports = function(matrix) {\n\t    var len = matrix && matrix.length\n\t    if (len === 16)\n\t        return mat4(matrix)\n\t    else if (len === 6)\n\t        return mat2d(matrix)\n\t    return 'none'\n\t}\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar prefix = __webpack_require__(47)\n\tvar toCamelCase = __webpack_require__(16)\n\tvar cache = { 'float': 'cssFloat' }\n\t\n\tvar suffixMap = {}\n\t;['top','right','bottom','left',\n\t    'width','height','fontSize',\n\t    'paddingLeft','paddingRight',\n\t    'paddingTop','paddingBottom',\n\t    'marginLeft','marginRight',\n\t    'marginTop','marginBottom',\n\t    'padding','margin','perspective'\n\t].forEach(function(prop) {\n\t    suffixMap[prop] = 'px'\n\t})\n\t\n\tfunction style(element, property, value) {\n\t    var camel = cache[property]\n\t    if (typeof camel === 'undefined')\n\t        camel = detect(property)\n\t\n\t    //may be false if CSS prop is unsupported\n\t    if (camel) {\n\t        if (value === undefined)\n\t            return element.style[camel]\n\t\n\t        if (typeof value === 'number')\n\t            value = value + (suffixMap[camel]||'')\n\t        element.style[camel] = value\n\t    }\n\t}\n\t\n\tfunction each(element, properties) {\n\t    for (var k in properties) {\n\t        if (properties.hasOwnProperty(k)) {\n\t            style(element, k, properties[k])\n\t        }\n\t    }\n\t}\n\t\n\tfunction detect(cssProp) {\n\t    var camel = toCamelCase(cssProp)\n\t    var result = prefix(camel)\n\t    cache[camel] = cache[cssProp] = cache[result] = result\n\t    return result\n\t}\n\t\n\tfunction set() {\n\t    if (arguments.length === 2) {\n\t        each(arguments[0], arguments[1])\n\t    } else\n\t        style(arguments[0], arguments[1], arguments[2])\n\t}\n\t\n\tmodule.exports = set\n\tmodule.exports.set = set\n\t\n\tmodule.exports.get = function(element, properties) {\n\t    if (Array.isArray(properties))\n\t        return properties.reduce(function(obj, prop) {\n\t            obj[prop] = style(element, prop||'')\n\t            return obj\n\t        }, {})\n\t    else\n\t        return style(element, properties||'')\n\t}\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\tvar elem = null\n\t\n\t//https://gist.github.com/paulirish/523692\n\tmodule.exports = function prefix(prop) {\n\t    var prefixes = ['Moz', 'Khtml', 'Webkit', 'O', 'ms'],\n\t        upper = prop.charAt(0).toUpperCase() + prop.slice(1)\n\t    \n\t    if (!elem)\n\t        elem = document.createElement('div')\n\t\n\t    if (prop in elem.style)\n\t        return prop\n\t\n\t    for (var len = prefixes.length; len--;) {\n\t        if ((prefixes[len] + upper) in elem.style)\n\t            return (prefixes[len] + upper)\n\t    }\n\t    return false\n\t}\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 49 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 50 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 51 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 52 */\n/***/ function(module, exports) {\n\n\tmodule.exports = fromRotationTranslation;\n\t\n\t/**\n\t * Creates a matrix from a quaternion rotation and vector translation\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.translate(dest, vec);\n\t *     var quatMat = mat4.create();\n\t *     quat4.toMat4(quat, quatMat);\n\t *     mat4.multiply(dest, quatMat);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {quat4} q Rotation quaternion\n\t * @param {vec3} v Translation vector\n\t * @returns {mat4} out\n\t */\n\tfunction fromRotationTranslation(out, q, v) {\n\t    // Quaternion math\n\t    var x = q[0], y = q[1], z = q[2], w = q[3],\n\t        x2 = x + x,\n\t        y2 = y + y,\n\t        z2 = z + z,\n\t\n\t        xx = x * x2,\n\t        xy = x * y2,\n\t        xz = x * z2,\n\t        yy = y * y2,\n\t        yz = y * z2,\n\t        zz = z * z2,\n\t        wx = w * x2,\n\t        wy = w * y2,\n\t        wz = w * z2;\n\t\n\t    out[0] = 1 - (yy + zz);\n\t    out[1] = xy + wz;\n\t    out[2] = xz - wy;\n\t    out[3] = 0;\n\t    out[4] = xy - wz;\n\t    out[5] = 1 - (xx + zz);\n\t    out[6] = yz + wx;\n\t    out[7] = 0;\n\t    out[8] = xz + wy;\n\t    out[9] = yz - wx;\n\t    out[10] = 1 - (xx + yy);\n\t    out[11] = 0;\n\t    out[12] = v[0];\n\t    out[13] = v[1];\n\t    out[14] = v[2];\n\t    out[15] = 1;\n\t    \n\t    return out;\n\t};\n\n/***/ },\n/* 53 */\n/***/ function(module, exports) {\n\n\tmodule.exports = multiply;\n\t\n\t/**\n\t * Multiplies two mat4's\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the first operand\n\t * @param {mat4} b the second operand\n\t * @returns {mat4} out\n\t */\n\tfunction multiply(out, a, b) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n\t        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n\t        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n\t        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\t\n\t    // Cache only the current line of the second matrix\n\t    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n\t    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n\t    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n\t    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n\t    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\t\n\t    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n\t    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n\t    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n\t    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n\t    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\t\n\t    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n\t    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n\t    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n\t    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n\t    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\t\n\t    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n\t    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n\t    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n\t    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n\t    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\t    return out;\n\t};\n\n/***/ },\n/* 54 */\n/***/ function(module, exports) {\n\n\tmodule.exports = scale;\n\t\n\t/**\n\t * Scales the mat4 by the dimensions in the given vec3\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to scale\n\t * @param {vec3} v the vec3 to scale the matrix by\n\t * @returns {mat4} out\n\t **/\n\tfunction scale(out, a, v) {\n\t    var x = v[0], y = v[1], z = v[2];\n\t\n\t    out[0] = a[0] * x;\n\t    out[1] = a[1] * x;\n\t    out[2] = a[2] * x;\n\t    out[3] = a[3] * x;\n\t    out[4] = a[4] * y;\n\t    out[5] = a[5] * y;\n\t    out[6] = a[6] * y;\n\t    out[7] = a[7] * y;\n\t    out[8] = a[8] * z;\n\t    out[9] = a[9] * z;\n\t    out[10] = a[10] * z;\n\t    out[11] = a[11] * z;\n\t    out[12] = a[12];\n\t    out[13] = a[13];\n\t    out[14] = a[14];\n\t    out[15] = a[15];\n\t    return out;\n\t};\n\n/***/ },\n/* 55 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\tparent: function() {\n\t\t\t// if the current function calling is the constructor\n\t\t\tif( this.parent.caller.$$isConstructor ) {\n\t\t\t\tvar parentFunction = this.parent.caller.$$parentConstructor;\n\t\t\t} else {\n\t\t\t\tif( this.parent.caller.$$name ) {\n\t\t\t\t\tvar callerName = this.parent.caller.$$name;\n\t\t\t\t\tvar isGetter = this.parent.caller.$$owner.$$getters[ callerName ];\n\t\t\t\t\tvar isSetter = this.parent.caller.$$owner.$$setters[ callerName ];\n\t\n\t\t\t\t\tif( arguments.length == 1 && isSetter ) {\n\t\t\t\t\t\tvar parentFunction = Object.getPrototypeOf( this.parent.caller.$$owner ).$$setters[ callerName ];\n\t\n\t\t\t\t\t\tif( parentFunction === undefined ) {\n\t\t\t\t\t\t\tthrow 'No setter defined in parent';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if( arguments.length == 0 && isGetter ) {\n\t\t\t\t\t\tvar parentFunction = Object.getPrototypeOf( this.parent.caller.$$owner ).$$getters[ callerName ];\n\t\n\t\t\t\t\t\tif( parentFunction === undefined ) {\n\t\t\t\t\t\t\tthrow 'No getter defined in parent';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if( isSetter || isGetter ) {\n\t\t\t\t\t\tthrow 'Incorrect amount of arguments sent to getter or setter';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar parentFunction = Object.getPrototypeOf( this.parent.caller.$$owner )[ callerName ];\t\n\t\n\t    \t\t\t\tif( parentFunction === undefined ) {\n\t\t\t\t\t\t\tthrow 'No parent function defined for ' + callerName;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow 'You cannot call parent here';\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn parentFunction.apply( this, arguments );\n\t\t}\n\t};\n\n/***/ },\n/* 56 */\n/***/ function(module, exports) {\n\n\tvar scratch = new Array(16)\n\tfor (var i=0; i<16; i++)\n\t    scratch[i] = 0\n\t\n\tmodule.exports = function stringify(matrix) {\n\t   for (var i=0; i<16; i++) \n\t      scratch[i] = Math.round(matrix[i]*1e15) / 1e15\n\t   return 'matrix3d('+scratch.join(', ')+')'\n\t}\n\t\n\t// benchmark:\n\t// http://jsperf.com/stringify-mat4\n\n/***/ },\n/* 57 */\n/***/ function(module, exports) {\n\n\tvar div = null\n\tvar prefixes = [ 'Webkit', 'Moz', 'O', 'ms' ]\n\t\n\tmodule.exports = function prefixStyle (prop) {\n\t  // re-use a dummy div\n\t  if (!div) {\n\t    div = document.createElement('div')\n\t  }\n\t\n\t  var style = div.style\n\t\n\t  // prop exists without prefix\n\t  if (prop in style) {\n\t    return prop\n\t  }\n\t\n\t  // borderRadius -> BorderRadius\n\t  var titleCase = prop.charAt(0).toUpperCase() + prop.slice(1)\n\t\n\t  // find the vendor-prefixed prop\n\t  for (var i = prefixes.length; i >= 0; i--) {\n\t    var name = prefixes[i] + titleCase\n\t    // e.g. WebkitBorderRadius or webkitBorderRadius\n\t    if (name in style) {\n\t      return name\n\t    }\n\t  }\n\t\n\t  return false\n\t}\n\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(63);\n\n/***/ },\n/* 59 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * This module will contain everything related to preloading.\r\n\t * \r\n\t * @module preloader\r\n\t */\r\n\t\r\n\t/**\r\n\t * LoaderCache is a cache where everything loaded with a LoaderBase where cache is true is saved for \r\n\t * use later.\r\n\t *\r\n\t * For instace if a LoaderImage loads an image the Image is saved in LoaderCache for later use.\r\n\t * \r\n\t * @type {Object}\r\n\t */\r\n\tvar LoaderCache = {\r\n\t\r\n\t\t/**\r\n\t\t * The data object contains all saved data. Where they key of the object is the url and the value\r\n\t\t * is the data cached.\r\n\t\t * \r\n\t\t * @param data\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tdata: {},\r\n\t\r\n\t\t/**\r\n\t\t * The get method will access the data object and grab the cached data for that url. Undefined will\r\n\t\t * be returned if nothing is saved in the cache for that url.\r\n\t\t * \r\n\t\t * @method get\r\n\t\t * @param  {String} url This is the url for querying the cached value\r\n\t\t * @return {Object} Data was cached or undefined if no data was cached for the url\r\n\t\t */\r\n\t\tget: function( url ) {\r\n\t\r\n\t\t\treturn this.data[ url ];\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Call this function to check if there is cached content for the url passed in.\r\n\t\t * \r\n\t\t * @method hasFile\r\n\t\t * @param  {String} url This is the url for querying the cached value\r\n\t\t * @return {Boolean} The return value will be true if the LoaderCache has a file and false if it doesn't\r\n\t\t */\r\n\t\thasFile: function( url ) {\r\n\t\r\n\t\t\treturn this.data[ url ] !== undefined;\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Use this function to add an item to the cache. \r\n\t\t * \r\n\t\t * @param {String} url This is the url to the cached item\r\n\t\t * @param {Object} data The data for the cached item at the url passed in\r\n\t\t */\r\n\t\tadd: function( url, data ) {\r\n\t\r\n\t\t\treturn this.data[ url ] = data; \r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Use this function to remove an item from the cache\r\n\t\t * \r\n\t\t * @param  {String} url This is the url to the cached item to remove\r\n\t\t * @return {Boolean} True will be returned if an item was removed from the cache and false if it wasnt\r\n\t\t */\r\n\t\tremove: function( url ) {\r\n\t\r\n\t\t\tvar hadItem = data[ url ] !== undefined;\r\n\t\r\n\t\t\tthis.data[ url ] = undefined;\r\n\t\r\n\t\t\treturn hadItem;\r\n\t\t}\r\n\t};\r\n\t\r\n\tmodule.exports = LoaderCache;\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * This module will contain everything related to preloading.\r\n\t * \r\n\t * @module preloader\r\n\t */\r\n\tvar Class = __webpack_require__(1);\r\n\tvar LoaderBase = __webpack_require__(6);\r\n\tvar UtilArrayBuffer = __webpack_require__(13);\r\n\tvar UtilHTTP = __webpack_require__(7);\r\n\tvar FileMeta = __webpack_require__(12);\r\n\t\r\n\t/**\r\n\t * LoaderImage will load in images. If XHR exists in the browser attempting to load image\r\n\t * then XHR will be used otherwise LoaderImage will use Image instead to load the Image.\r\n\t * \r\n\t * @class LoaderImage\r\n\t * @constructor\r\n\t * @extends {LoaderBase}\r\n\t */\r\n\tvar LoaderImage = new Class( {\r\n\t\r\n\t\tExtends: LoaderBase,\r\n\t\r\n\t\tinitialize: function() {\r\n\t\r\n\t\t\tthis._imageLoaded = false;\r\n\t\r\n\t\t\tthis.parent();\r\n\t\t\tthis.loadType = LoaderBase.typeArraybuffer;\r\n\t\t},\r\n\t\r\n\t\tload: function( url, cacheID ) {\r\n\t\r\n\t\t\t//first we check if we can load with XHR period\r\n\t\t\t//second check that we can load using the method we'd like to which is ArrayBuffer\r\n\t\t\t//third we check that we have all the functions to turn an ArrayBuffer to a DataURI\r\n\t\t\tif( this.canLoadUsingXHR() && \r\n\t\t\t\tthis.canLoadType( this.loadType ) && \r\n\t\t\t\tArrayBuffer && ( window.URL || window.webkitURL || FileReader ) ) {\r\n\t\r\n\t\t\t\tthis.parent( url, cacheID );\r\n\t\t\t//if the above checks dont validate we'll fall back and just use the Image object to preload\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis._createAndLoadImage( url );\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t_dispatchProgress: function( progress ) {\r\n\t\r\n\t\t\tif( this._imageLoaded ) \r\n\t\t\t\tthis.onProgress.dispatch( progress );\r\n\t\t\telse \r\n\t\t\t\tthis.onProgress.dispatch( progress * 0.9999 );\r\n\t\t},\r\n\t\r\n\t\t_dispatchComplete: function() {\r\n\t\r\n\t\t\tif( this._imageLoaded ) \r\n\t\t\t\tthis.onComplete.dispatch();\r\n\t\t},\r\n\t\r\n\t\t_onImageLoadComplete: function() {\r\n\t\r\n\t\t\tthis._imageLoaded = true;\r\n\t\t\tthis._dispatchProgress( 1 );\r\n\t\t\tthis._dispatchComplete();\r\n\t\t},\r\n\t\r\n\t\t_onImageLoadFail: function() {\r\n\t\r\n\t\t\tthis._dispatchError( 'Image failed to load' );\r\n\t\t},\r\n\t\r\n\t\t_parseContent: function() {\r\n\t\r\n\t\t\tvar arrayBuffer = null;\r\n\t\t\tvar blobData = null;\r\n\t\r\n\t\r\n\t\r\n\t\t\tif( !this.fileMeta ) {\r\n\t\r\n\t\t\t\tthis.fileMeta = new FileMeta();\r\n\t\t\t}\r\n\t\r\n\t\t\t//if the loadType was not set then the meta will be incorrect possibly\r\n\t\t\t//so we'll read it from the url\r\n\t\t\tif( !this.loadTypeSet || this.fileMeta.mime === null ) {\r\n\t\r\n\t\t\t\tthis.fileMeta.mime = UtilHTTP.getMimeFromURL( this.url );\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//get the ArrayBuffer\r\n\t\t\tif( this.xhr.response instanceof ArrayBuffer ) {\r\n\t\r\n\t\t\t\tarrayBuffer = this.xhr.response;\r\n\t\t\t//if theres a property mozResponseArrayBuffer  use that\r\n\t\t\t} else if( this.xhr.mozResponseArrayBuffer ) {\r\n\t\r\n\t\t\t\tarrayBuffer = this.xhr.mozResponseArrayBuffer;\r\n\t\t\t//otherwise try converting the string to an ArrayBuffer\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthrow new Error( 'Return type for image load unsupported' );\r\n\t\t\t}\r\n\t\r\n\t\t\tblobData = new Blob( [ arrayBuffer ], { type: this.fileMeta.mime } );\t\t\r\n\t\r\n\t\r\n\t\t\t//We'll convert the blob to an Image using FileReader if it exists\r\n\t\t\tif( window.URL || window.webkitURL ) {\r\n\t\r\n\t\t\t\tthis._createAndLoadImage( ( window.URL || window.webkitURL ).createObjectURL( blobData ) );\r\n\t\t\t} else if( FileReader ) {\r\n\t\r\n\t\t\t\tvar reader = new FileReader();\r\n\t\r\n\t\t\t\treader.onloadend = function() {\r\n\t\r\n\t\t\t\t\tif( window.URL || window.webkitURL ) {\r\n\t\r\n\t\t\t\t\t\t( window.URL || window.webkitURL ).revokeObjectURL( blobData );\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis._createAndLoadImage( reader.result );\r\n\t\t\t\t}.bind( this );\r\n\t\r\n\t\t\t\treader.readAsDataURL( blobData );\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t_createAndLoadImage: function( src ) {\r\n\t\r\n\t\t\tthis.content = new Image();\r\n\t\t\tthis.content.onload = this._onImageLoadComplete.bind( this );\r\n\t\t\tthis.content.onerror = this._onImageLoadFail.bind( this );\r\n\t\t\tthis.content.src = src;\r\n\t\t}\r\n\t});\r\n\t\r\n\tmodule.exports = LoaderImage;\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * This module will contain everything related to preloading.\r\n\t * \r\n\t * @module preloader\r\n\t */\r\n\tvar Class = __webpack_require__(1);\r\n\tvar LoaderBase = __webpack_require__(6);\r\n\t\r\n\t/**\r\n\t * LoaderJSON will load a JSON file and parse it's content. The content property will contain an Object\r\n\t * representation of the JSON data.\r\n\t * \r\n\t * @class LoaderJSON\r\n\t * @constructor\r\n\t * @extends {LoaderBase}\r\n\t */\r\n\tvar LoaderJSON = new Class( {\r\n\t\r\n\t\tExtends: LoaderBase,\r\n\t\r\n\t\tinitialize: function() {\r\n\t\r\n\t\t\tthis.parent();\r\n\t\t\tthis.loadType = LoaderBase.typeJSON;\r\n\t\t}\r\n\t});\r\n\t\r\n\tmodule.exports = LoaderJSON;\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * This module will contain everything related to preloading.\r\n\t * \r\n\t * @module preloader\r\n\t */\r\n\tvar Class = __webpack_require__(1);\r\n\tvar LoaderBase = __webpack_require__(6);\r\n\t\r\n\t/**\r\n\t * LoaderText will load a file and the content saved in this Loader will be a String.\r\n\t * \r\n\t * @class LoaderText\r\n\t * @constructor\r\n\t * @extends {LoaderBase}\r\n\t */\r\n\tvar LoaderText = new Class( {\r\n\t\r\n\t\tExtends: LoaderBase,\r\n\t\t\r\n\t\tinitialize: function() {\r\n\t\r\n\t\t\tthis.parent();\r\n\t\t\tthis.loadType = LoaderBase.typeText;\r\n\t\t}\r\n\t});\r\n\t\r\n\tmodule.exports = LoaderText;\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * This module will contain everything related to preloading.\r\n\t * \r\n\t * @module preloader\r\n\t * \r\n\t */\r\n\t\r\n\tvar Class = __webpack_require__(1);\r\n\tvar Signal = __webpack_require__(15);\r\n\tvar UtilPath = __webpack_require__(14);\r\n\tvar LoaderImage = __webpack_require__(60);\r\n\tvar LoaderText = __webpack_require__(62);\r\n\tvar LoaderJSON = __webpack_require__(61);\r\n\t\r\n\t/**\r\n\t*\r\n\t* Object defining which file extensions use which loaders\r\n\t*\r\n\t* @property LOADERS\r\n\t* @type {Object}\r\n\t*/\t\t  \t\r\n\t\r\n\tvar LOADERS = {\r\n\t\r\n\t\tpng: LoaderImage,\r\n\t\tjpg: LoaderImage,\r\n\t\tgif: LoaderImage,\r\n\t\tjson: LoaderJSON\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t*\r\n\t* Defines default loader\r\n\t*\r\n\t* @property LOADER_DEFAULT\r\n\t* @type {Function}\r\n\t*/\t\r\n\tvar LOADER_DEFAULT = LoaderText;\r\n\t\r\n\t/**\r\n\t*\r\n\t*  \r\n\t* @class Preloader\r\n\t* @constructor\r\n\t* @return {Object} Preloader Preloader object\r\n\t*/\r\n\t\r\n\tvar Preloader = new Class( {\r\n\t\r\n\t\t/**\r\n\t\t*\r\n\t\t* Called on instantiation, sets up properties of Preloader object\r\n\t\t*\r\n\t\t* @method initialize \r\n\t\t*\r\n\t\t*/\r\n\t\r\n\t\tinitialize: function() {\r\n\t\r\n\t\t\tthis.percTotal = 0;\r\n\t\t\tthis.loadIdx = 0;\r\n\t\t\tthis.urls = [];\r\n\t\t\tthis.modifiedURL = {};\r\n\t\t\tthis.loaders = {};\r\n\t\t\tthis.cacheID = {};\r\n\t\t\tthis.percentageOfLoad = {};\r\n\t\t\tthis.progress = 0;\r\n\t\r\n\t\t\t/**\r\n\t\t\t*\r\n\t\t\t* Sends updates on loading progress to other part of application (loading ui)\r\n\t\t\t*\r\n\t\t\t* @property onProgress \r\n\t\t\t* @type Object\r\n\t\t\t*/\r\n\t\t\tthis.onProgress = new Signal();\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t*\r\n\t\t\t* Notifies loading completion to other part of application \r\n\t\t\t*\r\n\t\t\t* @property onComplete \r\n\t\t\t* @type Object\r\n\t\t\t*/\r\n\t\t\tthis.onComplete = new Signal();\r\n\t\t\tthis.urlLoading = null;\r\n\t\r\n\t\t\tthis._onLoadError = this._onLoadError.bind( this );\r\n\t\t\tthis._onLoadProgress = this._onLoadProgress.bind( this );\r\n\t\t\tthis._continueLoadQueue = this._continueLoadQueue.bind( this );\r\n\t\t},\r\n\t\r\n\t\r\n\t\t/**\r\n\t\t*\r\n\t\t* Generic asset loader function - determines loader to be used based on file-extension\r\n\t\t*\r\n\t\t* @method add \r\n\t\t* @param {String} url Base URL of asset\r\n\t\t* @param {Array} [modifiers] list of image pixel-densities to be made available \r\n\t\t* @param {Function} [modifierFunction] optional string manipulation util to format url based on modifiers argument (i.e. if strings, ['@1','@2'])\r\n\t\t*\r\n\t\t*/\r\n\t\tadd: function( url, modifiers, modifierFunction ) {\r\n\t\t\tif(url) {\r\n\t\t\t\tthis.addFromLoaderType( url, this._getLoader( url ), modifiers, modifierFunction );\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t*\r\n\t\t*Load image - uses the LoaderImage loader\r\n\t\t*\r\n\t\t* @method addImage \r\n\t\t* @param {String} url Base URL of asset\r\n\t\t* @param {Array} [modifiers] list of image pixel-densities to be made available \r\n\t\t* @param {Function} [modifierFunction] string manipulation util to format url based on modifiers argument (i.e. if strings, ['@1','@2'])\r\n\t\t*\r\n\t\t*/\r\n\t\taddImage: function( url, modifiers, modifierFunction ) {\r\n\t\r\n\t\t\tthis.addFromLoaderType( url, LoaderImage, modifiers, modifierFunction );\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t*\r\n\t\t*Load JSON - uses the LoaderJSON loader\r\n\t\t*\r\n\t\t* @method addJSON \r\n\t\t* @param {String} url Base URL of asset\r\n\t\t* @param {Array} [modifiers] list of image pixel-densities to be made available \r\n\t\t* @param {Function} [modifierFunction] string manipulation util to format url based on modifiers argument (i.e. if strings, ['@1','@2'])\r\n\t\t*\r\n\t\t*/\r\n\t\taddJSON: function( url, modifiers, modifierFunction ) {\r\n\t\r\n\t\t\tthis.addFromLoaderType( url, LoaderJSON, modifiers, modifierFunction );\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t*\r\n\t\t*Load text- uses the LoaderText loader\r\n\t\t*\r\n\t\t* @method addText \r\n\t\t* @param {String} url Base URL of asset\r\n\t\t* @param {Array} [modifiers] list of image pixel-densities to be made available \r\n\t\t* @param {Function} [modifierFunction] string manipulation util to format url based on modifiers argument (i.e. if strings, ['@1','@2'])\r\n\t\t*\r\n\t\t*/\r\n\t\taddText: function( url, modifiers, modifierFunction ) {\r\n\t\r\n\t\t\tthis.addFromLoaderType( url, LoaderText, modifiers, modifierFunction );\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t*\r\n\t\t* Load asset using custom loader\r\n\t\t*\r\n\t\t* @method addFromLoaderType \r\n\t\t* @param {String} url Base URL of asset\r\n\t\t* @param {Function} loaderType Custom loader function\r\n\t\t* @param {Array} [modifiers] list of image pixel-densities to be made available \r\n\t\t* @param {Function} [modifierFunction] string manipulation util to format url based on modifiers argument (i.e. if strings, ['@1','@2'])\r\n\t\t*\r\n\t\t*/\r\n\t\taddFromLoaderType: function( url, loaderType, modifiers, modifierFunction ) {\r\n\t\r\n\t\t\tif(!this.loaders[ url ]) {\r\n\t\t\t\tthis.loaders[ url ] = new loaderType();\r\n\t\t\t\tthis._setupURL( url, modifiers, modifierFunction );\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t*\r\n\t\t* Sets ID for asset in the cache for future retrieval\r\n\t\t*\r\n\t\t* @method setCacheID \r\n\t\t* @param {String} url Base URL of asset\r\n\t\t* @param {String} cacheID New identifier of asset to be used in cache\r\n\t\t*\r\n\t\t*/\r\n\t\tsetCacheID: function( url, cacheID ) {\r\n\t\r\n\t\t\tthis.cacheID[ url ] = cacheID;\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t*\r\n\t\t* Sets percentage of total load for a given asset\r\n\t\t*\r\n\t\t* @method setPercentage \r\n\t\t* @param {String} url Base URL of asset\r\n\t\t* @param {Number} percentageOfLoad Number <= 1 representing percentage of total load\r\n\t\t*\r\n\t\t*/\r\n\t\tsetPercentage: function( url, percentageOfLoad ) {\r\n\t\r\n\t\t\tthis.percentageOfLoad[ url ] = percentageOfLoad;\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t*\r\n\t\t* Begins loading process\r\n\t\t*\r\n\t\t* @method load \r\n\t\t*\r\n\t\t*/\r\n\t\tload: function() {\r\n\t\r\n\t\t\tif( this.urlLoading === null ) {\r\n\t\r\n\t\t\t\tthis._setupPercentages();\r\n\t\t\t\tthis._continueLoadQueue();\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t*\r\n\t\t* Stops loading process\r\n\t\t*\r\n\t\t* @method stopLoad \r\n\t\t*\r\n\t\t*/\r\n\t\tstopLoad: function() {\r\n\t\r\n\t\t\tif( this.urlLoading !== null ) {\r\n\t\r\n\t\t\t\tfor( var i = 0, len = this.urls.length; i < len; i++ ) {\r\n\t\r\n\t\t\t\t\tthis.loaders[ this.urls[ i ] ].stopLoad();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t*\r\n\t\t* Retrieves loaded asset from loader \r\n\t\t*\r\n\t\t* @method getContent \r\n\t\t* @param {String} url Base URL of asset\r\n\t\t* @return asset instance\r\n\t\t*/\r\n\t\tgetContent: function( url ) {\r\n\t\r\n\t\t\treturn this.loaders[ url ] && this.loaders[ url ].content;\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t*\r\n\t\t* Stores base url, modifies it given the various pixel-density modifiers and stores the modified version as well\r\n\t\t*\r\n\t\t* @method _setupURL \r\n\t\t* @param {String} url Base URL of asset\r\n\t\t* @param {Array} [modifiers] list of image pixel-densities to be made available \r\n\t\t* @param {Function} [modifierFunction] string manipulation util to format url based on modifiers argument (i.e. if strings, ['@1','@2'])\r\n\t\t*/\r\n\t\t_setupURL: function( url, modifiers, modifierFunction ) {\r\n\t\r\n\t\t\tthis.urls.push( url );\r\n\t\t\t\r\n\t\t\t//if we have a modifier function use it\r\n\t\t\tif( modifierFunction ) {\r\n\t\r\n\t\t\t\tthis.modifiedURL[ url ] = modifierFunction( url, modifiers );\r\n\t\t\t//if we don't have a modifier function but we have modifiers use those instead (expect it to be dpi)\r\n\t\t\t} else if( modifiers ) {\r\n\t\r\n\t\t\t\tthis.modifiedURL[ url ] = UtilPath.getURLForDensity( url, modifiers );\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.modifiedURL[ url ] = url;\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t*\r\n\t\t* Loops through stated percentages of all assets and standardizes them\r\n\t\t*\r\n\t\t* @method _setupPercentages \r\n\t\t*/\r\n\t\t_setupPercentages: function() {\r\n\t\r\n\t\t\tvar percTotal = 0;\r\n\t\t\tvar percScale = 1;\r\n\t\t\tvar numWPerc = 0;\r\n\t\t\tvar numWOPerc = 0;\r\n\t\t\tvar oneFilePerc = 1 / this.urls.length;\r\n\t\r\n\t\t\tfor( var i = 0, len = this.urls.length; i < len; i++ ) {\r\n\t\r\n\t\t\t\tif( this.percentageOfLoad[ this.urls[ i ] ] ) {\r\n\t\r\n\t\t\t\t\tpercTotal += this.percentageOfLoad[ this.urls[ i ] ];\r\n\t\t\t\t\tnumWPerc++;\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tnumWOPerc++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tif( numWOPerc > 0 ) {\r\n\t\r\n\t\t\t\tif( percTotal > 1 ) {\r\n\t\r\n\t\t\t\t\tpercScale = 1 / percTotal;\t\r\n\t\t\t\t\tpercTotal *= percScale;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar percRemaining = 1 - percTotal;\r\n\t\t\t\toneFilePerc = ( 1 - percTotal ) / numWOPerc;\r\n\t\r\n\t\t\t\tfor( var i = 0, len = this.urls.length; i < len; i++ ) {\r\n\t\r\n\t\t\t\t\tif( this.percentageOfLoad[ this.urls[ i ] ] ) {\r\n\t\r\n\t\t\t\t\t\tthis.percentageOfLoad[ this.urls[ i ] ] *= percScale;\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tthis.percentageOfLoad[ this.urls[ i ] ] = oneFilePerc;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t*\r\n\t\t* With every call, assets are successively loaded  and percentLoaded is updated\r\n\t\t*\r\n\t\t* @method _continueLoadQueue \r\n\t\t*/\r\n\t\t_continueLoadQueue: function() {\r\n\t\r\n\t\t\tif( this.loadIdx < this.urls.length ) {\r\n\t\r\n\t\t\t\t//if we've just finished loading a file\r\n\t\t\t\tif( this.urlLoading !== null ) {\r\n\t\r\n\t\t\t\t\tthis.percTotal += this.percentageOfLoad[ this.urlLoading ];\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.urlLoading = this.urls[ this.loadIdx ];\r\n\t\t\t\tvar loader = this.loaders[ this.urlLoading ];\r\n\t\t\t\tvar cacheID = this.cacheID[ this.urlLoading ];\r\n\t\r\n\t\t\t\tthis.loadIdx++;\r\n\t\t\t\tloader.onProgress.add( this._onLoadProgress );\r\n\t\t\t\tloader.onError.addOnce( this._onLoadError );\r\n\t\t\t\tloader.onComplete.addOnce( this._continueLoadQueue );\r\n\t\t\t\tloader.load( this.modifiedURL[ this.urlLoading ], cacheID );\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.onComplete.dispatch();\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t*\r\n\t\t* Logs error, updates progress, and continues the load\r\n\t\t*\t\r\n\t\t*\r\n\t\t* @method _onLoadError \r\n\t\t* @param {String} error Error message/type\r\n\t\t*/\r\n\t\t_onLoadError: function( error ) {\r\n\t\r\n\t\t\tconsole.warn( 'Couldn\\'t load ' + this.urlLoading + ' received the error: ' + error );\r\n\t\r\n\t\t\tvar curPerc = this.percentageOfLoad[ this.urlLoading ];\r\n\t\r\n\t\t\tthis.onProgress.dispatch( this.percTotal + curPerc, this.urlLoading );\t\r\n\t\r\n\t\t\tthis._continueLoadQueue();\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t*\r\n\t\t* Calculates progress of currently loading asset and dispatches total load progress\r\n\t\t*\t\r\n\t\t*\r\n\t\t* @method _onLoadProgress \r\n\t\t* @param {Number} progress Progress of currently loading asset\r\n\t\t*/\r\n\t\t_onLoadProgress: function( progress ) {\r\n\t\r\n\t\t\tvar curPerc = this.percentageOfLoad[ this.urlLoading ] * progress;\r\n\t\r\n\t\t\tthis.onProgress.dispatch( this.percTotal + curPerc, this.urlLoading );\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t*\r\n\t\t* Retrieves the appropriate loader util given the asset file-type \r\n\t\t*\t\r\n\t\t*\r\n\t\t* @method _getLoader \r\n\t\t* @param {String} url Base URL of asset\r\n\t\t@return {Function} Chosen loader util function based on filetype/extension\r\n\t\t*/\r\n\t\t_getLoader: function( url ) {\r\n\t\r\n\t\t\tvar regexExtention = /\\.(\\w+)$/;\r\n\t\t\tvar extensionValue = regexExtention.exec( url );\r\n\t\t\tvar extension = extensionValue && extensionValue[ 1 ];\r\n\t\t\tvar loader = null;\r\n\t\r\n\t\t\tif( extension ) {\r\n\t\r\n\t\t\t\textension = extension.toLowerCase();\r\n\t\r\n\t\t\t\tloader = LOADERS[ extension ];\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\tif( !loader ) {\r\n\t\r\n\t\t\t\tloader = LOADER_DEFAULT;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn loader;\r\n\t\t}\r\n\t});\r\n\t\r\n\tmodule.exports = Preloader;\n\n/***/ },\n/* 64 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `toNoCase`.\n\t */\n\t\n\tmodule.exports = toNoCase;\n\t\n\t\n\t/**\n\t * Test whether a string is camel-case.\n\t */\n\t\n\tvar hasSpace = /\\s/;\n\tvar hasCamel = /[a-z][A-Z]/;\n\tvar hasSeparator = /[\\W_]/;\n\t\n\t\n\t/**\n\t * Remove any starting case from a `string`, like camel or snake, but keep\n\t * spaces and punctuation that may be important otherwise.\n\t *\n\t * @param {String} string\n\t * @return {String}\n\t */\n\t\n\tfunction toNoCase (string) {\n\t  if (hasSpace.test(string)) return string.toLowerCase();\n\t\n\t  if (hasSeparator.test(string)) string = unseparate(string);\n\t  if (hasCamel.test(string)) string = uncamelize(string);\n\t  return string.toLowerCase();\n\t}\n\t\n\t\n\t/**\n\t * Separator splitter.\n\t */\n\t\n\tvar separatorSplitter = /[\\W_]+(.|$)/g;\n\t\n\t\n\t/**\n\t * Un-separate a `string`.\n\t *\n\t * @param {String} string\n\t * @return {String}\n\t */\n\t\n\tfunction unseparate (string) {\n\t  return string.replace(separatorSplitter, function (m, next) {\n\t    return next ? ' ' + next : '';\n\t  });\n\t}\n\t\n\t\n\t/**\n\t * Camelcase splitter.\n\t */\n\t\n\tvar camelSplitter = /(.)([A-Z]+)/g;\n\t\n\t\n\t/**\n\t * Un-camelcase a `string`.\n\t *\n\t * @param {String} string\n\t * @return {String}\n\t */\n\t\n\tfunction uncamelize (string) {\n\t  return string.replace(camelSplitter, function (m, previous, uppers) {\n\t    return previous + ' ' + uppers.toLowerCase().split('').join(' ');\n\t  });\n\t}\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tvar clean = __webpack_require__(64);\n\t\n\t\n\t/**\n\t * Expose `toSpaceCase`.\n\t */\n\t\n\tmodule.exports = toSpaceCase;\n\t\n\t\n\t/**\n\t * Convert a `string` to space case.\n\t *\n\t * @param {String} string\n\t * @return {String}\n\t */\n\t\n\t\n\tfunction toSpaceCase (string) {\n\t  return clean(string).replace(/[\\W_]+(.|$)/g, function (matches, match) {\n\t    return match ? ' ' + match : '';\n\t  });\n\t}\n\n/***/ },\n/* 66 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=app><section-preloader v-if=!isHidden></section-preloader><section-about></section-about><router-view class=component-sections v-if=isLoaded></router-view><div v-el:background class=component-background v-show=isLoaded></div></div>\";\n\n/***/ },\n/* 67 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=section-about><aside v-el:content class=content v-show=isOpen transition=section-about-content><div v-el:background class=background></div><div v-el=container class=container><a v-el:close-button @click=close class=close-button v-show=isOpen transition=section-about-close-button>Close <span class=line></span></a></div></aside><a v-el:open-button v-show=!isOpen class=open-button @click=open transition=section-about-open-button><span class=line></span> About</a></div>\";\n\n/***/ },\n/* 68 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<section class=section-preloader><div v-el:loading class=loading><div v-el:loading-progress class=loading-progress></div></div><div v-el:background-top class=background-top></div><div v-el:background-bottom class=background-bottom></div></section>\";\n\n/***/ },\n/* 69 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<section class=section-project></section>\";\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(48)\n\t__vue_script__ = __webpack_require__(21)\n\t__vue_template__ = __webpack_require__(66)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\n\tif (false) {(function () {  module.hot.accept()\n\t  var hotAPI = require(\"vue-hot-reload-api\")\n\t  hotAPI.install(require(\"vue\"), true)\n\t  if (!hotAPI.compatible) return\n\t  var id = \"/Users/jmsaulnier/Documents/_Pro/Project/Github/jmsaulnier/jmsaulnier.github.com/src/App.vue\"\n\t  if (!module.hot.data) {\n\t    hotAPI.createRecord(id, module.exports)\n\t  } else {\n\t    hotAPI.update(id, module.exports, __vue_template__)\n\t  }\n\t})()}\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(49)\n\t__vue_script__ = __webpack_require__(22)\n\t__vue_template__ = __webpack_require__(67)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\n\tif (false) {(function () {  module.hot.accept()\n\t  var hotAPI = require(\"vue-hot-reload-api\")\n\t  hotAPI.install(require(\"vue\"), true)\n\t  if (!hotAPI.compatible) return\n\t  var id = \"/Users/jmsaulnier/Documents/_Pro/Project/Github/jmsaulnier/jmsaulnier.github.com/src/display/sections/About.vue\"\n\t  if (!module.hot.data) {\n\t    hotAPI.createRecord(id, module.exports)\n\t  } else {\n\t    hotAPI.update(id, module.exports, __vue_template__)\n\t  }\n\t})()}\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(50)\n\t__vue_script__ = __webpack_require__(23)\n\t__vue_template__ = __webpack_require__(68)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\n\tif (false) {(function () {  module.hot.accept()\n\t  var hotAPI = require(\"vue-hot-reload-api\")\n\t  hotAPI.install(require(\"vue\"), true)\n\t  if (!hotAPI.compatible) return\n\t  var id = \"/Users/jmsaulnier/Documents/_Pro/Project/Github/jmsaulnier/jmsaulnier.github.com/src/display/sections/Preloader.vue\"\n\t  if (!module.hot.data) {\n\t    hotAPI.createRecord(id, module.exports)\n\t  } else {\n\t    hotAPI.update(id, module.exports, __vue_template__)\n\t  }\n\t})()}\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(51)\n\t__vue_script__ = __webpack_require__(24)\n\t__vue_template__ = __webpack_require__(69)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\n\tif (false) {(function () {  module.hot.accept()\n\t  var hotAPI = require(\"vue-hot-reload-api\")\n\t  hotAPI.install(require(\"vue\"), true)\n\t  if (!hotAPI.compatible) return\n\t  var id = \"/Users/jmsaulnier/Documents/_Pro/Project/Github/jmsaulnier/jmsaulnier.github.com/src/display/sections/Project.vue\"\n\t  if (!module.hot.data) {\n\t    hotAPI.createRecord(id, module.exports)\n\t  } else {\n\t    hotAPI.update(id, module.exports, __vue_template__)\n\t  }\n\t})()}\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.9\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      return params[this.name] || \":\" + this.name;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      return params[this.name] || \":\" + this.name;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return decodeURIComponent(part);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path) {\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        queryParams = this.parseQueryString(queryString);\n\t      }\n\t\n\t      path = decodeURI(path);\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  RouteRecognizer.VERSION = '0.1.9';\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn(msg) {\n\t    /* istanbul ignore next */\n\t    if (window.console) {\n\t      console.warn('[vue-router] ' + msg);\n\t      if (!exports$1.Vue || exports$1.Vue.config.debug) {\n\t        console.warn(new Error('warning stack trace:').stack);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root) {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = decodeURI(location.pathname + location.search);\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '');\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(decodeURI(path.replace(/^#!?/, '') + query));\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      // fix 1.0.0-alpha.3 compat\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // handle keep-alive.\n\t      // cache the child view on the kept-alive child vm.\n\t      if (view.keepAlive && view.childVM && view.childView) {\n\t        view.childVM._keepAliveRouterView = view.childView;\n\t      }\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, insert, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        insert();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function (data, onError) {\n\t      // merge data from multiple data hooks\n\t      if (Array.isArray(data) && data._needMerge) {\n\t        data = data.reduce(function (res, obj) {\n\t          if (isPlainObject(obj)) {\n\t            Object.keys(obj).forEach(function (key) {\n\t              res[key] = obj[key];\n\t            });\n\t          }\n\t          return res;\n\t        }, Object.create(null));\n\t      }\n\t      // handle promise sugar syntax\n\t      var promises = [];\n\t      if (isPlainObject(data)) {\n\t        Object.keys(data).forEach(function (key) {\n\t          var val = data[key];\n\t          if (isPromise(val)) {\n\t            promises.push(val.then(function (resolvedVal) {\n\t              component.$set(key, resolvedVal);\n\t            }));\n\t          } else {\n\t            component.$set(key, val);\n\t          }\n\t        });\n\t      }\n\t      if (!promises.length) {\n\t        component.$loadingRouteData = false;\n\t        component.$emit('route-data-loaded', component);\n\t        cb && cb();\n\t      } else {\n\t        promises[0].constructor.all(promises).then(function (_) {\n\t          component.$loadingRouteData = false;\n\t          component.$emit('route-data-loaded', component);\n\t          cb && cb();\n\t        }, onError);\n\t      }\n\t    }, {\n\t      cleanup: cleanup,\n\t      expectData: true\n\t    });\n\t  }\n\t\n\t  function isPlainObject(obj) {\n\t    return Object.prototype.toString.call(obj) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} expectData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$expectData = _ref.expectData;\n\t      var expectData = _ref$expectData === undefined ? false : _ref$expectData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        // cleanup indicates an after-activation hook,\n\t        // so instead of aborting we just let the transition\n\t        // finish.\n\t        cleanup ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next(data) {\n\t        if (nextCalled) {\n\t          warn('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb(data, onError);\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      // handle boolean/promise return values\n\t      var resIsPromise = isPromise(res);\n\t      if (expectBoolean) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (resIsPromise) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onError);\n\t        } else if (!hook.length) {\n\t          next(res);\n\t        }\n\t      } else if (resIsPromise) {\n\t        res.then(next, onError);\n\t      } else if (expectData && isPlainOjbect(res) || !hook.length) {\n\t        next(res);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        (function () {\n\t          var res = [];\n\t          res._needMerge = true;\n\t          var onError = undefined;\n\t          _this.runQueue(hooks, function (hook, _, next) {\n\t            if (!_this.aborted) {\n\t              _this.callHook(hook, context, function (r, onError) {\n\t                if (r) res.push(r);\n\t                onError = onError;\n\t                next();\n\t              }, options);\n\t            }\n\t          }, function () {\n\t            cb(res, onError);\n\t          });\n\t        })();\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    this.router = router;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed) {\n\t        if (this.$router) {\n\t          this.$router._children.$remove(this);\n\t        }\n\t        destroy.apply(this, arguments);\n\t      }\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 1001,\n\t      bind: function bind() {\n\t        this.el.__v_link_active = true;\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: 1000,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.el.addEventListener('click', _bind(this.onClick, this));\n\t        // check if active classes should be applied to a different element\n\t        this.activeEl = this.el;\n\t        var parent = this.el.parentNode;\n\t        while (parent) {\n\t          if (parent.__v_link_active) {\n\t            this.activeEl = parent;\n\t            break;\n\t          }\n\t          parent = parent.parentNode;\n\t        }\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            this.router.go({\n\t              path: el.pathname,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router._stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router._stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        this.updateClasses(route.path);\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path) {\n\t        var el = this.activeEl;\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass !== activeClass) {\n\t          removeClass(el, this.prevActiveClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            addClass(el, activeClass);\n\t          } else {\n\t            removeClass(el, activeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            addClass(el, activeClass);\n\t          } else {\n\t            removeClass(el, activeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // feature detection\n\t      this._hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t      this._history = this._hasPushState && history;\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      var self = this;\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          self._match(path, state, anchor);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this._stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this2 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this2;\n\t          _this2.app = new _this2._appConstructor({\n\t            el: _this2._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this2._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this2._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype._stringifyPath = function _stringifyPath(path) {\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          if (path.query) {\n\t            params.queryParams = path.query;\n\t          }\n\t          return this._recognizer.generate(path.name, params);\n\t        } else if (path.path) {\n\t          var fullPath = path.path;\n\t          if (path.query) {\n\t            var query = this._recognizer.generateQueryString(path.query);\n\t            if (fullPath.indexOf('?') > -1) {\n\t              fullPath += '&' + query.slice(1);\n\t            } else {\n\t              fullPath += query;\n\t            }\n\t          }\n\t          return fullPath;\n\t        } else {\n\t          return '';\n\t        }\n\t      } else {\n\t        return path ? path + '' : '';\n\t      }\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n/* 75 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  onInit: function onInit(state) {\n\t    // TODO\n\t  },\n\t  onMutation: function onMutation(mutation, state) {\n\t    // TODO\n\t  }\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 76 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = createLogger;\n\t// Credits: borrowed code from fcomb/redux-logger\n\t\n\tfunction createLogger() {\n\t  var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t  var _ref$collapsed = _ref.collapsed;\n\t  var collapsed = _ref$collapsed === undefined ? true : _ref$collapsed;\n\t  var _ref$transformer = _ref.transformer;\n\t  var transformer = _ref$transformer === undefined ? function (state) {\n\t    return state;\n\t  } : _ref$transformer;\n\t  var _ref$mutationTransfor = _ref.mutationTransformer;\n\t  var mutationTransformer = _ref$mutationTransfor === undefined ? function (mut) {\n\t    return mut;\n\t  } : _ref$mutationTransfor;\n\t\n\t  return {\n\t    snapshot: true,\n\t    onMutation: function onMutation(mutation, nextState, prevState) {\n\t      if (typeof console === 'undefined') {\n\t        return;\n\t      }\n\t      var time = new Date();\n\t      var formattedTime = ' @ ' + pad(time.getHours(), 2) + ':' + pad(time.getMinutes(), 2) + ':' + pad(time.getSeconds(), 2) + '.' + pad(time.getMilliseconds(), 3);\n\t      var formattedMutation = mutationTransformer(mutation);\n\t      var message = 'mutation ' + mutation.type + formattedTime;\n\t      var startMessage = collapsed ? console.groupCollapsed : console.group;\n\t\n\t      // render\n\t      try {\n\t        startMessage.call(console, message);\n\t      } catch (e) {\n\t        console.log(message);\n\t      }\n\t\n\t      console.log('%c prev state', 'color: #9E9E9E; font-weight: bold', prevState);\n\t      console.log('%c mutation', 'color: #03A9F4; font-weight: bold', formattedMutation);\n\t      console.log('%c next state', 'color: #4CAF50; font-weight: bold', nextState);\n\t\n\t      try {\n\t        console.groupEnd();\n\t      } catch (e) {\n\t        console.log('—— log end ——');\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tfunction repeat(str, times) {\n\t  return new Array(times + 1).join(str);\n\t}\n\t\n\tfunction pad(num, maxLength) {\n\t  return repeat('0', maxLength - num.toString().length) + num;\n\t}\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 77 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.createAction = createAction;\n\texports.mergeObjects = mergeObjects;\n\texports.deepClone = deepClone;\n\t\n\tfunction _typeof(obj) { return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }\n\t\n\t/**\n\t * Create a actual callable action function.\n\t *\n\t * @param {String|Function} action\n\t * @param {Vuex} store\n\t * @return {Function} [description]\n\t */\n\t\n\tfunction createAction(action, store) {\n\t  if (typeof action === 'string') {\n\t    // simple action string shorthand\n\t    return function () {\n\t      for (var _len = arguments.length, payload = Array(_len), _key = 0; _key < _len; _key++) {\n\t        payload[_key] = arguments[_key];\n\t      }\n\t\n\t      return store.dispatch.apply(store, [action].concat(payload));\n\t    };\n\t  } else if (typeof action === 'function') {\n\t    // normal action\n\t    return function () {\n\t      for (var _len2 = arguments.length, payload = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t        payload[_key2] = arguments[_key2];\n\t      }\n\t\n\t      return action.apply(undefined, [store].concat(payload));\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Merge an array of objects into one.\n\t *\n\t * @param {Array<Object>} arr\n\t * @param {Boolean} allowDuplicate\n\t * @return {Object}\n\t */\n\t\n\tfunction mergeObjects(arr, allowDuplicate) {\n\t  return arr.reduce(function (prev, obj) {\n\t    Object.keys(obj).forEach(function (key) {\n\t      var existing = prev[key];\n\t      if (existing) {\n\t        // allow multiple mutation objects to contain duplicate\n\t        // handlers for the same mutation type\n\t        if (allowDuplicate) {\n\t          if (Array.isArray(existing)) {\n\t            existing.push(obj[key]);\n\t          } else {\n\t            prev[key] = [prev[key], obj[key]];\n\t          }\n\t        } else {\n\t          console.warn('[vuex] Duplicate action: ' + key);\n\t        }\n\t      } else {\n\t        prev[key] = obj[key];\n\t      }\n\t    });\n\t    return prev;\n\t  }, {});\n\t}\n\t\n\t/**\n\t * Deep clone an object. Faster than JSON.parse(JSON.stringify()).\n\t *\n\t * @param {*} obj\n\t * @return {*}\n\t */\n\t\n\tfunction deepClone(obj) {\n\t  if (Array.isArray(obj)) {\n\t    return obj.map(deepClone);\n\t  } else if (obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {\n\t    var cloned = {};\n\t    var keys = Object.keys(obj);\n\t    for (var i = 0, l = keys.length; i < l; i++) {\n\t      var key = keys[i];\n\t      cloned[key] = deepClone(obj[key]);\n\t    }\n\t    return cloned;\n\t  } else {\n\t    return obj;\n\t  }\n\t}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.83a688d.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 16debb486fb1132e7adb\n **/","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport Vuex from 'vuex'\nimport { configRouter as ConfigRouter } from './core/routes'\n\nVue.use(VueRouter)\nVue.use(Vuex)\n\nconst router = new VueRouter({\n  history: false,\n  saveScrollPosition: true\n})\n\nConfigRouter(router)\n\nconst App = Vue.extend(require('./App.vue'))\nrouter.start(App, '#app')\n\n// just for debugging\nwindow.router = router\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","var BaseClass = require( './baseClass' );\n\nvar Class = function( descriptor ) {\n\n\tvar rVal = undefined;\n\n\tif ( descriptor === undefined ) {\n\n\t\tdescriptor = {};\n\t}\n\n\n\tif( descriptor.initialize ) {\n\n\t\trVal = descriptor.initialize;\n\t\tdelete descriptor.initialize;\n\t} else {\n\n\t\trVal = function() { \n\n\t\t\tArray.prototype.splice.apply( arguments, [ 0, 0, this ] );\n\n\t\t\tClass.parent.apply( undefined, arguments );\n\t\t};\n\t}\n\n\tif( descriptor.Extends !== undefined ) {\n\n\t\tdescriptor.Extends.$$isConstructor = true;\n\n\t\trVal.prototype = Object.create( descriptor.Extends.prototype );\n\t\t// this will be used to call the parent constructor\n\t\trVal.$$parentConstructor = descriptor.Extends;\n\t\tdelete descriptor.Extends;\n\t} else {\n\n\t\trVal.prototype = Object.create( BaseClass );\n\t\trVal.$$parentConstructor = function() {};\n\t}\n\n\trVal.prototype.$$getters = {};\n\trVal.prototype.$$setters = {};\n\n\tfor( var i in descriptor ) {\n\t\tif( typeof descriptor[ i ] == 'function' ) {\n\t\t\tdescriptor[ i ].$$name = i;\n\t\t\tdescriptor[ i ].$$owner = rVal.prototype;\n\n\t\t\trVal.prototype[ i ] = descriptor[ i ];\n\t\t} else if( descriptor[ i ] && typeof descriptor[ i ] == 'object' && ( descriptor[ i ].get || descriptor[ i ].set ) ) {\n\t\t\tObject.defineProperty( rVal.prototype, i , descriptor[ i ] );\n\n\t\t\tif( descriptor[ i ].get ) {\n\t\t\t\trVal.prototype.$$getters[ i ] = descriptor[ i ].get;\n\t\t\t\tdescriptor[ i ].get.$$name = i;\n\t\t\t\tdescriptor[ i ].get.$$owner = rVal.prototype;\n\t\t\t}\n\n\t\t\tif( descriptor[ i ].set ) {\n\t\t\t\trVal.prototype.$$setters[ i ] = descriptor[ i ].set;\n\t\t\t\tdescriptor[ i ].set.$$name = i;\n\t\t\t\tdescriptor[ i ].set.$$owner = rVal.prototype;\t\n\t\t\t}\n\t\t} else {\n\t\t\trVal.prototype[ i ] = descriptor[ i ];\n\t\t}\n\t}\n\n\t// this will be used to check if the caller function is the consructor\n\trVal.$$isConstructor = true;\n\n\t// now we'll check interfaces\n\tfor( var i = 1; i < arguments.length; i++ ) {\n\t\targuments[ i ].compare( rVal );\n\t}\n\n\treturn rVal;\n};\t\n\nClass.parent = function( scope ) {\n\n\tvar caller = Class.parent.caller;\n\n\targuments = Array.prototype.slice.apply( arguments, [ 1 ] )\n\n\t// if the current function calling is the constructor\n\tif( caller.$$isConstructor ) {\n\t\tvar parentFunction = caller.$$parentConstructor;\n\t} else {\n\t\tif( caller.$$name ) {\n\t\t\tvar callerName = caller.$$name;\n\t\t\tvar isGetter = caller.$$owner.$$getters[ callerName ];\n\t\t\tvar isSetter = caller.$$owner.$$setters[ callerName ];\n\n\t\t\tif( arguments.length == 1 && isSetter ) {\n\t\t\t\tvar parentFunction = Object.getPrototypeOf( caller.$$owner ).$$setters[ callerName ];\n\n\t\t\t\tif( parentFunction === undefined ) {\n\t\t\t\t\tthrow 'No setter defined in parent';\n\t\t\t\t}\n\t\t\t} else if( arguments.length == 0 && isGetter ) {\n\t\t\t\tvar parentFunction = Object.getPrototypeOf( caller.$$owner ).$$getters[ callerName ];\n\n\t\t\t\tif( parentFunction === undefined ) {\n\t\t\t\t\tthrow 'No getter defined in parent';\n\t\t\t\t}\n\t\t\t} else if( isSetter || isGetter ) {\n\t\t\t\tthrow 'Incorrect amount of arguments sent to getter or setter';\n\t\t\t} else {\n\t\t\t\tvar parentFunction = Object.getPrototypeOf( caller.$$owner )[ callerName ];\t\n\n\t\t\t\tif( parentFunction === undefined ) {\n\t\t\t\t\tthrow 'No parent function defined for ' + callerName;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow 'You cannot call parent here';\n\t\t}\n\t}\n\n\treturn parentFunction.apply( scope, arguments );\n};\n\nmodule.exports = Class;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/js-oop/js/Class.js\n ** module id = 1\n ** module chunks = 0\n **/","'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createLogger = exports.Store = undefined;\n\nvar _util = require('./util');\n\nvar _devtool = require('./middlewares/devtool');\n\nvar _devtool2 = _interopRequireDefault(_devtool);\n\nvar _logger = require('./middlewares/logger');\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Vue = undefined;\n\nvar Store = exports.Store = (function () {\n\n  /**\n   * @param {Object} options\n   *        - {Object} state\n   *        - {Object} actions\n   *        - {Object} mutations\n   *        - {Array} middlewares\n   *        - {Boolean} strict\n   */\n\n  function Store() {\n    var _this = this;\n\n    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    var _ref$state = _ref.state;\n    var state = _ref$state === undefined ? {} : _ref$state;\n    var _ref$actions = _ref.actions;\n    var actions = _ref$actions === undefined ? {} : _ref$actions;\n    var _ref$mutations = _ref.mutations;\n    var mutations = _ref$mutations === undefined ? {} : _ref$mutations;\n    var _ref$middlewares = _ref.middlewares;\n    var middlewares = _ref$middlewares === undefined ? [] : _ref$middlewares;\n    var _ref$strict = _ref.strict;\n    var strict = _ref$strict === undefined ? false : _ref$strict;\n\n    _classCallCheck(this, Store);\n\n    // bind dispatch to self\n    var dispatch = this.dispatch;\n    this.dispatch = function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      dispatch.apply(_this, args);\n    };\n    // use a Vue instance to store the state tree\n    this._vm = new Vue({\n      data: state\n    });\n    this._dispatching = false;\n    this.actions = Object.create(null);\n    this._setupActions(actions);\n    this._setupMutations(mutations);\n    this._setupMiddlewares(middlewares, state);\n    // add extra warnings in strict mode\n    if (strict) {\n      this._setupMutationCheck();\n    }\n  }\n\n  /**\n   * Getter for the entire state tree.\n   * Read only.\n   *\n   * @return {Object}\n   */\n\n  _createClass(Store, [{\n    key: 'dispatch',\n\n    /**\n     * Dispatch an action.\n     *\n     * @param {String} type\n     */\n\n    value: function dispatch(type) {\n      for (var _len2 = arguments.length, payload = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        payload[_key2 - 1] = arguments[_key2];\n      }\n\n      var mutation = this._mutations[type];\n      var prevSnapshot = this._prevSnapshot;\n      var state = this.state;\n      var snapshot = undefined,\n          clonedPayload = undefined;\n      if (mutation) {\n        this._dispatching = true;\n        // apply the mutation\n        if (Array.isArray(mutation)) {\n          mutation.forEach(function (m) {\n            return m.apply(undefined, [state].concat(payload));\n          });\n        } else {\n          mutation.apply(undefined, [state].concat(payload));\n        }\n        this._dispatching = false;\n        // invoke middlewares\n        if (this._needSnapshots) {\n          snapshot = this._prevSnapshot = (0, _util.deepClone)(state);\n          clonedPayload = (0, _util.deepClone)(payload);\n        }\n        this._middlewares.forEach(function (m) {\n          if (m.onMutation) {\n            if (m.snapshot) {\n              m.onMutation({ type: type, payload: clonedPayload }, snapshot, prevSnapshot);\n            } else {\n              m.onMutation({ type: type, payload: payload }, state);\n            }\n          }\n        });\n      } else {\n        console.warn('[vuex] Unknown mutation: ' + type);\n      }\n    }\n\n    /**\n     * Hot update actions and mutations.\n     *\n     * @param {Object} options\n     *        - {Object} [actions]\n     *        - {Object} [mutations]\n     */\n\n  }, {\n    key: 'hotUpdate',\n    value: function hotUpdate() {\n      var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var actions = _ref2.actions;\n      var mutations = _ref2.mutations;\n\n      if (actions) {\n        this._setupActions(actions, true);\n      }\n      if (mutations) {\n        this._setupMutations(mutations);\n      }\n    }\n\n    /**\n     * Setup mutation check: if the vuex instance's state is mutated\n     * outside of a mutation handler, we throw en error. This effectively\n     * enforces all mutations to the state to be trackable and hot-reloadble.\n     * However, this comes at a run time cost since we are doing a deep\n     * watch on the entire state tree, so it is only enalbed with the\n     * strict option is set to true.\n     */\n\n  }, {\n    key: '_setupMutationCheck',\n    value: function _setupMutationCheck() {\n      var _this2 = this;\n\n      // a hack to get the watcher constructor from older versions of Vue\n      // mainly because the public $watch method does not allow sync\n      // watchers.\n      var unwatch = this._vm.$watch('__vuex__', function (a) {\n        return a;\n      });\n      var Watcher = this._vm._watchers[0].constructor;\n      unwatch();\n      new Watcher(this._vm, '$data', function () {\n        if (!_this2._dispatching) {\n          throw new Error('[vuex] Do not mutate vuex store state outside mutation handlers.');\n        }\n      }, { deep: true, sync: true });\n    }\n\n    /**\n     * Set up the callable action functions exposed to components.\n     * This method can be called multiple times for hot updates.\n     * We keep the real action functions in an internal object,\n     * and expose the public object which are just wrapper\n     * functions that point to the real ones. This is so that\n     * the reals ones can be hot reloaded.\n     *\n     * @param {Object} actions\n     * @param {Boolean} [hot]\n     */\n\n  }, {\n    key: '_setupActions',\n    value: function _setupActions(actions, hot) {\n      var _this3 = this;\n\n      this._actions = Object.create(null);\n      actions = Array.isArray(actions) ? (0, _util.mergeObjects)(actions) : actions;\n      Object.keys(actions).forEach(function (name) {\n        _this3._actions[name] = (0, _util.createAction)(actions[name], _this3);\n        if (!_this3.actions[name]) {\n          _this3.actions[name] = function () {\n            var _actions;\n\n            return (_actions = _this3._actions)[name].apply(_actions, arguments);\n          };\n        }\n      });\n      // delete public actions that are no longer present\n      // after a hot reload\n      if (hot) {\n        Object.keys(this.actions).forEach(function (name) {\n          if (!actions[name]) {\n            delete _this3.actions[name];\n          }\n        });\n      }\n    }\n\n    /**\n     * Setup the mutation handlers. Effectively a event listener.\n     * This method can be called multiple times for hot updates.\n     *\n     * @param {Object} mutations\n     */\n\n  }, {\n    key: '_setupMutations',\n    value: function _setupMutations(mutations) {\n      this._mutations = Array.isArray(mutations) ? (0, _util.mergeObjects)(mutations, true) : mutations;\n    }\n\n    /**\n     * Setup the middlewares. The devtools middleware is always\n     * included, since it does nothing if no devtool is detected.\n     *\n     * A middleware can demand the state it receives to be\n     * \"snapshots\", i.e. deep clones of the actual state tree.\n     *\n     * @param {Array} middlewares\n     * @param {Object} state\n     */\n\n  }, {\n    key: '_setupMiddlewares',\n    value: function _setupMiddlewares(middlewares, state) {\n      this._middlewares = [_devtool2.default].concat(middlewares);\n      this._needSnapshots = middlewares.some(function (m) {\n        return m.snapshot;\n      });\n      if (this._needSnapshots) {\n        console.log('[vuex] One or more of your middlewares are taking state snapshots ' + 'for each mutation. Make sure to use them only during development.');\n      }\n      var initialSnapshot = this._prevSnapshot = this._needSnapshots ? (0, _util.deepClone)(state) : null;\n      // call init hooks\n      this._middlewares.forEach(function (m) {\n        if (m.onInit) {\n          m.onInit(m.snapshot ? initialSnapshot : state);\n        }\n      });\n    }\n  }, {\n    key: 'state',\n    get: function get() {\n      return this._vm._data;\n    },\n    set: function set(v) {\n      throw new Error('[vuex] Vuex root state is read only.');\n    }\n  }]);\n\n  return Store;\n})();\n\n// export logger factory\n\nexports.createLogger = _logger2.default;\nexports.default = {\n  Store: Store,\n  createLogger: _logger2.default,\n  install: function install(_Vue) {\n    Vue = _Vue;\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vuex/lib/index.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\nvar Emitter = require('component-emitter');\nvar debounce = require('debounce');\n\nvar resize = module.exports;\n\n// Make resize an event emitter\nEmitter(resize);\n\nresize.debounceDelay = 50;\n\nresize.onGlobalResize = function() {\n  this.width = window.innerWidth;\n  this.height = window.innerHeight;\n  this.halfWidth = 0.5 * this.width;\n  this.halfHeight = 0.5 * this.height;\n\n  this.applyResize();\n  if (this.debounceDelay > 0) {\n    this.debounceResize();\n  } else {\n    this.applyResizeDebounce();\n  }\n};\n\nresize.applyResizeDebounce = function() {\n  this.emit('resizeDebounce');\n};\n\nresize.applyResize = function() {\n  this.emit('resize');\n};\n\nresize.addListener = function(listener, noDebounce) {\n  this.on(noDebounce ? 'resize' : 'resizeDebounce', listener);\n};\n\nresize.removeListener = function(listener) {\n  if (listener) {\n    this.off('resize', listener);\n    this.off('resizeDebounce', listener);\n  }\n};\n\nresize.debounceResize = debounce(resize.applyResizeDebounce.bind(resize), resize.debounceDelay);\n\n// first call to init values\nresize.onGlobalResize();\n\nwindow.addEventListener('resize', resize.onGlobalResize.bind(resize));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/brindille-resize/index.js\n ** module id = 3\n ** module chunks = 0\n **/","var core = module.exports = {version: '1.2.6'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/$.core.js\n ** module id = 4\n ** module chunks = 0\n **/","var prefix = require('prefix-style')\nvar toCamelCase = require('to-camel-case')\nvar cache = { 'float': 'cssFloat' }\nvar addPxToStyle = require('add-px-to-style')\n\nfunction style (element, property, value) {\n  var camel = cache[property]\n  if (typeof camel === 'undefined') {\n    camel = detect(property)\n  }\n\n  // may be false if CSS prop is unsupported\n  if (camel) {\n    if (value === undefined) {\n      return element.style[camel]\n    }\n\n    element.style[camel] = addPxToStyle(camel, value)\n  }\n}\n\nfunction each (element, properties) {\n  for (var k in properties) {\n    if (properties.hasOwnProperty(k)) {\n      style(element, k, properties[k])\n    }\n  }\n}\n\nfunction detect (cssProp) {\n  var camel = toCamelCase(cssProp)\n  var result = prefix(camel)\n  cache[camel] = cache[cssProp] = cache[result] = result\n  return result\n}\n\nfunction set () {\n  if (arguments.length === 2) {\n    each(arguments[0], arguments[1])\n  } else {\n    style(arguments[0], arguments[1], arguments[2])\n  }\n}\n\nmodule.exports = set\nmodule.exports.set = set\n\nmodule.exports.get = function (element, properties) {\n  if (Array.isArray(properties)) {\n    return properties.reduce(function (obj, prop) {\n      obj[prop] = style(element, prop || '')\n      return obj\n    }, {})\n  } else {\n    return style(element, properties || '')\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dom-css/index.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\r\n * This module will contain everything related to preloading.\r\n * \r\n * @module preloader\r\n */\r\nvar Class = require('js-oop');\r\nvar LoaderCache = require('./LoaderCache');\r\nvar FileMeta = require('./FileMeta');\r\nvar Signal = require('signals');\r\nvar UtilArrayBuffer = require('./util/UtilArrayBuffer');\r\nvar UtilHTTP = require('./util/UtilHTTP');\r\nvar XHR = XMLHttpRequest;\r\n\r\nvar LoaderBase = new Class({\r\n\r\n\t/**\r\n\t * LoaderBase is the base class for all Preloader's. It wraps XHR nicely with Signal's as it's event system\r\n\t * also it should be able to handle working with: text, JSON, ArrayBuffer, Blob, and Document data out of the\r\n\t * box. (data XHR2 is able to handle)\r\n\t * \r\n\t * @class LoaderBase\r\n\t * @constructor\r\n\t */\r\n\tinitialize: function( loadType ) {\r\n\r\n\t\tthis.xhr = null;\r\n\t\tthis.content = null;\r\n\t\tthis.url = null;\r\n\t\tthis.cacheID = null;\r\n\t\tthis.loadType = loadType || LoaderBase.typeText;\r\n\t\tthis.loadTypeSet = false;\r\n\t\tthis.fileMeta = null;\r\n\t\tthis.onStart = new Signal();\r\n\t\tthis.onProgress = new Signal();\r\n\t\tthis.onComplete = new Signal();\r\n\t\tthis.onError = new Signal();\r\n\r\n\t\tthis._onStateChange = this._onStateChange.bind( this );\r\n\t\tthis._onProgress = this._onProgress.bind( this );\r\n\t},\r\n\r\n\t/**\r\n\t * Call this method to find out if we can load data using XHR. This maybe useful for an Image loader for instance\r\n\t * if XHR can't be used then we can load the content using Image instead.\r\n\t * \r\n\t * @method canLoadUsingXHR\r\n\t * @return {[type]} [description]\r\n\t */\r\n\tcanLoadUsingXHR: function() {\r\n\r\n\t\treturn typeof XHR !== \"undefined\";\r\n\t},\r\n\r\n\tcanLoadType: function( type ) {\r\n\r\n\t\tvar tempXHR = new XHR();\r\n\r\n\t\t//need to open for ff so it doesn't fail\r\n\t\ttempXHR.open( 'GET', 'someFakeURL', true );\r\n\r\n\t\treturn checkAndSetType( tempXHR, type );\r\n\t},\r\n\r\n\t/**\r\n\t * The load function should be called to start preloading data. \r\n\t * \r\n\t * \r\n\t * The first parameter passed to the load function is the url to the data to be loaded. \r\n\t * It should be noted that mimetype for binary Blob data is read from \r\n\t * the file extension. EG. jpg will use the mimetype \"image/jpeg\".\r\n\t *\r\n\t * The second parameter is a String which will be used to defetermine if content should be cacheIDd in memory\r\n\t * this is useful if you know the asset will be loaded often or you just want the data to be\r\n\t * stored in memory. The ID passed can be used with LoaderCache to get the cacheIDd content.\r\n\t *\r\n\t * @method load\r\n\t * @param  {String} url This is the url to the data to be loaded\r\n\t * @param  {Boolean} cacheID If you'd like to cacheID the content to be loaded in memory pass in true\r\n\t */\r\n\tload: function( url, cacheID ) {\r\n\r\n\t\tthis.url = url;\r\n\t\tthis.cacheID = cacheID;\r\n\r\n\t\tif( LoaderCache.hasFile( this.url ) ) {\r\n\r\n\t\t\tthis.content = LoaderCache.get( this.url );\r\n\t\t\tthis._dispatchProgress( 1 );\r\n\t\t\tthis._dispatchComplete();\r\n\t\t} else if( this.canLoadUsingXHR() ) {\r\n\r\n\t\t\tthis.xhr = new XHR();\r\n\t\t\tthis.xhr.open( 'GET', url, true );\r\n\r\n\t\t\tthis.xhr.onreadystatechange = this._onStateChange;\r\n\t\t\tthis.xhr.onprogress !== undefined && ( this.xhr.onprogress = this._onProgress );\r\n\r\n\r\n\t\t\tif( this.loadType != LoaderBase.typeText ) {\r\n\r\n\t\t\t\tif( !checkIfGoodValue.call( this ) ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'Attempting to use incompatible load type ' + this.loadType + '. Switching it to ' + LoaderBase.typeText );\r\n\t\t\t\t\tthis.loadType = LoaderBase.typeText;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry{\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.loadTypeSet = checkResponseTypeSupport.call( this ) && checkAndSetType( this.xhr, this.loadType );\t\r\n\t\t\t\t} catch( e ) {\r\n\r\n\t\t\t\t\tthis.loadTypeSet = false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\r\n\t\t\t\tif( !this.loadTypeSet &&  ( this.loadType == LoaderBase.typeBlob ||\r\n\t\t\t\t\t\t\t\t\t\t\tthis.loadType == LoaderBase.typeArraybuffer ) ) {\r\n\r\n\t\t\t\t\tthis.xhr.overrideMimeType( 'text/plain; charset=x-user-defined' );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.xhr.send();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Call this function to stop loading the asset which is currently being loaded.\r\n\t *\r\n\t * @method stopLoad\r\n\t */\r\n\tstopLoad: function() {\r\n\r\n\t\tthis.xhr.abort();\r\n\t},\r\n\r\n\t/**\r\n\t * When this function is called it will simply dispatch onStart. It maybe useful for classes\r\n\t * which extend LoaderBase to override this function.\r\n\t *\r\n\t * @method _dispatchStart\r\n\t * @protected\r\n\t */\r\n\t_dispatchStart: function() {\r\n\r\n\t\tthis.onStart.dispatch();\r\n\t},\r\n\r\n\t/**\r\n\t * When this function is called it will simply dispatch onProgress. It maybe useful for classes\r\n\t * which extend LoaderBase to override this function.\r\n\t *\r\n\t * @method _dispatchProgress\r\n\t * @protected\r\n\t * @param {Number} value This is a value between 0-1 which is the percentage of the files load\r\n\t */\r\n\t_dispatchProgress: function( value ) {\r\n\r\n\t\tthis.onProgress.dispatch( value );\r\n\t},\r\n\r\n\t/**\r\n\t * When this function is called it will simply dispatch onComplete. It maybe useful for classes\r\n\t * which extend LoaderBase to override this function.\r\n\t *\r\n\t * @method _dispatchComplete\r\n\t * @protected\r\n\t */\r\n\t_dispatchComplete: function() {\r\n\r\n\t\tthis.onComplete.dispatch( this.content );\r\n\t},\r\n\r\n\t/**\r\n\t * When this function is called it will simply dispatch onError. It maybe useful for classes\r\n\t * which extend LoaderBase to override this function.\r\n\t *\r\n\t * @method _dispatchComplete\r\n\t * @protected\r\n\t * @param {String} msg The error message we'll be dispatching\r\n\t */\r\n\t_dispatchError: function( msg ) {\r\n\r\n\t\tthis.onError.dispatch( msg );\r\n\t},\r\n\r\n\t/**\r\n\t * This callback will be called when the XHR progresses in its load.\r\n\t *\r\n\t * @method _onProgress\r\n\t * @protected\r\n\t * @param  {XMLHttpRequestProgressEvent} ev This event contains data for the progress of the load\r\n\t */\r\n\t_onProgress: function( ev ) {\r\n\r\n\t\tvar loaded = ev.loaded || ev.position;\r\n\t\tvar totalSize = ev.total || ev.totalSize;\r\n\r\n\t\tif( totalSize ) {\r\n\r\n\t\t\tthis._dispatchProgress( loaded / totalSize );\t\r\n\t\t} else {\r\n\r\n\t\t\tthis._dispatchProgress( 0 );\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * This function is called whenever the readyState of the XHR object changes.\r\n\t *\r\n\t * \tthis.xhr.readyState == 2 //send() has been called, and headers and status are available\r\n\t * \tthis.xhr.readyState == 3 //Downloading; responseText holds partial data.\r\n\t * \tthis.xhr.readyState == 4 //Done\r\n\t *\r\n\t * You should also handle HTTP error status codes:\r\n\t *\r\n\t * \tthis.xhr.status == 404 //file doesn't exist\r\n\t * \r\n\t * @method _onStateChange\r\n\t * @protected\r\n\t */\r\n\t_onStateChange: function() {\r\n\r\n\t\tif( this.xhr.readyState > 1 ) {\r\n\r\n\t\t\tvar status = \"\";\r\n\t\t\tvar waiting = false;\r\n\t\t\t// Fix error in IE8 where status isn't available until readyState=4\r\n\t\t\ttry { status = this.xhr.status } catch(e) { waiting = true; }\r\n\r\n\t\t\tif ( status == '200' ) {\r\n\r\n\t\t\t\tswitch( this.xhr.readyState ) {\r\n\r\n\t\t\t\t\t//send() has been called, and headers and status are available\r\n\t\t\t\t\tcase 2:\r\n\r\n\t\t\t\t\t\tthis.fileMeta = new FileMeta( this.xhr.getAllResponseHeaders() );\r\n\r\n\t\t\t\t\t\tthis._dispatchStart();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//Downloading; responseText holds partial data.\r\n\t\t\t\t\tcase 3:\r\n\r\n\t\t\t\t\t\t//todo progress could be calculated here if onprogress does not exist on XHR\r\n\t\t\t\t\t\t//this.onProgress.dispatch();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t//Done\r\n\t\t\t\t\tcase 4:\r\n\r\n\t\t\t\t\t\tthis._parseContent();\r\n\r\n\t\t\t\t\t\tif( this.cacheID ) {\r\n\r\n\t\t\t\t\t\t\tthis._addToCache();\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis._dispatchComplete();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else if (!waiting) {\r\n\r\n\t\t\t\tthis.xhr.onreadystatechange = undefined;\r\n\t\t\t\tthis._dispatchError( this.xhr.status );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Calling this method will add the file loaded by this LoaderBase to the LoaderCache.\r\n\t * \r\n\t * @method _addToCache\r\n\t * @protected\r\n\t */\r\n\t_addToCache: function() {\r\n\r\n\t\tLoaderCache.add( this.cacheID, this.content );\r\n\t},\r\n\r\n\t/**\r\n\t * This function will grab the response from the content loaded and parse it out\r\n\t * \r\n\t * @method _parseContent\r\n\t * @protected\r\n\t */\r\n\t_parseContent: function() {\r\n\r\n\t\tif( this.loadTypeSet || this.loadType == LoaderBase.typeText ) {\r\n\r\n\t\t\tthis.content = this.xhr.response;\r\n\t\t} else {\r\n\r\n\t\t\tswitch( this.loadType ) {\r\n\r\n\t\t\t\tcase LoaderBase.typeArraybuffer:\r\n\r\n\t\t\t\t\tif( ArrayBuffer ) {\r\n\r\n\t\t\t\t\t\tthis.content = UtilArrayBuffer.stringToArrayBuffer( this.xhr.response );\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthrow new Error( 'This browser does not support ArrayBuffer' );\r\n\t\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase LoaderBase.typeBlob:\r\n\r\n\t\t\t\t\tif( Blob ) {\r\n\r\n\t\t\t\t\t\tif( !this.fileMeta ) {\r\n\r\n\t\t\t\t\t\t\tthis.fileMeta = new FileMeta();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif( this.fileMeta.mime === null ) {\r\n\r\n\t\t\t\t\t\t\tthis.fileMeta.mime = UtilHTTP.getMimeFromURL( this.url );\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.content = new Blob( [ UtilArrayBuffer.stringToArrayBuffer( this.xhr.response ) ], { type: this.fileMeta.mime } );\t\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthrow new Error( 'This browser does not support Blob' );\r\n\t\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase LoaderBase.typeJSON:\r\n\r\n\t\t\t\t\tthis.content = JSON.parse( this.xhr.response );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase LoaderBase.typeDocument:\r\n\r\n\t\t\t\t\t//this needs some work pretty sure there's a better way to handle this\r\n\t\t\t\t\tthis.content = this.xhr.response;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nfunction checkIfGoodValue() {\r\n\r\n\treturn this.loadType == LoaderBase.typeText ||\r\n\t\t   this.loadType == LoaderBase.typeArraybuffer ||\r\n\t\t   this.loadType == LoaderBase.typeBlob ||\r\n\t\t   this.loadType == LoaderBase.typeJSON ||\r\n\t\t   this.loadType == LoaderBase.typeDocument;\r\n}\r\n\r\nfunction checkResponseTypeSupport() {\r\n\r\n\treturn this.xhr.responseType !== undefined;\r\n}\r\n\r\nfunction checkAndSetType( xhr, loadType ) {\r\n\r\n\txhr.responseType = loadType;\r\n\r\n\treturn xhr.responseType == loadType;\r\n}\r\n\r\nLoaderBase.typeText = 'text';\r\nLoaderBase.typeArraybuffer = 'arraybuffer';\r\nLoaderBase.typeBlob = 'blob';\r\nLoaderBase.typeJSON = 'json';\r\nLoaderBase.typeDocument = 'document';\r\n\r\nmodule.exports = LoaderBase;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/preloader/lib/LoaderBase.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\r\n * This module should contain general utility methods.\r\n * \r\n * @module utils\r\n */\r\n\r\nvar FILE_MIME = {\r\n\r\n\t//images\r\n\tgif: 'image/gif',\r\n\tjpg: 'image/jpeg',\r\n\tjpeg: 'image/jpeg',\r\n\tpng: 'image/png',\r\n\tsvg: 'image/svg+xml',\r\n\r\n\t//text\r\n\thtml: 'text/html',\r\n\tcss: 'text/css',\r\n\tcsv: 'text/csv',\r\n\txml: 'text/xml'\r\n};\r\n\r\nvar UtilPath = require('./UtilPath');\r\n\r\n/**\r\n * This utility class contains everything related to working with HTTP for instance: dealing with mimetypes, httpheaders, etc.\r\n * \r\n * @class  UtilHTTP\r\n * @static\r\n */\r\nmodule.exports = {\r\n\r\n\t/**\r\n\t * If you pass a url to this function you'll get the mimetype associated with that url.\r\n\t * The default is 'application/octet-stream'. The url can be relative or absolute.\r\n\t *\r\n\t * @method getMimeFromURL\r\n\t * @param  {String} url The url you'd like to get a mimetype for.\r\n\t * @return {String} Mimetype for the url passed in\r\n\t */\r\n\tgetMimeFromURL: function( url ) {\r\n\r\n\t\treturn this.getMimeFromExtension( UtilPath.getFileExtension( url ) );\t\r\n\t},\r\n\r\n\t/**\r\n\t * This function will return a mime type based on a file extension. For instance the file 'jpg' would return\r\n\t * 'image/jpeg'.\r\n\t *\r\n\t * @method getMimeFromExtension\r\n\t * @param  {String} type File extension\r\n\t * @return {String} Mime type\r\n\t */\r\n\tgetMimeFromExtension: function( type ) {\r\n\r\n\t\tvar mime = FILE_MIME[ type.toLowerCase() ];\r\n\r\n\t\treturn mime || 'application/octet-stream';\r\n\t},\r\n\r\n\t/**\r\n\t * This function will take an HTTP header and turn it into an object for easier use.\r\n\t *\r\n\t * @method parseHeader\r\n\t * @param  {String} headerString This is an HTTP header\r\n\t * @return {Object} The return value will be an object representation of the HTTP Header\r\n\t */\r\n\tparseHeader: function( headerString ) {\r\n\r\n\t\tvar headerSplit = headerString.split( '\\n' );\r\n\t\tvar rVal = {};\r\n\t\tvar regex = /([a-zA-Z0-9\\-_]+): *(.+)/;\r\n\t\tvar keyValue = null;\r\n\r\n\t\tfor( var i = 0, len = headerSplit.length; i < len; i++ ) {\r\n\r\n\t\t\t//the end has an extra newline\r\n\t\t\tif( headerSplit[ i ] != '' ) {\r\n\r\n\t\t\t\tkeyValue = regex.exec( headerSplit[ i ] );\r\n\r\n\t\t\t\tif( keyValue ) {\r\n\r\n\t\t\t\t\trVal[ keyValue[ 1 ] ] = keyValue[ 2 ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn rVal;\r\n\t}\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/preloader/lib/util/UtilHTTP.js\n ** module id = 7\n ** module chunks = 0\n **/","export const data = {\n  'experiment-webgl-pex': {\n    title: 'Webgl-pex',\n    link: 'https://github.com/jmsaulnier/experiment-webgl-pex'\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/projects.js\n **/","import Vuex from 'vuex'\n\n// STATE\n\nconst state = {\n  isOpen: false\n}\n\n// ACTIONS\n\nconst actions = {\n  open: 'OPEN',\n  close: 'CLOSE'\n}\n\n// MUTATIONS\n\nconst mutations = {\n  OPEN (state) {\n    state.isOpen = true\n  },\n\n  CLOSE (state) {\n    state.isOpen = false\n  }\n}\n\n// ------------\n\nexport default new Vuex.Store({\n  state,\n  actions,\n  mutations\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/store/about.js\n **/","import Vuex from 'vuex'\n\n// STATE\n\nconst state = {\n  progress: 0,\n  isHidden: false\n}\n\n// ACTIONS\n\nconst actions = {\n  progressUpdate: 'PROGRESS_UPDATE',\n  hide: 'HIDE'\n}\n\n// MUTATIONS\n\nconst mutations = {\n  PROGRESS_UPDATE (state, pourcent) {\n    state.progress = pourcent\n  },\n\n  HIDE (state) {\n    state.isHidden = true\n  }\n}\n\n// ----\n\nexport default new Vuex.Store({\n  state,\n  actions,\n  mutations\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/store/preloader.js\n **/","module.exports = identity;\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nfunction identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-mat4/identity.js\n ** module id = 11\n ** module chunks = 0\n **/","var UtilHTTP = require('./util/UtilHTTP');\r\n\r\n/**\r\n * FileMeta is a class which will hold file meta data. Each LoaderBase contains a FileMeta object\r\n * that you can use to query.\r\n *\r\n * @class FileMeta\r\n * @constructor\r\n * @param {String} header HTTP Header sent when loading this file\r\n */\r\nvar FileMeta = function( header ) {\r\n\r\n\t/**\r\n\t * This property is the mimetype for the file\r\n\t * \r\n\t * @property mime\r\n\t * @type {String}\r\n\t */\r\n\tthis.mime = null;\r\n\r\n\t/**\r\n\t * This is the file size in bytes\r\n\t * \r\n\t * @type {Number}\r\n\t */\r\n\tthis.size = null;\r\n\r\n\t/**\r\n\t * This is a Date object which represents the last time this file was modified\r\n\t * \r\n\t * @type {Date}\r\n\t */\r\n\tthis.lastModified = null;\r\n\r\n\t/**\r\n\t * This is the HTTP header as an Object for the file.\r\n\t * \r\n\t * @type {Object}\r\n\t */\r\n\tthis.httpHeader = null;\r\n\r\n\tif( header )\r\n\t\tthis.setFromHTTPHeader( header );\r\n};\r\n\r\nFileMeta.prototype = {\r\n\r\n\t/**\r\n\t * This function will be called in the constructor of FileMeta. It will parse the HTTP\r\n\t * headers returned by a server and save useful information for development.\r\n\t *  \r\n\t * @method setFromHTTPHeader\r\n\t * @param {String} header HTTP header returned by the server\r\n\t */\r\n\tsetFromHTTPHeader: function( header ) {\r\n\r\n\t\tthis.httpHeader = UtilHTTP.parseHeader( header );\r\n\r\n\t\tif( this.httpHeader[ 'content-length' ] )\r\n\t\t\tthis.size = this.httpHeader[ 'content-length' ];\r\n\r\n\t\tif( this.httpHeader[ 'content-type' ] )\r\n\t\t\tthis.mime = this.httpHeader[ 'content-type' ];\r\n\r\n\t\tif( this.httpHeader[ 'last-modified' ] )\r\n\t\t\tthis.lastModified = new Date( this.httpHeader[ 'last-modified' ] );\r\n\t}\r\n};\r\n\r\nmodule.exports = FileMeta;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/preloader/lib/FileMeta.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\r\n * This module should contain general utility methods.\r\n * \r\n * @module utils\r\n */\r\n\r\n/**\r\n * UtilArrayBuffer utility class contains functions when working with ArrayBuffers\r\n *\r\n * @class UtilArrayBuffer\r\n * @static\r\n */\r\nmodule.exports = {\r\n\r\n\t/**\r\n\t * This function will convert an Array Buffer to a String\r\n\t * \r\n\t * @method arrayBufferToString\r\n\t * @param  {ArrayBuffer} buffer The ArrayBuffer we'd like to convert to a string\r\n\t * @return {String} The string representation of an ArrayBuffer\r\n\t */\r\n\tarrayBufferToString: function( buffer ) {\r\n\r\n\t\treturn String.fromCharCode.apply(null, new Uint16Array(buf));\r\n\t},\r\n\r\n\t/**\r\n\t * This will conver a string to an ArrayBuffer\r\n\t * \r\n\t * @method stringToArrayBuffer\r\n\t * @param  {String} string The string to convert to an array buffer\r\n\t * @return {ArrayBuffer} The string data which was converted into an ArrayBuffer\r\n\t */\r\n\tstringToArrayBuffer: function( string ) {\r\n\r\n\t\tvar buf = new ArrayBuffer( string.length * 2 ); // 2 bytes for each char\r\n\t\tvar bufView = new Uint16Array( buf );\r\n\r\n\t\tfor (var i = 0, strLen = string.length; i < strLen; i++) {\r\n\t\t\t\r\n\t\t\tbufView[ i ] = string.charCodeAt( i );\r\n\t\t}\r\n\r\n\t\treturn buf;\r\n\t}\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/preloader/lib/util/UtilArrayBuffer.js\n ** module id = 13\n ** module chunks = 0\n **/","\t/**\r\n * This module should contain general utility methods.\r\n * \r\n * @module utils\r\n */\r\n\r\n/**\r\n * This utility class deals with file paths.\r\n * \r\n * @class UtilPath\r\n * @static\r\n */\r\nmodule.exports = {\r\n\r\n\t/**\r\n\t * Return the file extension based on the path passed in. If the file does not have an extension null will be passed back\r\n\t *\r\n\t * @method getFileExtension\r\n\t * @param {String} url URL we'd like a filextension from. This can be relative or absolute.\r\n\t * @return {String} \r\n\t */\r\n\tgetFileExtension: function( url ) {\r\n\r\n\t\tvar splitByBackSlash = url.split( '/' );\r\n\t\tvar fileData = /\\.([a-zA-Z]+)/.exec( splitByBackSlash[ splitByBackSlash.length - 1 ] );\r\n\t\t\r\n\t\treturn fileData[ 1 ] || null;\t\r\n\t},\r\n\r\n\tgetURLForDensity: function( url, densityModifiers ) {\r\n\r\n\t\tvar regexFileExtension = /(\\.\\w+$)/;\r\n\t\tvar pixelRatio = window.devicePixelRatio;\r\n\t\tvar modifier = null;\r\n\r\n\t\tif( densityModifiers ) {\r\n\r\n\t\t\tvar idx = pixelRatio - 1;\r\n\t\t\tmodifier = densityModifiers[ idx ];\r\n\r\n\t\t\twhile( ( modifier === undefined || modifier === null ) && idx >= 0 ) {\r\n\r\n\t\t\t\tmodifier = densityModifiers[ idx ];\r\n\r\n\t\t\t\tidx--;\r\n\t\t\t}\r\n\r\n\t\t\tif( !modifier ) {\r\n\r\n\t\t\t\tmodifier = densityModifiers[ 0 ];\r\n\t\t\t}\r\n\r\n\t\t\tif( typeof modifier == 'number' ) {\r\n\r\n\t\t\t\tmodifier = '@' + modifier + 'x';\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\tmodifier = '@' + pixelRatio + 'x';\r\n\t\t}\r\n\t\t\r\n\r\n\t\treturn url.replace( regexFileExtension,  modifier + '$1' );\r\n\t}\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/preloader/lib/util/UtilPath.js\n ** module id = 14\n ** module chunks = 0\n **/","/*jslint onevar:true, undef:true, newcap:true, regexp:true, bitwise:true, maxerr:50, indent:4, white:false, nomen:false, plusplus:false */\n/*global define:false, require:false, exports:false, module:false, signals:false */\n\n/** @license\n * JS Signals <http://millermedeiros.github.com/js-signals/>\n * Released under the MIT license\n * Author: Miller Medeiros\n * Version: 1.0.0 - Build: 268 (2012/11/29 05:48 PM)\n */\n\n(function(global){\n\n    // SignalBinding -------------------------------------------------\n    //================================================================\n\n    /**\n     * Object that represents a binding between a Signal and a listener function.\n     * <br />- <strong>This is an internal constructor and shouldn't be called by regular users.</strong>\n     * <br />- inspired by Joa Ebert AS3 SignalBinding and Robert Penner's Slot classes.\n     * @author Miller Medeiros\n     * @constructor\n     * @internal\n     * @name SignalBinding\n     * @param {Signal} signal Reference to Signal object that listener is currently bound to.\n     * @param {Function} listener Handler function bound to the signal.\n     * @param {boolean} isOnce If binding should be executed just once.\n     * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n     * @param {Number} [priority] The priority level of the event listener. (default = 0).\n     */\n    function SignalBinding(signal, listener, isOnce, listenerContext, priority) {\n\n        /**\n         * Handler function bound to the signal.\n         * @type Function\n         * @private\n         */\n        this._listener = listener;\n\n        /**\n         * If binding should be executed just once.\n         * @type boolean\n         * @private\n         */\n        this._isOnce = isOnce;\n\n        /**\n         * Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @memberOf SignalBinding.prototype\n         * @name context\n         * @type Object|undefined|null\n         */\n        this.context = listenerContext;\n\n        /**\n         * Reference to Signal object that listener is currently bound to.\n         * @type Signal\n         * @private\n         */\n        this._signal = signal;\n\n        /**\n         * Listener priority\n         * @type Number\n         * @private\n         */\n        this._priority = priority || 0;\n    }\n\n    SignalBinding.prototype = {\n\n        /**\n         * If binding is active and should be executed.\n         * @type boolean\n         */\n        active : true,\n\n        /**\n         * Default parameters passed to listener during `Signal.dispatch` and `SignalBinding.execute`. (curried parameters)\n         * @type Array|null\n         */\n        params : null,\n\n        /**\n         * Call listener passing arbitrary parameters.\n         * <p>If binding was added using `Signal.addOnce()` it will be automatically removed from signal dispatch queue, this method is used internally for the signal dispatch.</p>\n         * @param {Array} [paramsArr] Array of parameters that should be passed to the listener\n         * @return {*} Value returned by the listener.\n         */\n        execute : function (paramsArr) {\n            var handlerReturn, params;\n            if (this.active && !!this._listener) {\n                params = this.params? this.params.concat(paramsArr) : paramsArr;\n                handlerReturn = this._listener.apply(this.context, params);\n                if (this._isOnce) {\n                    this.detach();\n                }\n            }\n            return handlerReturn;\n        },\n\n        /**\n         * Detach binding from signal.\n         * - alias to: mySignal.remove(myBinding.getListener());\n         * @return {Function|null} Handler function bound to the signal or `null` if binding was previously detached.\n         */\n        detach : function () {\n            return this.isBound()? this._signal.remove(this._listener, this.context) : null;\n        },\n\n        /**\n         * @return {Boolean} `true` if binding is still bound to the signal and have a listener.\n         */\n        isBound : function () {\n            return (!!this._signal && !!this._listener);\n        },\n\n        /**\n         * @return {boolean} If SignalBinding will only be executed once.\n         */\n        isOnce : function () {\n            return this._isOnce;\n        },\n\n        /**\n         * @return {Function} Handler function bound to the signal.\n         */\n        getListener : function () {\n            return this._listener;\n        },\n\n        /**\n         * @return {Signal} Signal that listener is currently bound to.\n         */\n        getSignal : function () {\n            return this._signal;\n        },\n\n        /**\n         * Delete instance properties\n         * @private\n         */\n        _destroy : function () {\n            delete this._signal;\n            delete this._listener;\n            delete this.context;\n        },\n\n        /**\n         * @return {string} String representation of the object.\n         */\n        toString : function () {\n            return '[SignalBinding isOnce:' + this._isOnce +', isBound:'+ this.isBound() +', active:' + this.active + ']';\n        }\n\n    };\n\n\n/*global SignalBinding:false*/\n\n    // Signal --------------------------------------------------------\n    //================================================================\n\n    function validateListener(listener, fnName) {\n        if (typeof listener !== 'function') {\n            throw new Error( 'listener is a required param of {fn}() and should be a Function.'.replace('{fn}', fnName) );\n        }\n    }\n\n    /**\n     * Custom event broadcaster\n     * <br />- inspired by Robert Penner's AS3 Signals.\n     * @name Signal\n     * @author Miller Medeiros\n     * @constructor\n     */\n    function Signal() {\n        /**\n         * @type Array.<SignalBinding>\n         * @private\n         */\n        this._bindings = [];\n        this._prevParams = null;\n\n        // enforce dispatch to aways work on same context (#47)\n        var self = this;\n        this.dispatch = function(){\n            Signal.prototype.dispatch.apply(self, arguments);\n        };\n    }\n\n    Signal.prototype = {\n\n        /**\n         * Signals Version Number\n         * @type String\n         * @const\n         */\n        VERSION : '1.0.0',\n\n        /**\n         * If Signal should keep record of previously dispatched parameters and\n         * automatically execute listener during `add()`/`addOnce()` if Signal was\n         * already dispatched before.\n         * @type boolean\n         */\n        memorize : false,\n\n        /**\n         * @type boolean\n         * @private\n         */\n        _shouldPropagate : true,\n\n        /**\n         * If Signal is active and should broadcast events.\n         * <p><strong>IMPORTANT:</strong> Setting this property during a dispatch will only affect the next dispatch, if you want to stop the propagation of a signal use `halt()` instead.</p>\n         * @type boolean\n         */\n        active : true,\n\n        /**\n         * @param {Function} listener\n         * @param {boolean} isOnce\n         * @param {Object} [listenerContext]\n         * @param {Number} [priority]\n         * @return {SignalBinding}\n         * @private\n         */\n        _registerListener : function (listener, isOnce, listenerContext, priority) {\n\n            var prevIndex = this._indexOfListener(listener, listenerContext),\n                binding;\n\n            if (prevIndex !== -1) {\n                binding = this._bindings[prevIndex];\n                if (binding.isOnce() !== isOnce) {\n                    throw new Error('You cannot add'+ (isOnce? '' : 'Once') +'() then add'+ (!isOnce? '' : 'Once') +'() the same listener without removing the relationship first.');\n                }\n            } else {\n                binding = new SignalBinding(this, listener, isOnce, listenerContext, priority);\n                this._addBinding(binding);\n            }\n\n            if(this.memorize && this._prevParams){\n                binding.execute(this._prevParams);\n            }\n\n            return binding;\n        },\n\n        /**\n         * @param {SignalBinding} binding\n         * @private\n         */\n        _addBinding : function (binding) {\n            //simplified insertion sort\n            var n = this._bindings.length;\n            do { --n; } while (this._bindings[n] && binding._priority <= this._bindings[n]._priority);\n            this._bindings.splice(n + 1, 0, binding);\n        },\n\n        /**\n         * @param {Function} listener\n         * @return {number}\n         * @private\n         */\n        _indexOfListener : function (listener, context) {\n            var n = this._bindings.length,\n                cur;\n            while (n--) {\n                cur = this._bindings[n];\n                if (cur._listener === listener && cur.context === context) {\n                    return n;\n                }\n            }\n            return -1;\n        },\n\n        /**\n         * Check if listener was attached to Signal.\n         * @param {Function} listener\n         * @param {Object} [context]\n         * @return {boolean} if Signal has the specified listener.\n         */\n        has : function (listener, context) {\n            return this._indexOfListener(listener, context) !== -1;\n        },\n\n        /**\n         * Add a listener to the signal.\n         * @param {Function} listener Signal handler function.\n         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n         */\n        add : function (listener, listenerContext, priority) {\n            validateListener(listener, 'add');\n            return this._registerListener(listener, false, listenerContext, priority);\n        },\n\n        /**\n         * Add listener to the signal that should be removed after first execution (will be executed only once).\n         * @param {Function} listener Signal handler function.\n         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n         */\n        addOnce : function (listener, listenerContext, priority) {\n            validateListener(listener, 'addOnce');\n            return this._registerListener(listener, true, listenerContext, priority);\n        },\n\n        /**\n         * Remove a single listener from the dispatch queue.\n         * @param {Function} listener Handler function that should be removed.\n         * @param {Object} [context] Execution context (since you can add the same handler multiple times if executing in a different context).\n         * @return {Function} Listener handler function.\n         */\n        remove : function (listener, context) {\n            validateListener(listener, 'remove');\n\n            var i = this._indexOfListener(listener, context);\n            if (i !== -1) {\n                this._bindings[i]._destroy(); //no reason to a SignalBinding exist if it isn't attached to a signal\n                this._bindings.splice(i, 1);\n            }\n            return listener;\n        },\n\n        /**\n         * Remove all listeners from the Signal.\n         */\n        removeAll : function () {\n            var n = this._bindings.length;\n            while (n--) {\n                this._bindings[n]._destroy();\n            }\n            this._bindings.length = 0;\n        },\n\n        /**\n         * @return {number} Number of listeners attached to the Signal.\n         */\n        getNumListeners : function () {\n            return this._bindings.length;\n        },\n\n        /**\n         * Stop propagation of the event, blocking the dispatch to next listeners on the queue.\n         * <p><strong>IMPORTANT:</strong> should be called only during signal dispatch, calling it before/after dispatch won't affect signal broadcast.</p>\n         * @see Signal.prototype.disable\n         */\n        halt : function () {\n            this._shouldPropagate = false;\n        },\n\n        /**\n         * Dispatch/Broadcast Signal to all listeners added to the queue.\n         * @param {...*} [params] Parameters that should be passed to each handler.\n         */\n        dispatch : function (params) {\n            if (! this.active) {\n                return;\n            }\n\n            var paramsArr = Array.prototype.slice.call(arguments),\n                n = this._bindings.length,\n                bindings;\n\n            if (this.memorize) {\n                this._prevParams = paramsArr;\n            }\n\n            if (! n) {\n                //should come after memorize\n                return;\n            }\n\n            bindings = this._bindings.slice(); //clone array in case add/remove items during dispatch\n            this._shouldPropagate = true; //in case `halt` was called before dispatch or during the previous dispatch.\n\n            //execute all callbacks until end of the list or until a callback returns `false` or stops propagation\n            //reverse loop since listeners with higher priority will be added at the end of the list\n            do { n--; } while (bindings[n] && this._shouldPropagate && bindings[n].execute(paramsArr) !== false);\n        },\n\n        /**\n         * Forget memorized arguments.\n         * @see Signal.memorize\n         */\n        forget : function(){\n            this._prevParams = null;\n        },\n\n        /**\n         * Remove all bindings from signal and destroy any reference to external objects (destroy Signal object).\n         * <p><strong>IMPORTANT:</strong> calling any method on the signal instance after calling dispose will throw errors.</p>\n         */\n        dispose : function () {\n            this.removeAll();\n            delete this._bindings;\n            delete this._prevParams;\n        },\n\n        /**\n         * @return {string} String representation of the object.\n         */\n        toString : function () {\n            return '[Signal active:'+ this.active +' numListeners:'+ this.getNumListeners() +']';\n        }\n\n    };\n\n\n    // Namespace -----------------------------------------------------\n    //================================================================\n\n    /**\n     * Signals namespace\n     * @namespace\n     * @name signals\n     */\n    var signals = Signal;\n\n    /**\n     * Custom event broadcaster\n     * @see Signal\n     */\n    // alias for backwards compatibility (see #gh-44)\n    signals.Signal = Signal;\n\n\n\n    //exports to multiple environments\n    if(typeof define === 'function' && define.amd){ //AMD\n        define(function () { return signals; });\n    } else if (typeof module !== 'undefined' && module.exports){ //node\n        module.exports = signals;\n    } else { //browser\n        //use string because of Google closure compiler ADVANCED_MODE\n        /*jslint sub:true */\n        global['signals'] = signals;\n    }\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/signals/dist/signals.js\n ** module id = 15\n ** module chunks = 0\n **/","\nvar toSpace = require('to-space-case');\n\n\n/**\n * Expose `toCamelCase`.\n */\n\nmodule.exports = toCamelCase;\n\n\n/**\n * Convert a `string` to camel case.\n *\n * @param {String} string\n * @return {String}\n */\n\n\nfunction toCamelCase (string) {\n  return toSpace(string).replace(/\\s(\\w)/g, function (matches, letter) {\n    return letter.toUpperCase();\n  });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/to-camel-case/index.js\n ** module id = 16\n ** module chunks = 0\n **/","/*! VelocityJS.org (1.2.3). (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License */\n\n/*************************\n   Velocity jQuery Shim\n*************************/\n\n/*! VelocityJS.org jQuery Shim (1.0.1). (C) 2014 The jQuery Foundation. MIT @license: en.wikipedia.org/wiki/MIT_License. */\n\n/* This file contains the jQuery functions that Velocity relies on, thereby removing Velocity's dependency on a full copy of jQuery, and allowing it to work in any environment. */\n/* These shimmed functions are only used if jQuery isn't present. If both this shim and jQuery are loaded, Velocity defaults to jQuery proper. */\n/* Browser support: Using this shim instead of jQuery proper removes support for IE8. */\n\n;(function (window) {\n    /***************\n         Setup\n    ***************/\n\n    /* If jQuery is already loaded, there's no point in loading this shim. */\n    if (window.jQuery) {\n        return;\n    }\n\n    /* jQuery base. */\n    var $ = function (selector, context) {\n        return new $.fn.init(selector, context);\n    };\n\n    /********************\n       Private Methods\n    ********************/\n\n    /* jQuery */\n    $.isWindow = function (obj) {\n        /* jshint eqeqeq: false */\n        return obj != null && obj == obj.window;\n    };\n\n    /* jQuery */\n    $.type = function (obj) {\n        if (obj == null) {\n            return obj + \"\";\n        }\n\n        return typeof obj === \"object\" || typeof obj === \"function\" ?\n            class2type[toString.call(obj)] || \"object\" :\n            typeof obj;\n    };\n\n    /* jQuery */\n    $.isArray = Array.isArray || function (obj) {\n        return $.type(obj) === \"array\";\n    };\n\n    /* jQuery */\n    function isArraylike (obj) {\n        var length = obj.length,\n            type = $.type(obj);\n\n        if (type === \"function\" || $.isWindow(obj)) {\n            return false;\n        }\n\n        if (obj.nodeType === 1 && length) {\n            return true;\n        }\n\n        return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && (length - 1) in obj;\n    }\n\n    /***************\n       $ Methods\n    ***************/\n\n    /* jQuery: Support removed for IE<9. */\n    $.isPlainObject = function (obj) {\n        var key;\n\n        if (!obj || $.type(obj) !== \"object\" || obj.nodeType || $.isWindow(obj)) {\n            return false;\n        }\n\n        try {\n            if (obj.constructor &&\n                !hasOwn.call(obj, \"constructor\") &&\n                !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n                return false;\n            }\n        } catch (e) {\n            return false;\n        }\n\n        for (key in obj) {}\n\n        return key === undefined || hasOwn.call(obj, key);\n    };\n\n    /* jQuery */\n    $.each = function(obj, callback, args) {\n        var value,\n            i = 0,\n            length = obj.length,\n            isArray = isArraylike(obj);\n\n        if (args) {\n            if (isArray) {\n                for (; i < length; i++) {\n                    value = callback.apply(obj[i], args);\n\n                    if (value === false) {\n                        break;\n                    }\n                }\n            } else {\n                for (i in obj) {\n                    value = callback.apply(obj[i], args);\n\n                    if (value === false) {\n                        break;\n                    }\n                }\n            }\n\n        } else {\n            if (isArray) {\n                for (; i < length; i++) {\n                    value = callback.call(obj[i], i, obj[i]);\n\n                    if (value === false) {\n                        break;\n                    }\n                }\n            } else {\n                for (i in obj) {\n                    value = callback.call(obj[i], i, obj[i]);\n\n                    if (value === false) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        return obj;\n    };\n\n    /* Custom */\n    $.data = function (node, key, value) {\n        /* $.getData() */\n        if (value === undefined) {\n            var id = node[$.expando],\n                store = id && cache[id];\n\n            if (key === undefined) {\n                return store;\n            } else if (store) {\n                if (key in store) {\n                    return store[key];\n                }\n            }\n        /* $.setData() */\n        } else if (key !== undefined) {\n            var id = node[$.expando] || (node[$.expando] = ++$.uuid);\n\n            cache[id] = cache[id] || {};\n            cache[id][key] = value;\n\n            return value;\n        }\n    };\n\n    /* Custom */\n    $.removeData = function (node, keys) {\n        var id = node[$.expando],\n            store = id && cache[id];\n\n        if (store) {\n            $.each(keys, function(_, key) {\n                delete store[key];\n            });\n        }\n    };\n\n    /* jQuery */\n    $.extend = function () {\n        var src, copyIsArray, copy, name, options, clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments.length,\n            deep = false;\n\n        if (typeof target === \"boolean\") {\n            deep = target;\n\n            target = arguments[i] || {};\n            i++;\n        }\n\n        if (typeof target !== \"object\" && $.type(target) !== \"function\") {\n            target = {};\n        }\n\n        if (i === length) {\n            target = this;\n            i--;\n        }\n\n        for (; i < length; i++) {\n            if ((options = arguments[i]) != null) {\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n\n                    if (target === copy) {\n                        continue;\n                    }\n\n                    if (deep && copy && ($.isPlainObject(copy) || (copyIsArray = $.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && $.isArray(src) ? src : [];\n\n                        } else {\n                            clone = src && $.isPlainObject(src) ? src : {};\n                        }\n\n                        target[name] = $.extend(deep, clone, copy);\n\n                    } else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n\n        return target;\n    };\n\n    /* jQuery 1.4.3 */\n    $.queue = function (elem, type, data) {\n        function $makeArray (arr, results) {\n            var ret = results || [];\n\n            if (arr != null) {\n                if (isArraylike(Object(arr))) {\n                    /* $.merge */\n                    (function(first, second) {\n                        var len = +second.length,\n                            j = 0,\n                            i = first.length;\n\n                        while (j < len) {\n                            first[i++] = second[j++];\n                        }\n\n                        if (len !== len) {\n                            while (second[j] !== undefined) {\n                                first[i++] = second[j++];\n                            }\n                        }\n\n                        first.length = i;\n\n                        return first;\n                    })(ret, typeof arr === \"string\" ? [arr] : arr);\n                } else {\n                    [].push.call(ret, arr);\n                }\n            }\n\n            return ret;\n        }\n\n        if (!elem) {\n            return;\n        }\n\n        type = (type || \"fx\") + \"queue\";\n\n        var q = $.data(elem, type);\n\n        if (!data) {\n            return q || [];\n        }\n\n        if (!q || $.isArray(data)) {\n            q = $.data(elem, type, $makeArray(data));\n        } else {\n            q.push(data);\n        }\n\n        return q;\n    };\n\n    /* jQuery 1.4.3 */\n    $.dequeue = function (elems, type) {\n        /* Custom: Embed element iteration. */\n        $.each(elems.nodeType ? [ elems ] : elems, function(i, elem) {\n            type = type || \"fx\";\n\n            var queue = $.queue(elem, type),\n                fn = queue.shift();\n\n            if (fn === \"inprogress\") {\n                fn = queue.shift();\n            }\n\n            if (fn) {\n                if (type === \"fx\") {\n                    queue.unshift(\"inprogress\");\n                }\n\n                fn.call(elem, function() {\n                    $.dequeue(elem, type);\n                });\n            }\n        });\n    };\n\n    /******************\n       $.fn Methods\n    ******************/\n\n    /* jQuery */\n    $.fn = $.prototype = {\n        init: function (selector) {\n            /* Just return the element wrapped inside an array; don't proceed with the actual jQuery node wrapping process. */\n            if (selector.nodeType) {\n                this[0] = selector;\n\n                return this;\n            } else {\n                throw new Error(\"Not a DOM node.\");\n            }\n        },\n\n        offset: function () {\n            /* jQuery altered code: Dropped disconnected DOM node checking. */\n            var box = this[0].getBoundingClientRect ? this[0].getBoundingClientRect() : { top: 0, left: 0 };\n\n            return {\n                top: box.top + (window.pageYOffset || document.scrollTop  || 0)  - (document.clientTop  || 0),\n                left: box.left + (window.pageXOffset || document.scrollLeft  || 0) - (document.clientLeft || 0)\n            };\n        },\n\n        position: function () {\n            /* jQuery */\n            function offsetParent() {\n                var offsetParent = this.offsetParent || document;\n\n                while (offsetParent && (!offsetParent.nodeType.toLowerCase === \"html\" && offsetParent.style.position === \"static\")) {\n                    offsetParent = offsetParent.offsetParent;\n                }\n\n                return offsetParent || document;\n            }\n\n            /* Zepto */\n            var elem = this[0],\n                offsetParent = offsetParent.apply(elem),\n                offset = this.offset(),\n                parentOffset = /^(?:body|html)$/i.test(offsetParent.nodeName) ? { top: 0, left: 0 } : $(offsetParent).offset()\n\n            offset.top -= parseFloat(elem.style.marginTop) || 0;\n            offset.left -= parseFloat(elem.style.marginLeft) || 0;\n\n            if (offsetParent.style) {\n                parentOffset.top += parseFloat(offsetParent.style.borderTopWidth) || 0\n                parentOffset.left += parseFloat(offsetParent.style.borderLeftWidth) || 0\n            }\n\n            return {\n                top: offset.top - parentOffset.top,\n                left: offset.left - parentOffset.left\n            };\n        }\n    };\n\n    /**********************\n       Private Variables\n    **********************/\n\n    /* For $.data() */\n    var cache = {};\n    $.expando = \"velocity\" + (new Date().getTime());\n    $.uuid = 0;\n\n    /* For $.queue() */\n    var class2type = {},\n        hasOwn = class2type.hasOwnProperty,\n        toString = class2type.toString;\n\n    var types = \"Boolean Number String Function Array Date RegExp Object Error\".split(\" \");\n    for (var i = 0; i < types.length; i++) {\n        class2type[\"[object \" + types[i] + \"]\"] = types[i].toLowerCase();\n    }\n\n    /* Makes $(node) possible, without having to call init. */\n    $.fn.init.prototype = $.fn;\n\n    /* Globalize Velocity onto the window, and assign its Utilities property. */\n    window.Velocity = { Utilities: $ };\n})(window);\n\n/******************\n    Velocity.js\n******************/\n\n;(function (factory) {\n    /* CommonJS module. */\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        module.exports = factory();\n    /* AMD module. */\n    } else if (typeof define === \"function\" && define.amd) {\n        define(factory);\n    /* Browser globals. */\n    } else {\n        factory();\n    }\n}(function() {\nreturn function (global, window, document, undefined) {\n\n    /***************\n        Summary\n    ***************/\n\n    /*\n    - CSS: CSS stack that works independently from the rest of Velocity.\n    - animate(): Core animation method that iterates over the targeted elements and queues the incoming call onto each element individually.\n      - Pre-Queueing: Prepare the element for animation by instantiating its data cache and processing the call's options.\n      - Queueing: The logic that runs once the call has reached its point of execution in the element's $.queue() stack.\n                  Most logic is placed here to avoid risking it becoming stale (if the element's properties have changed).\n      - Pushing: Consolidation of the tween data followed by its push onto the global in-progress calls container.\n    - tick(): The single requestAnimationFrame loop responsible for tweening all in-progress calls.\n    - completeCall(): Handles the cleanup process for each Velocity call.\n    */\n\n    /*********************\n       Helper Functions\n    *********************/\n\n    /* IE detection. Gist: https://gist.github.com/julianshapiro/9098609 */\n    var IE = (function() {\n        if (document.documentMode) {\n            return document.documentMode;\n        } else {\n            for (var i = 7; i > 4; i--) {\n                var div = document.createElement(\"div\");\n\n                div.innerHTML = \"<!--[if IE \" + i + \"]><span></span><![endif]-->\";\n\n                if (div.getElementsByTagName(\"span\").length) {\n                    div = null;\n\n                    return i;\n                }\n            }\n        }\n\n        return undefined;\n    })();\n\n    /* rAF shim. Gist: https://gist.github.com/julianshapiro/9497513 */\n    var rAFShim = (function() {\n        var timeLast = 0;\n\n        return window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {\n            var timeCurrent = (new Date()).getTime(),\n                timeDelta;\n\n            /* Dynamically set delay on a per-tick basis to match 60fps. */\n            /* Technique by Erik Moller. MIT license: https://gist.github.com/paulirish/1579671 */\n            timeDelta = Math.max(0, 16 - (timeCurrent - timeLast));\n            timeLast = timeCurrent + timeDelta;\n\n            return setTimeout(function() { callback(timeCurrent + timeDelta); }, timeDelta);\n        };\n    })();\n\n    /* Array compacting. Copyright Lo-Dash. MIT License: https://github.com/lodash/lodash/blob/master/LICENSE.txt */\n    function compactSparseArray (array) {\n        var index = -1,\n            length = array ? array.length : 0,\n            result = [];\n\n        while (++index < length) {\n            var value = array[index];\n\n            if (value) {\n                result.push(value);\n            }\n        }\n\n        return result;\n    }\n\n    function sanitizeElements (elements) {\n        /* Unwrap jQuery/Zepto objects. */\n        if (Type.isWrapped(elements)) {\n            elements = [].slice.call(elements);\n        /* Wrap a single element in an array so that $.each() can iterate with the element instead of its node's children. */\n        } else if (Type.isNode(elements)) {\n            elements = [ elements ];\n        }\n\n        return elements;\n    }\n\n    var Type = {\n        isString: function (variable) {\n            return (typeof variable === \"string\");\n        },\n        isArray: Array.isArray || function (variable) {\n            return Object.prototype.toString.call(variable) === \"[object Array]\";\n        },\n        isFunction: function (variable) {\n            return Object.prototype.toString.call(variable) === \"[object Function]\";\n        },\n        isNode: function (variable) {\n            return variable && variable.nodeType;\n        },\n        /* Copyright Martin Bohm. MIT License: https://gist.github.com/Tomalak/818a78a226a0738eaade */\n        isNodeList: function (variable) {\n            return typeof variable === \"object\" &&\n                /^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(Object.prototype.toString.call(variable)) &&\n                variable.length !== undefined &&\n                (variable.length === 0 || (typeof variable[0] === \"object\" && variable[0].nodeType > 0));\n        },\n        /* Determine if variable is a wrapped jQuery or Zepto element. */\n        isWrapped: function (variable) {\n            return variable && (variable.jquery || (window.Zepto && window.Zepto.zepto.isZ(variable)));\n        },\n        isSVG: function (variable) {\n            return window.SVGElement && (variable instanceof window.SVGElement);\n        },\n        isEmptyObject: function (variable) {\n            for (var name in variable) {\n                return false;\n            }\n\n            return true;\n        }\n    };\n\n    /*****************\n       Dependencies\n    *****************/\n\n    var $,\n        isJQuery = false;\n\n    if (global.fn && global.fn.jquery) {\n        $ = global;\n        isJQuery = true;\n    } else {\n        $ = window.Velocity.Utilities;\n    }\n\n    if (IE <= 8 && !isJQuery) {\n        throw new Error(\"Velocity: IE8 and below require jQuery to be loaded before Velocity.\");\n    } else if (IE <= 7) {\n        /* Revert to jQuery's $.animate(), and lose Velocity's extra features. */\n        jQuery.fn.velocity = jQuery.fn.animate;\n\n        /* Now that $.fn.velocity is aliased, abort this Velocity declaration. */\n        return;\n    }\n\n    /*****************\n        Constants\n    *****************/\n\n    var DURATION_DEFAULT = 400,\n        EASING_DEFAULT = \"swing\";\n\n    /*************\n        State\n    *************/\n\n    var Velocity = {\n        /* Container for page-wide Velocity state data. */\n        State: {\n            /* Detect mobile devices to determine if mobileHA should be turned on. */\n            isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\n            /* The mobileHA option's behavior changes on older Android devices (Gingerbread, versions 2.3.3-2.3.7). */\n            isAndroid: /Android/i.test(navigator.userAgent),\n            isGingerbread: /Android 2\\.3\\.[3-7]/i.test(navigator.userAgent),\n            isChrome: window.chrome,\n            isFirefox: /Firefox/i.test(navigator.userAgent),\n            /* Create a cached element for re-use when checking for CSS property prefixes. */\n            prefixElement: document.createElement(\"div\"),\n            /* Cache every prefix match to avoid repeating lookups. */\n            prefixMatches: {},\n            /* Cache the anchor used for animating window scrolling. */\n            scrollAnchor: null,\n            /* Cache the browser-specific property names associated with the scroll anchor. */\n            scrollPropertyLeft: null,\n            scrollPropertyTop: null,\n            /* Keep track of whether our RAF tick is running. */\n            isTicking: false,\n            /* Container for every in-progress call to Velocity. */\n            calls: []\n        },\n        /* Velocity's custom CSS stack. Made global for unit testing. */\n        CSS: { /* Defined below. */ },\n        /* A shim of the jQuery utility functions used by Velocity -- provided by Velocity's optional jQuery shim. */\n        Utilities: $,\n        /* Container for the user's custom animation redirects that are referenced by name in place of the properties map argument. */\n        Redirects: { /* Manually registered by the user. */ },\n        Easings: { /* Defined below. */ },\n        /* Attempt to use ES6 Promises by default. Users can override this with a third-party promises library. */\n        Promise: window.Promise,\n        /* Velocity option defaults, which can be overriden by the user. */\n        defaults: {\n            queue: \"\",\n            duration: DURATION_DEFAULT,\n            easing: EASING_DEFAULT,\n            begin: undefined,\n            complete: undefined,\n            progress: undefined,\n            display: undefined,\n            visibility: undefined,\n            loop: false,\n            delay: false,\n            mobileHA: true,\n            /* Advanced: Set to false to prevent property values from being cached between consecutive Velocity-initiated chain calls. */\n            _cacheValues: true\n        },\n        /* A design goal of Velocity is to cache data wherever possible in order to avoid DOM requerying. Accordingly, each element has a data cache. */\n        init: function (element) {\n            $.data(element, \"velocity\", {\n                /* Store whether this is an SVG element, since its properties are retrieved and updated differently than standard HTML elements. */\n                isSVG: Type.isSVG(element),\n                /* Keep track of whether the element is currently being animated by Velocity.\n                   This is used to ensure that property values are not transferred between non-consecutive (stale) calls. */\n                isAnimating: false,\n                /* A reference to the element's live computedStyle object. Learn more here: https://developer.mozilla.org/en/docs/Web/API/window.getComputedStyle */\n                computedStyle: null,\n                /* Tween data is cached for each animation on the element so that data can be passed across calls --\n                   in particular, end values are used as subsequent start values in consecutive Velocity calls. */\n                tweensContainer: null,\n                /* The full root property values of each CSS hook being animated on this element are cached so that:\n                   1) Concurrently-animating hooks sharing the same root can have their root values' merged into one while tweening.\n                   2) Post-hook-injection root values can be transferred over to consecutively chained Velocity calls as starting root values. */\n                rootPropertyValueCache: {},\n                /* A cache for transform updates, which must be manually flushed via CSS.flushTransformCache(). */\n                transformCache: {}\n            });\n        },\n        /* A parallel to jQuery's $.css(), used for getting/setting Velocity's hooked CSS properties. */\n        hook: null, /* Defined below. */\n        /* Velocity-wide animation time remapping for testing purposes. */\n        mock: false,\n        version: { major: 1, minor: 2, patch: 2 },\n        /* Set to 1 or 2 (most verbose) to output debug info to console. */\n        debug: false\n    };\n\n    /* Retrieve the appropriate scroll anchor and property name for the browser: https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY */\n    if (window.pageYOffset !== undefined) {\n        Velocity.State.scrollAnchor = window;\n        Velocity.State.scrollPropertyLeft = \"pageXOffset\";\n        Velocity.State.scrollPropertyTop = \"pageYOffset\";\n    } else {\n        Velocity.State.scrollAnchor = document.documentElement || document.body.parentNode || document.body;\n        Velocity.State.scrollPropertyLeft = \"scrollLeft\";\n        Velocity.State.scrollPropertyTop = \"scrollTop\";\n    }\n\n    /* Shorthand alias for jQuery's $.data() utility. */\n    function Data (element) {\n        /* Hardcode a reference to the plugin name. */\n        var response = $.data(element, \"velocity\");\n\n        /* jQuery <=1.4.2 returns null instead of undefined when no match is found. We normalize this behavior. */\n        return response === null ? undefined : response;\n    };\n\n    /**************\n        Easing\n    **************/\n\n    /* Step easing generator. */\n    function generateStep (steps) {\n        return function (p) {\n            return Math.round(p * steps) * (1 / steps);\n        };\n    }\n\n    /* Bezier curve function generator. Copyright Gaetan Renaudeau. MIT License: http://en.wikipedia.org/wiki/MIT_License */\n    function generateBezier (mX1, mY1, mX2, mY2) {\n        var NEWTON_ITERATIONS = 4,\n            NEWTON_MIN_SLOPE = 0.001,\n            SUBDIVISION_PRECISION = 0.0000001,\n            SUBDIVISION_MAX_ITERATIONS = 10,\n            kSplineTableSize = 11,\n            kSampleStepSize = 1.0 / (kSplineTableSize - 1.0),\n            float32ArraySupported = \"Float32Array\" in window;\n\n        /* Must contain four arguments. */\n        if (arguments.length !== 4) {\n            return false;\n        }\n\n        /* Arguments must be numbers. */\n        for (var i = 0; i < 4; ++i) {\n            if (typeof arguments[i] !== \"number\" || isNaN(arguments[i]) || !isFinite(arguments[i])) {\n                return false;\n            }\n        }\n\n        /* X values must be in the [0, 1] range. */\n        mX1 = Math.min(mX1, 1);\n        mX2 = Math.min(mX2, 1);\n        mX1 = Math.max(mX1, 0);\n        mX2 = Math.max(mX2, 0);\n\n        var mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n\n        function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\n        function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\n        function C (aA1)      { return 3.0 * aA1; }\n\n        function calcBezier (aT, aA1, aA2) {\n            return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\n        }\n\n        function getSlope (aT, aA1, aA2) {\n            return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n        }\n\n        function newtonRaphsonIterate (aX, aGuessT) {\n            for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n                var currentSlope = getSlope(aGuessT, mX1, mX2);\n\n                if (currentSlope === 0.0) return aGuessT;\n\n                var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n                aGuessT -= currentX / currentSlope;\n            }\n\n            return aGuessT;\n        }\n\n        function calcSampleValues () {\n            for (var i = 0; i < kSplineTableSize; ++i) {\n                mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n            }\n        }\n\n        function binarySubdivide (aX, aA, aB) {\n            var currentX, currentT, i = 0;\n\n            do {\n                currentT = aA + (aB - aA) / 2.0;\n                currentX = calcBezier(currentT, mX1, mX2) - aX;\n                if (currentX > 0.0) {\n                  aB = currentT;\n                } else {\n                  aA = currentT;\n                }\n            } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n\n            return currentT;\n        }\n\n        function getTForX (aX) {\n            var intervalStart = 0.0,\n                currentSample = 1,\n                lastSample = kSplineTableSize - 1;\n\n            for (; currentSample != lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n                intervalStart += kSampleStepSize;\n            }\n\n            --currentSample;\n\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]),\n                guessForT = intervalStart + dist * kSampleStepSize,\n                initialSlope = getSlope(guessForT, mX1, mX2);\n\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\n                return newtonRaphsonIterate(aX, guessForT);\n            } else if (initialSlope == 0.0) {\n                return guessForT;\n            } else {\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize);\n            }\n        }\n\n        var _precomputed = false;\n\n        function precompute() {\n            _precomputed = true;\n            if (mX1 != mY1 || mX2 != mY2) calcSampleValues();\n        }\n\n        var f = function (aX) {\n            if (!_precomputed) precompute();\n            if (mX1 === mY1 && mX2 === mY2) return aX;\n            if (aX === 0) return 0;\n            if (aX === 1) return 1;\n\n            return calcBezier(getTForX(aX), mY1, mY2);\n        };\n\n        f.getControlPoints = function() { return [{ x: mX1, y: mY1 }, { x: mX2, y: mY2 }]; };\n\n        var str = \"generateBezier(\" + [mX1, mY1, mX2, mY2] + \")\";\n        f.toString = function () { return str; };\n\n        return f;\n    }\n\n    /* Runge-Kutta spring physics function generator. Adapted from Framer.js, copyright Koen Bok. MIT License: http://en.wikipedia.org/wiki/MIT_License */\n    /* Given a tension, friction, and duration, a simulation at 60FPS will first run without a defined duration in order to calculate the full path. A second pass\n       then adjusts the time delta -- using the relation between actual time and duration -- to calculate the path for the duration-constrained animation. */\n    var generateSpringRK4 = (function () {\n        function springAccelerationForState (state) {\n            return (-state.tension * state.x) - (state.friction * state.v);\n        }\n\n        function springEvaluateStateWithDerivative (initialState, dt, derivative) {\n            var state = {\n                x: initialState.x + derivative.dx * dt,\n                v: initialState.v + derivative.dv * dt,\n                tension: initialState.tension,\n                friction: initialState.friction\n            };\n\n            return { dx: state.v, dv: springAccelerationForState(state) };\n        }\n\n        function springIntegrateState (state, dt) {\n            var a = {\n                    dx: state.v,\n                    dv: springAccelerationForState(state)\n                },\n                b = springEvaluateStateWithDerivative(state, dt * 0.5, a),\n                c = springEvaluateStateWithDerivative(state, dt * 0.5, b),\n                d = springEvaluateStateWithDerivative(state, dt, c),\n                dxdt = 1.0 / 6.0 * (a.dx + 2.0 * (b.dx + c.dx) + d.dx),\n                dvdt = 1.0 / 6.0 * (a.dv + 2.0 * (b.dv + c.dv) + d.dv);\n\n            state.x = state.x + dxdt * dt;\n            state.v = state.v + dvdt * dt;\n\n            return state;\n        }\n\n        return function springRK4Factory (tension, friction, duration) {\n\n            var initState = {\n                    x: -1,\n                    v: 0,\n                    tension: null,\n                    friction: null\n                },\n                path = [0],\n                time_lapsed = 0,\n                tolerance = 1 / 10000,\n                DT = 16 / 1000,\n                have_duration, dt, last_state;\n\n            tension = parseFloat(tension) || 500;\n            friction = parseFloat(friction) || 20;\n            duration = duration || null;\n\n            initState.tension = tension;\n            initState.friction = friction;\n\n            have_duration = duration !== null;\n\n            /* Calculate the actual time it takes for this animation to complete with the provided conditions. */\n            if (have_duration) {\n                /* Run the simulation without a duration. */\n                time_lapsed = springRK4Factory(tension, friction);\n                /* Compute the adjusted time delta. */\n                dt = time_lapsed / duration * DT;\n            } else {\n                dt = DT;\n            }\n\n            while (true) {\n                /* Next/step function .*/\n                last_state = springIntegrateState(last_state || initState, dt);\n                /* Store the position. */\n                path.push(1 + last_state.x);\n                time_lapsed += 16;\n                /* If the change threshold is reached, break. */\n                if (!(Math.abs(last_state.x) > tolerance && Math.abs(last_state.v) > tolerance)) {\n                    break;\n                }\n            }\n\n            /* If duration is not defined, return the actual time required for completing this animation. Otherwise, return a closure that holds the\n               computed path and returns a snapshot of the position according to a given percentComplete. */\n            return !have_duration ? time_lapsed : function(percentComplete) { return path[ (percentComplete * (path.length - 1)) | 0 ]; };\n        };\n    }());\n\n    /* jQuery easings. */\n    Velocity.Easings = {\n        linear: function(p) { return p; },\n        swing: function(p) { return 0.5 - Math.cos( p * Math.PI ) / 2 },\n        /* Bonus \"spring\" easing, which is a less exaggerated version of easeInOutElastic. */\n        spring: function(p) { return 1 - (Math.cos(p * 4.5 * Math.PI) * Math.exp(-p * 6)); }\n    };\n\n    /* CSS3 and Robert Penner easings. */\n    $.each(\n        [\n            [ \"ease\", [ 0.25, 0.1, 0.25, 1.0 ] ],\n            [ \"ease-in\", [ 0.42, 0.0, 1.00, 1.0 ] ],\n            [ \"ease-out\", [ 0.00, 0.0, 0.58, 1.0 ] ],\n            [ \"ease-in-out\", [ 0.42, 0.0, 0.58, 1.0 ] ],\n            [ \"easeInSine\", [ 0.47, 0, 0.745, 0.715 ] ],\n            [ \"easeOutSine\", [ 0.39, 0.575, 0.565, 1 ] ],\n            [ \"easeInOutSine\", [ 0.445, 0.05, 0.55, 0.95 ] ],\n            [ \"easeInQuad\", [ 0.55, 0.085, 0.68, 0.53 ] ],\n            [ \"easeOutQuad\", [ 0.25, 0.46, 0.45, 0.94 ] ],\n            [ \"easeInOutQuad\", [ 0.455, 0.03, 0.515, 0.955 ] ],\n            [ \"easeInCubic\", [ 0.55, 0.055, 0.675, 0.19 ] ],\n            [ \"easeOutCubic\", [ 0.215, 0.61, 0.355, 1 ] ],\n            [ \"easeInOutCubic\", [ 0.645, 0.045, 0.355, 1 ] ],\n            [ \"easeInQuart\", [ 0.895, 0.03, 0.685, 0.22 ] ],\n            [ \"easeOutQuart\", [ 0.165, 0.84, 0.44, 1 ] ],\n            [ \"easeInOutQuart\", [ 0.77, 0, 0.175, 1 ] ],\n            [ \"easeInQuint\", [ 0.755, 0.05, 0.855, 0.06 ] ],\n            [ \"easeOutQuint\", [ 0.23, 1, 0.32, 1 ] ],\n            [ \"easeInOutQuint\", [ 0.86, 0, 0.07, 1 ] ],\n            [ \"easeInExpo\", [ 0.95, 0.05, 0.795, 0.035 ] ],\n            [ \"easeOutExpo\", [ 0.19, 1, 0.22, 1 ] ],\n            [ \"easeInOutExpo\", [ 1, 0, 0, 1 ] ],\n            [ \"easeInCirc\", [ 0.6, 0.04, 0.98, 0.335 ] ],\n            [ \"easeOutCirc\", [ 0.075, 0.82, 0.165, 1 ] ],\n            [ \"easeInOutCirc\", [ 0.785, 0.135, 0.15, 0.86 ] ]\n        ], function(i, easingArray) {\n            Velocity.Easings[easingArray[0]] = generateBezier.apply(null, easingArray[1]);\n        });\n\n    /* Determine the appropriate easing type given an easing input. */\n    function getEasing(value, duration) {\n        var easing = value;\n\n        /* The easing option can either be a string that references a pre-registered easing,\n           or it can be a two-/four-item array of integers to be converted into a bezier/spring function. */\n        if (Type.isString(value)) {\n            /* Ensure that the easing has been assigned to jQuery's Velocity.Easings object. */\n            if (!Velocity.Easings[value]) {\n                easing = false;\n            }\n        } else if (Type.isArray(value) && value.length === 1) {\n            easing = generateStep.apply(null, value);\n        } else if (Type.isArray(value) && value.length === 2) {\n            /* springRK4 must be passed the animation's duration. */\n            /* Note: If the springRK4 array contains non-numbers, generateSpringRK4() returns an easing\n               function generated with default tension and friction values. */\n            easing = generateSpringRK4.apply(null, value.concat([ duration ]));\n        } else if (Type.isArray(value) && value.length === 4) {\n            /* Note: If the bezier array contains non-numbers, generateBezier() returns false. */\n            easing = generateBezier.apply(null, value);\n        } else {\n            easing = false;\n        }\n\n        /* Revert to the Velocity-wide default easing type, or fall back to \"swing\" (which is also jQuery's default)\n           if the Velocity-wide default has been incorrectly modified. */\n        if (easing === false) {\n            if (Velocity.Easings[Velocity.defaults.easing]) {\n                easing = Velocity.defaults.easing;\n            } else {\n                easing = EASING_DEFAULT;\n            }\n        }\n\n        return easing;\n    }\n\n    /*****************\n        CSS Stack\n    *****************/\n\n    /* The CSS object is a highly condensed and performant CSS stack that fully replaces jQuery's.\n       It handles the validation, getting, and setting of both standard CSS properties and CSS property hooks. */\n    /* Note: A \"CSS\" shorthand is aliased so that our code is easier to read. */\n    var CSS = Velocity.CSS = {\n\n        /*************\n            RegEx\n        *************/\n\n        RegEx: {\n            isHex: /^#([A-f\\d]{3}){1,2}$/i,\n            /* Unwrap a property value's surrounding text, e.g. \"rgba(4, 3, 2, 1)\" ==> \"4, 3, 2, 1\" and \"rect(4px 3px 2px 1px)\" ==> \"4px 3px 2px 1px\". */\n            valueUnwrap: /^[A-z]+\\((.*)\\)$/i,\n            wrappedValueAlreadyExtracted: /[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,\n            /* Split a multi-value property into an array of subvalues, e.g. \"rgba(4, 3, 2, 1) 4px 3px 2px 1px\" ==> [ \"rgba(4, 3, 2, 1)\", \"4px\", \"3px\", \"2px\", \"1px\" ]. */\n            valueSplit: /([A-z]+\\(.+\\))|(([A-z0-9#-.]+?)(?=\\s|$))/ig\n        },\n\n        /************\n            Lists\n        ************/\n\n        Lists: {\n            colors: [ \"fill\", \"stroke\", \"stopColor\", \"color\", \"backgroundColor\", \"borderColor\", \"borderTopColor\", \"borderRightColor\", \"borderBottomColor\", \"borderLeftColor\", \"outlineColor\" ],\n            transformsBase: [ \"translateX\", \"translateY\", \"scale\", \"scaleX\", \"scaleY\", \"skewX\", \"skewY\", \"rotateZ\" ],\n            transforms3D: [ \"transformPerspective\", \"translateZ\", \"scaleZ\", \"rotateX\", \"rotateY\" ]\n        },\n\n        /************\n            Hooks\n        ************/\n\n        /* Hooks allow a subproperty (e.g. \"boxShadowBlur\") of a compound-value CSS property\n           (e.g. \"boxShadow: X Y Blur Spread Color\") to be animated as if it were a discrete property. */\n        /* Note: Beyond enabling fine-grained property animation, hooking is necessary since Velocity only\n           tweens properties with single numeric values; unlike CSS transitions, Velocity does not interpolate compound-values. */\n        Hooks: {\n            /********************\n                Registration\n            ********************/\n\n            /* Templates are a concise way of indicating which subproperties must be individually registered for each compound-value CSS property. */\n            /* Each template consists of the compound-value's base name, its constituent subproperty names, and those subproperties' default values. */\n            templates: {\n                \"textShadow\": [ \"Color X Y Blur\", \"black 0px 0px 0px\" ],\n                \"boxShadow\": [ \"Color X Y Blur Spread\", \"black 0px 0px 0px 0px\" ],\n                \"clip\": [ \"Top Right Bottom Left\", \"0px 0px 0px 0px\" ],\n                \"backgroundPosition\": [ \"X Y\", \"0% 0%\" ],\n                \"transformOrigin\": [ \"X Y Z\", \"50% 50% 0px\" ],\n                \"perspectiveOrigin\": [ \"X Y\", \"50% 50%\" ]\n            },\n\n            /* A \"registered\" hook is one that has been converted from its template form into a live,\n               tweenable property. It contains data to associate it with its root property. */\n            registered: {\n                /* Note: A registered hook looks like this ==> textShadowBlur: [ \"textShadow\", 3 ],\n                   which consists of the subproperty's name, the associated root property's name,\n                   and the subproperty's position in the root's value. */\n            },\n            /* Convert the templates into individual hooks then append them to the registered object above. */\n            register: function () {\n                /* Color hooks registration: Colors are defaulted to white -- as opposed to black -- since colors that are\n                   currently set to \"transparent\" default to their respective template below when color-animated,\n                   and white is typically a closer match to transparent than black is. An exception is made for text (\"color\"),\n                   which is almost always set closer to black than white. */\n                for (var i = 0; i < CSS.Lists.colors.length; i++) {\n                    var rgbComponents = (CSS.Lists.colors[i] === \"color\") ? \"0 0 0 1\" : \"255 255 255 1\";\n                    CSS.Hooks.templates[CSS.Lists.colors[i]] = [ \"Red Green Blue Alpha\", rgbComponents ];\n                }\n\n                var rootProperty,\n                    hookTemplate,\n                    hookNames;\n\n                /* In IE, color values inside compound-value properties are positioned at the end the value instead of at the beginning.\n                   Thus, we re-arrange the templates accordingly. */\n                if (IE) {\n                    for (rootProperty in CSS.Hooks.templates) {\n                        hookTemplate = CSS.Hooks.templates[rootProperty];\n                        hookNames = hookTemplate[0].split(\" \");\n\n                        var defaultValues = hookTemplate[1].match(CSS.RegEx.valueSplit);\n\n                        if (hookNames[0] === \"Color\") {\n                            /* Reposition both the hook's name and its default value to the end of their respective strings. */\n                            hookNames.push(hookNames.shift());\n                            defaultValues.push(defaultValues.shift());\n\n                            /* Replace the existing template for the hook's root property. */\n                            CSS.Hooks.templates[rootProperty] = [ hookNames.join(\" \"), defaultValues.join(\" \") ];\n                        }\n                    }\n                }\n\n                /* Hook registration. */\n                for (rootProperty in CSS.Hooks.templates) {\n                    hookTemplate = CSS.Hooks.templates[rootProperty];\n                    hookNames = hookTemplate[0].split(\" \");\n\n                    for (var i in hookNames) {\n                        var fullHookName = rootProperty + hookNames[i],\n                            hookPosition = i;\n\n                        /* For each hook, register its full name (e.g. textShadowBlur) with its root property (e.g. textShadow)\n                           and the hook's position in its template's default value string. */\n                        CSS.Hooks.registered[fullHookName] = [ rootProperty, hookPosition ];\n                    }\n                }\n            },\n\n            /*****************************\n               Injection and Extraction\n            *****************************/\n\n            /* Look up the root property associated with the hook (e.g. return \"textShadow\" for \"textShadowBlur\"). */\n            /* Since a hook cannot be set directly (the browser won't recognize it), style updating for hooks is routed through the hook's root property. */\n            getRoot: function (property) {\n                var hookData = CSS.Hooks.registered[property];\n\n                if (hookData) {\n                    return hookData[0];\n                } else {\n                    /* If there was no hook match, return the property name untouched. */\n                    return property;\n                }\n            },\n            /* Convert any rootPropertyValue, null or otherwise, into a space-delimited list of hook values so that\n               the targeted hook can be injected or extracted at its standard position. */\n            cleanRootPropertyValue: function(rootProperty, rootPropertyValue) {\n                /* If the rootPropertyValue is wrapped with \"rgb()\", \"clip()\", etc., remove the wrapping to normalize the value before manipulation. */\n                if (CSS.RegEx.valueUnwrap.test(rootPropertyValue)) {\n                    rootPropertyValue = rootPropertyValue.match(CSS.RegEx.valueUnwrap)[1];\n                }\n\n                /* If rootPropertyValue is a CSS null-value (from which there's inherently no hook value to extract),\n                   default to the root's default value as defined in CSS.Hooks.templates. */\n                /* Note: CSS null-values include \"none\", \"auto\", and \"transparent\". They must be converted into their\n                   zero-values (e.g. textShadow: \"none\" ==> textShadow: \"0px 0px 0px black\") for hook manipulation to proceed. */\n                if (CSS.Values.isCSSNullValue(rootPropertyValue)) {\n                    rootPropertyValue = CSS.Hooks.templates[rootProperty][1];\n                }\n\n                return rootPropertyValue;\n            },\n            /* Extracted the hook's value from its root property's value. This is used to get the starting value of an animating hook. */\n            extractValue: function (fullHookName, rootPropertyValue) {\n                var hookData = CSS.Hooks.registered[fullHookName];\n\n                if (hookData) {\n                    var hookRoot = hookData[0],\n                        hookPosition = hookData[1];\n\n                    rootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);\n\n                    /* Split rootPropertyValue into its constituent hook values then grab the desired hook at its standard position. */\n                    return rootPropertyValue.toString().match(CSS.RegEx.valueSplit)[hookPosition];\n                } else {\n                    /* If the provided fullHookName isn't a registered hook, return the rootPropertyValue that was passed in. */\n                    return rootPropertyValue;\n                }\n            },\n            /* Inject the hook's value into its root property's value. This is used to piece back together the root property\n               once Velocity has updated one of its individually hooked values through tweening. */\n            injectValue: function (fullHookName, hookValue, rootPropertyValue) {\n                var hookData = CSS.Hooks.registered[fullHookName];\n\n                if (hookData) {\n                    var hookRoot = hookData[0],\n                        hookPosition = hookData[1],\n                        rootPropertyValueParts,\n                        rootPropertyValueUpdated;\n\n                    rootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);\n\n                    /* Split rootPropertyValue into its individual hook values, replace the targeted value with hookValue,\n                       then reconstruct the rootPropertyValue string. */\n                    rootPropertyValueParts = rootPropertyValue.toString().match(CSS.RegEx.valueSplit);\n                    rootPropertyValueParts[hookPosition] = hookValue;\n                    rootPropertyValueUpdated = rootPropertyValueParts.join(\" \");\n\n                    return rootPropertyValueUpdated;\n                } else {\n                    /* If the provided fullHookName isn't a registered hook, return the rootPropertyValue that was passed in. */\n                    return rootPropertyValue;\n                }\n            }\n        },\n\n        /*******************\n           Normalizations\n        *******************/\n\n        /* Normalizations standardize CSS property manipulation by pollyfilling browser-specific implementations (e.g. opacity)\n           and reformatting special properties (e.g. clip, rgba) to look like standard ones. */\n        Normalizations: {\n            /* Normalizations are passed a normalization target (either the property's name, its extracted value, or its injected value),\n               the targeted element (which may need to be queried), and the targeted property value. */\n            registered: {\n                clip: function (type, element, propertyValue) {\n                    switch (type) {\n                        case \"name\":\n                            return \"clip\";\n                        /* Clip needs to be unwrapped and stripped of its commas during extraction. */\n                        case \"extract\":\n                            var extracted;\n\n                            /* If Velocity also extracted this value, skip extraction. */\n                            if (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {\n                                extracted = propertyValue;\n                            } else {\n                                /* Remove the \"rect()\" wrapper. */\n                                extracted = propertyValue.toString().match(CSS.RegEx.valueUnwrap);\n\n                                /* Strip off commas. */\n                                extracted = extracted ? extracted[1].replace(/,(\\s+)?/g, \" \") : propertyValue;\n                            }\n\n                            return extracted;\n                        /* Clip needs to be re-wrapped during injection. */\n                        case \"inject\":\n                            return \"rect(\" + propertyValue + \")\";\n                    }\n                },\n\n                blur: function(type, element, propertyValue) {\n                    switch (type) {\n                        case \"name\":\n                            return Velocity.State.isFirefox ? \"filter\" : \"-webkit-filter\";\n                        case \"extract\":\n                            var extracted = parseFloat(propertyValue);\n\n                            /* If extracted is NaN, meaning the value isn't already extracted. */\n                            if (!(extracted || extracted === 0)) {\n                                var blurComponent = propertyValue.toString().match(/blur\\(([0-9]+[A-z]+)\\)/i);\n\n                                /* If the filter string had a blur component, return just the blur value and unit type. */\n                                if (blurComponent) {\n                                    extracted = blurComponent[1];\n                                /* If the component doesn't exist, default blur to 0. */\n                                } else {\n                                    extracted = 0;\n                                }\n                            }\n\n                            return extracted;\n                        /* Blur needs to be re-wrapped during injection. */\n                        case \"inject\":\n                            /* For the blur effect to be fully de-applied, it needs to be set to \"none\" instead of 0. */\n                            if (!parseFloat(propertyValue)) {\n                                return \"none\";\n                            } else {\n                                return \"blur(\" + propertyValue + \")\";\n                            }\n                    }\n                },\n\n                /* <=IE8 do not support the standard opacity property. They use filter:alpha(opacity=INT) instead. */\n                opacity: function (type, element, propertyValue) {\n                    if (IE <= 8) {\n                        switch (type) {\n                            case \"name\":\n                                return \"filter\";\n                            case \"extract\":\n                                /* <=IE8 return a \"filter\" value of \"alpha(opacity=\\d{1,3})\".\n                                   Extract the value and convert it to a decimal value to match the standard CSS opacity property's formatting. */\n                                var extracted = propertyValue.toString().match(/alpha\\(opacity=(.*)\\)/i);\n\n                                if (extracted) {\n                                    /* Convert to decimal value. */\n                                    propertyValue = extracted[1] / 100;\n                                } else {\n                                    /* When extracting opacity, default to 1 since a null value means opacity hasn't been set. */\n                                    propertyValue = 1;\n                                }\n\n                                return propertyValue;\n                            case \"inject\":\n                                /* Opacified elements are required to have their zoom property set to a non-zero value. */\n                                element.style.zoom = 1;\n\n                                /* Setting the filter property on elements with certain font property combinations can result in a\n                                   highly unappealing ultra-bolding effect. There's no way to remedy this throughout a tween, but dropping the\n                                   value altogether (when opacity hits 1) at leasts ensures that the glitch is gone post-tweening. */\n                                if (parseFloat(propertyValue) >= 1) {\n                                    return \"\";\n                                } else {\n                                  /* As per the filter property's spec, convert the decimal value to a whole number and wrap the value. */\n                                  return \"alpha(opacity=\" + parseInt(parseFloat(propertyValue) * 100, 10) + \")\";\n                                }\n                        }\n                    /* With all other browsers, normalization is not required; return the same values that were passed in. */\n                    } else {\n                        switch (type) {\n                            case \"name\":\n                                return \"opacity\";\n                            case \"extract\":\n                                return propertyValue;\n                            case \"inject\":\n                                return propertyValue;\n                        }\n                    }\n                }\n            },\n\n            /*****************************\n                Batched Registrations\n            *****************************/\n\n            /* Note: Batched normalizations extend the CSS.Normalizations.registered object. */\n            register: function () {\n\n                /*****************\n                    Transforms\n                *****************/\n\n                /* Transforms are the subproperties contained by the CSS \"transform\" property. Transforms must undergo normalization\n                   so that they can be referenced in a properties map by their individual names. */\n                /* Note: When transforms are \"set\", they are actually assigned to a per-element transformCache. When all transform\n                   setting is complete complete, CSS.flushTransformCache() must be manually called to flush the values to the DOM.\n                   Transform setting is batched in this way to improve performance: the transform style only needs to be updated\n                   once when multiple transform subproperties are being animated simultaneously. */\n                /* Note: IE9 and Android Gingerbread have support for 2D -- but not 3D -- transforms. Since animating unsupported\n                   transform properties results in the browser ignoring the *entire* transform string, we prevent these 3D values\n                   from being normalized for these browsers so that tweening skips these properties altogether\n                   (since it will ignore them as being unsupported by the browser.) */\n                if (!(IE <= 9) && !Velocity.State.isGingerbread) {\n                    /* Note: Since the standalone CSS \"perspective\" property and the CSS transform \"perspective\" subproperty\n                    share the same name, the latter is given a unique token within Velocity: \"transformPerspective\". */\n                    CSS.Lists.transformsBase = CSS.Lists.transformsBase.concat(CSS.Lists.transforms3D);\n                }\n\n                for (var i = 0; i < CSS.Lists.transformsBase.length; i++) {\n                    /* Wrap the dynamically generated normalization function in a new scope so that transformName's value is\n                    paired with its respective function. (Otherwise, all functions would take the final for loop's transformName.) */\n                    (function() {\n                        var transformName = CSS.Lists.transformsBase[i];\n\n                        CSS.Normalizations.registered[transformName] = function (type, element, propertyValue) {\n                            switch (type) {\n                                /* The normalized property name is the parent \"transform\" property -- the property that is actually set in CSS. */\n                                case \"name\":\n                                    return \"transform\";\n                                /* Transform values are cached onto a per-element transformCache object. */\n                                case \"extract\":\n                                    /* If this transform has yet to be assigned a value, return its null value. */\n                                    if (Data(element) === undefined || Data(element).transformCache[transformName] === undefined) {\n                                        /* Scale CSS.Lists.transformsBase default to 1 whereas all other transform properties default to 0. */\n                                        return /^scale/i.test(transformName) ? 1 : 0;\n                                    /* When transform values are set, they are wrapped in parentheses as per the CSS spec.\n                                       Thus, when extracting their values (for tween calculations), we strip off the parentheses. */\n                                    } else {\n                                        return Data(element).transformCache[transformName].replace(/[()]/g, \"\");\n                                    }\n                                case \"inject\":\n                                    var invalid = false;\n\n                                    /* If an individual transform property contains an unsupported unit type, the browser ignores the *entire* transform property.\n                                       Thus, protect users from themselves by skipping setting for transform values supplied with invalid unit types. */\n                                    /* Switch on the base transform type; ignore the axis by removing the last letter from the transform's name. */\n                                    switch (transformName.substr(0, transformName.length - 1)) {\n                                        /* Whitelist unit types for each transform. */\n                                        case \"translate\":\n                                            invalid = !/(%|px|em|rem|vw|vh|\\d)$/i.test(propertyValue);\n                                            break;\n                                        /* Since an axis-free \"scale\" property is supported as well, a little hack is used here to detect it by chopping off its last letter. */\n                                        case \"scal\":\n                                        case \"scale\":\n                                            /* Chrome on Android has a bug in which scaled elements blur if their initial scale\n                                               value is below 1 (which can happen with forcefeeding). Thus, we detect a yet-unset scale property\n                                               and ensure that its first value is always 1. More info: http://stackoverflow.com/questions/10417890/css3-animations-with-transform-causes-blurred-elements-on-webkit/10417962#10417962 */\n                                            if (Velocity.State.isAndroid && Data(element).transformCache[transformName] === undefined && propertyValue < 1) {\n                                                propertyValue = 1;\n                                            }\n\n                                            invalid = !/(\\d)$/i.test(propertyValue);\n                                            break;\n                                        case \"skew\":\n                                            invalid = !/(deg|\\d)$/i.test(propertyValue);\n                                            break;\n                                        case \"rotate\":\n                                            invalid = !/(deg|\\d)$/i.test(propertyValue);\n                                            break;\n                                    }\n\n                                    if (!invalid) {\n                                        /* As per the CSS spec, wrap the value in parentheses. */\n                                        Data(element).transformCache[transformName] = \"(\" + propertyValue + \")\";\n                                    }\n\n                                    /* Although the value is set on the transformCache object, return the newly-updated value for the calling code to process as normal. */\n                                    return Data(element).transformCache[transformName];\n                            }\n                        };\n                    })();\n                }\n\n                /*************\n                    Colors\n                *************/\n\n                /* Since Velocity only animates a single numeric value per property, color animation is achieved by hooking the individual RGBA components of CSS color properties.\n                   Accordingly, color values must be normalized (e.g. \"#ff0000\", \"red\", and \"rgb(255, 0, 0)\" ==> \"255 0 0 1\") so that their components can be injected/extracted by CSS.Hooks logic. */\n                for (var i = 0; i < CSS.Lists.colors.length; i++) {\n                    /* Wrap the dynamically generated normalization function in a new scope so that colorName's value is paired with its respective function.\n                       (Otherwise, all functions would take the final for loop's colorName.) */\n                    (function () {\n                        var colorName = CSS.Lists.colors[i];\n\n                        /* Note: In IE<=8, which support rgb but not rgba, color properties are reverted to rgb by stripping off the alpha component. */\n                        CSS.Normalizations.registered[colorName] = function(type, element, propertyValue) {\n                            switch (type) {\n                                case \"name\":\n                                    return colorName;\n                                /* Convert all color values into the rgb format. (Old IE can return hex values and color names instead of rgb/rgba.) */\n                                case \"extract\":\n                                    var extracted;\n\n                                    /* If the color is already in its hookable form (e.g. \"255 255 255 1\") due to having been previously extracted, skip extraction. */\n                                    if (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {\n                                        extracted = propertyValue;\n                                    } else {\n                                        var converted,\n                                            colorNames = {\n                                                black: \"rgb(0, 0, 0)\",\n                                                blue: \"rgb(0, 0, 255)\",\n                                                gray: \"rgb(128, 128, 128)\",\n                                                green: \"rgb(0, 128, 0)\",\n                                                red: \"rgb(255, 0, 0)\",\n                                                white: \"rgb(255, 255, 255)\"\n                                            };\n\n                                        /* Convert color names to rgb. */\n                                        if (/^[A-z]+$/i.test(propertyValue)) {\n                                            if (colorNames[propertyValue] !== undefined) {\n                                                converted = colorNames[propertyValue]\n                                            } else {\n                                                /* If an unmatched color name is provided, default to black. */\n                                                converted = colorNames.black;\n                                            }\n                                        /* Convert hex values to rgb. */\n                                        } else if (CSS.RegEx.isHex.test(propertyValue)) {\n                                            converted = \"rgb(\" + CSS.Values.hexToRgb(propertyValue).join(\" \") + \")\";\n                                        /* If the provided color doesn't match any of the accepted color formats, default to black. */\n                                        } else if (!(/^rgba?\\(/i.test(propertyValue))) {\n                                            converted = colorNames.black;\n                                        }\n\n                                        /* Remove the surrounding \"rgb/rgba()\" string then replace commas with spaces and strip\n                                           repeated spaces (in case the value included spaces to begin with). */\n                                        extracted = (converted || propertyValue).toString().match(CSS.RegEx.valueUnwrap)[1].replace(/,(\\s+)?/g, \" \");\n                                    }\n\n                                    /* So long as this isn't <=IE8, add a fourth (alpha) component if it's missing and default it to 1 (visible). */\n                                    if (!(IE <= 8) && extracted.split(\" \").length === 3) {\n                                        extracted += \" 1\";\n                                    }\n\n                                    return extracted;\n                                case \"inject\":\n                                    /* If this is IE<=8 and an alpha component exists, strip it off. */\n                                    if (IE <= 8) {\n                                        if (propertyValue.split(\" \").length === 4) {\n                                            propertyValue = propertyValue.split(/\\s+/).slice(0, 3).join(\" \");\n                                        }\n                                    /* Otherwise, add a fourth (alpha) component if it's missing and default it to 1 (visible). */\n                                    } else if (propertyValue.split(\" \").length === 3) {\n                                        propertyValue += \" 1\";\n                                    }\n\n                                    /* Re-insert the browser-appropriate wrapper(\"rgb/rgba()\"), insert commas, and strip off decimal units\n                                       on all values but the fourth (R, G, and B only accept whole numbers). */\n                                    return (IE <= 8 ? \"rgb\" : \"rgba\") + \"(\" + propertyValue.replace(/\\s+/g, \",\").replace(/\\.(\\d)+(?=,)/g, \"\") + \")\";\n                            }\n                        };\n                    })();\n                }\n            }\n        },\n\n        /************************\n           CSS Property Names\n        ************************/\n\n        Names: {\n            /* Camelcase a property name into its JavaScript notation (e.g. \"background-color\" ==> \"backgroundColor\").\n               Camelcasing is used to normalize property names between and across calls. */\n            camelCase: function (property) {\n                return property.replace(/-(\\w)/g, function (match, subMatch) {\n                    return subMatch.toUpperCase();\n                });\n            },\n\n            /* For SVG elements, some properties (namely, dimensional ones) are GET/SET via the element's HTML attributes (instead of via CSS styles). */\n            SVGAttribute: function (property) {\n                var SVGAttributes = \"width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2\";\n\n                /* Certain browsers require an SVG transform to be applied as an attribute. (Otherwise, application via CSS is preferable due to 3D support.) */\n                if (IE || (Velocity.State.isAndroid && !Velocity.State.isChrome)) {\n                    SVGAttributes += \"|transform\";\n                }\n\n                return new RegExp(\"^(\" + SVGAttributes + \")$\", \"i\").test(property);\n            },\n\n            /* Determine whether a property should be set with a vendor prefix. */\n            /* If a prefixed version of the property exists, return it. Otherwise, return the original property name.\n               If the property is not at all supported by the browser, return a false flag. */\n            prefixCheck: function (property) {\n                /* If this property has already been checked, return the cached value. */\n                if (Velocity.State.prefixMatches[property]) {\n                    return [ Velocity.State.prefixMatches[property], true ];\n                } else {\n                    var vendors = [ \"\", \"Webkit\", \"Moz\", \"ms\", \"O\" ];\n\n                    for (var i = 0, vendorsLength = vendors.length; i < vendorsLength; i++) {\n                        var propertyPrefixed;\n\n                        if (i === 0) {\n                            propertyPrefixed = property;\n                        } else {\n                            /* Capitalize the first letter of the property to conform to JavaScript vendor prefix notation (e.g. webkitFilter). */\n                            propertyPrefixed = vendors[i] + property.replace(/^\\w/, function(match) { return match.toUpperCase(); });\n                        }\n\n                        /* Check if the browser supports this property as prefixed. */\n                        if (Type.isString(Velocity.State.prefixElement.style[propertyPrefixed])) {\n                            /* Cache the match. */\n                            Velocity.State.prefixMatches[property] = propertyPrefixed;\n\n                            return [ propertyPrefixed, true ];\n                        }\n                    }\n\n                    /* If the browser doesn't support this property in any form, include a false flag so that the caller can decide how to proceed. */\n                    return [ property, false ];\n                }\n            }\n        },\n\n        /************************\n           CSS Property Values\n        ************************/\n\n        Values: {\n            /* Hex to RGB conversion. Copyright Tim Down: http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb */\n            hexToRgb: function (hex) {\n                var shortformRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,\n                    longformRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i,\n                    rgbParts;\n\n                hex = hex.replace(shortformRegex, function (m, r, g, b) {\n                    return r + r + g + g + b + b;\n                });\n\n                rgbParts = longformRegex.exec(hex);\n\n                return rgbParts ? [ parseInt(rgbParts[1], 16), parseInt(rgbParts[2], 16), parseInt(rgbParts[3], 16) ] : [ 0, 0, 0 ];\n            },\n\n            isCSSNullValue: function (value) {\n                /* The browser defaults CSS values that have not been set to either 0 or one of several possible null-value strings.\n                   Thus, we check for both falsiness and these special strings. */\n                /* Null-value checking is performed to default the special strings to 0 (for the sake of tweening) or their hook\n                   templates as defined as CSS.Hooks (for the sake of hook injection/extraction). */\n                /* Note: Chrome returns \"rgba(0, 0, 0, 0)\" for an undefined color whereas IE returns \"transparent\". */\n                return (value == 0 || /^(none|auto|transparent|(rgba\\(0, ?0, ?0, ?0\\)))$/i.test(value));\n            },\n\n            /* Retrieve a property's default unit type. Used for assigning a unit type when one is not supplied by the user. */\n            getUnitType: function (property) {\n                if (/^(rotate|skew)/i.test(property)) {\n                    return \"deg\";\n                } else if (/(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(property)) {\n                    /* The above properties are unitless. */\n                    return \"\";\n                } else {\n                    /* Default to px for all other properties. */\n                    return \"px\";\n                }\n            },\n\n            /* HTML elements default to an associated display type when they're not set to display:none. */\n            /* Note: This function is used for correctly setting the non-\"none\" display value in certain Velocity redirects, such as fadeIn/Out. */\n            getDisplayType: function (element) {\n                var tagName = element && element.tagName.toString().toLowerCase();\n\n                if (/^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(tagName)) {\n                    return \"inline\";\n                } else if (/^(li)$/i.test(tagName)) {\n                    return \"list-item\";\n                } else if (/^(tr)$/i.test(tagName)) {\n                    return \"table-row\";\n                } else if (/^(table)$/i.test(tagName)) {\n                    return \"table\";\n                } else if (/^(tbody)$/i.test(tagName)) {\n                    return \"table-row-group\";\n                /* Default to \"block\" when no match is found. */\n                } else {\n                    return \"block\";\n                }\n            },\n\n            /* The class add/remove functions are used to temporarily apply a \"velocity-animating\" class to elements while they're animating. */\n            addClass: function (element, className) {\n                if (element.classList) {\n                    element.classList.add(className);\n                } else {\n                    element.className += (element.className.length ? \" \" : \"\") + className;\n                }\n            },\n\n            removeClass: function (element, className) {\n                if (element.classList) {\n                    element.classList.remove(className);\n                } else {\n                    element.className = element.className.toString().replace(new RegExp(\"(^|\\\\s)\" + className.split(\" \").join(\"|\") + \"(\\\\s|$)\", \"gi\"), \" \");\n                }\n            }\n        },\n\n        /****************************\n           Style Getting & Setting\n        ****************************/\n\n        /* The singular getPropertyValue, which routes the logic for all normalizations, hooks, and standard CSS properties. */\n        getPropertyValue: function (element, property, rootPropertyValue, forceStyleLookup) {\n            /* Get an element's computed property value. */\n            /* Note: Retrieving the value of a CSS property cannot simply be performed by checking an element's\n               style attribute (which only reflects user-defined values). Instead, the browser must be queried for a property's\n               *computed* value. You can read more about getComputedStyle here: https://developer.mozilla.org/en/docs/Web/API/window.getComputedStyle */\n            function computePropertyValue (element, property) {\n                /* When box-sizing isn't set to border-box, height and width style values are incorrectly computed when an\n                   element's scrollbars are visible (which expands the element's dimensions). Thus, we defer to the more accurate\n                   offsetHeight/Width property, which includes the total dimensions for interior, border, padding, and scrollbar.\n                   We subtract border and padding to get the sum of interior + scrollbar. */\n                var computedValue = 0;\n\n                /* IE<=8 doesn't support window.getComputedStyle, thus we defer to jQuery, which has an extensive array\n                   of hacks to accurately retrieve IE8 property values. Re-implementing that logic here is not worth bloating the\n                   codebase for a dying browser. The performance repercussions of using jQuery here are minimal since\n                   Velocity is optimized to rarely (and sometimes never) query the DOM. Further, the $.css() codepath isn't that slow. */\n                if (IE <= 8) {\n                    computedValue = $.css(element, property); /* GET */\n                /* All other browsers support getComputedStyle. The returned live object reference is cached onto its\n                   associated element so that it does not need to be refetched upon every GET. */\n                } else {\n                    /* Browsers do not return height and width values for elements that are set to display:\"none\". Thus, we temporarily\n                       toggle display to the element type's default value. */\n                    var toggleDisplay = false;\n\n                    if (/^(width|height)$/.test(property) && CSS.getPropertyValue(element, \"display\") === 0) {\n                        toggleDisplay = true;\n                        CSS.setPropertyValue(element, \"display\", CSS.Values.getDisplayType(element));\n                    }\n\n                    function revertDisplay () {\n                        if (toggleDisplay) {\n                            CSS.setPropertyValue(element, \"display\", \"none\");\n                        }\n                    }\n\n                    if (!forceStyleLookup) {\n                        if (property === \"height\" && CSS.getPropertyValue(element, \"boxSizing\").toString().toLowerCase() !== \"border-box\") {\n                            var contentBoxHeight = element.offsetHeight - (parseFloat(CSS.getPropertyValue(element, \"borderTopWidth\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"borderBottomWidth\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"paddingTop\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"paddingBottom\")) || 0);\n                            revertDisplay();\n\n                            return contentBoxHeight;\n                        } else if (property === \"width\" && CSS.getPropertyValue(element, \"boxSizing\").toString().toLowerCase() !== \"border-box\") {\n                            var contentBoxWidth = element.offsetWidth - (parseFloat(CSS.getPropertyValue(element, \"borderLeftWidth\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"borderRightWidth\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"paddingLeft\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"paddingRight\")) || 0);\n                            revertDisplay();\n\n                            return contentBoxWidth;\n                        }\n                    }\n\n                    var computedStyle;\n\n                    /* For elements that Velocity hasn't been called on directly (e.g. when Velocity queries the DOM on behalf\n                       of a parent of an element its animating), perform a direct getComputedStyle lookup since the object isn't cached. */\n                    if (Data(element) === undefined) {\n                        computedStyle = window.getComputedStyle(element, null); /* GET */\n                    /* If the computedStyle object has yet to be cached, do so now. */\n                    } else if (!Data(element).computedStyle) {\n                        computedStyle = Data(element).computedStyle = window.getComputedStyle(element, null); /* GET */\n                    /* If computedStyle is cached, use it. */\n                    } else {\n                        computedStyle = Data(element).computedStyle;\n                    }\n\n                    /* IE and Firefox do not return a value for the generic borderColor -- they only return individual values for each border side's color.\n                       Also, in all browsers, when border colors aren't all the same, a compound value is returned that Velocity isn't setup to parse.\n                       So, as a polyfill for querying individual border side colors, we just return the top border's color and animate all borders from that value. */\n                    if (property === \"borderColor\") {\n                        property = \"borderTopColor\";\n                    }\n\n                    /* IE9 has a bug in which the \"filter\" property must be accessed from computedStyle using the getPropertyValue method\n                       instead of a direct property lookup. The getPropertyValue method is slower than a direct lookup, which is why we avoid it by default. */\n                    if (IE === 9 && property === \"filter\") {\n                        computedValue = computedStyle.getPropertyValue(property); /* GET */\n                    } else {\n                        computedValue = computedStyle[property];\n                    }\n\n                    /* Fall back to the property's style value (if defined) when computedValue returns nothing,\n                       which can happen when the element hasn't been painted. */\n                    if (computedValue === \"\" || computedValue === null) {\n                        computedValue = element.style[property];\n                    }\n\n                    revertDisplay();\n                }\n\n                /* For top, right, bottom, and left (TRBL) values that are set to \"auto\" on elements of \"fixed\" or \"absolute\" position,\n                   defer to jQuery for converting \"auto\" to a numeric value. (For elements with a \"static\" or \"relative\" position, \"auto\" has the same\n                   effect as being set to 0, so no conversion is necessary.) */\n                /* An example of why numeric conversion is necessary: When an element with \"position:absolute\" has an untouched \"left\"\n                   property, which reverts to \"auto\", left's value is 0 relative to its parent element, but is often non-zero relative\n                   to its *containing* (not parent) element, which is the nearest \"position:relative\" ancestor or the viewport (and always the viewport in the case of \"position:fixed\"). */\n                if (computedValue === \"auto\" && /^(top|right|bottom|left)$/i.test(property)) {\n                    var position = computePropertyValue(element, \"position\"); /* GET */\n\n                    /* For absolute positioning, jQuery's $.position() only returns values for top and left;\n                       right and bottom will have their \"auto\" value reverted to 0. */\n                    /* Note: A jQuery object must be created here since jQuery doesn't have a low-level alias for $.position().\n                       Not a big deal since we're currently in a GET batch anyway. */\n                    if (position === \"fixed\" || (position === \"absolute\" && /top|left/i.test(property))) {\n                        /* Note: jQuery strips the pixel unit from its returned values; we re-add it here to conform with computePropertyValue's behavior. */\n                        computedValue = $(element).position()[property] + \"px\"; /* GET */\n                    }\n                }\n\n                return computedValue;\n            }\n\n            var propertyValue;\n\n            /* If this is a hooked property (e.g. \"clipLeft\" instead of the root property of \"clip\"),\n               extract the hook's value from a normalized rootPropertyValue using CSS.Hooks.extractValue(). */\n            if (CSS.Hooks.registered[property]) {\n                var hook = property,\n                    hookRoot = CSS.Hooks.getRoot(hook);\n\n                /* If a cached rootPropertyValue wasn't passed in (which Velocity always attempts to do in order to avoid requerying the DOM),\n                   query the DOM for the root property's value. */\n                if (rootPropertyValue === undefined) {\n                    /* Since the browser is now being directly queried, use the official post-prefixing property name for this lookup. */\n                    rootPropertyValue = CSS.getPropertyValue(element, CSS.Names.prefixCheck(hookRoot)[0]); /* GET */\n                }\n\n                /* If this root has a normalization registered, peform the associated normalization extraction. */\n                if (CSS.Normalizations.registered[hookRoot]) {\n                    rootPropertyValue = CSS.Normalizations.registered[hookRoot](\"extract\", element, rootPropertyValue);\n                }\n\n                /* Extract the hook's value. */\n                propertyValue = CSS.Hooks.extractValue(hook, rootPropertyValue);\n\n            /* If this is a normalized property (e.g. \"opacity\" becomes \"filter\" in <=IE8) or \"translateX\" becomes \"transform\"),\n               normalize the property's name and value, and handle the special case of transforms. */\n            /* Note: Normalizing a property is mutually exclusive from hooking a property since hook-extracted values are strictly\n               numerical and therefore do not require normalization extraction. */\n            } else if (CSS.Normalizations.registered[property]) {\n                var normalizedPropertyName,\n                    normalizedPropertyValue;\n\n                normalizedPropertyName = CSS.Normalizations.registered[property](\"name\", element);\n\n                /* Transform values are calculated via normalization extraction (see below), which checks against the element's transformCache.\n                   At no point do transform GETs ever actually query the DOM; initial stylesheet values are never processed.\n                   This is because parsing 3D transform matrices is not always accurate and would bloat our codebase;\n                   thus, normalization extraction defaults initial transform values to their zero-values (e.g. 1 for scaleX and 0 for translateX). */\n                if (normalizedPropertyName !== \"transform\") {\n                    normalizedPropertyValue = computePropertyValue(element, CSS.Names.prefixCheck(normalizedPropertyName)[0]); /* GET */\n\n                    /* If the value is a CSS null-value and this property has a hook template, use that zero-value template so that hooks can be extracted from it. */\n                    if (CSS.Values.isCSSNullValue(normalizedPropertyValue) && CSS.Hooks.templates[property]) {\n                        normalizedPropertyValue = CSS.Hooks.templates[property][1];\n                    }\n                }\n\n                propertyValue = CSS.Normalizations.registered[property](\"extract\", element, normalizedPropertyValue);\n            }\n\n            /* If a (numeric) value wasn't produced via hook extraction or normalization, query the DOM. */\n            if (!/^[\\d-]/.test(propertyValue)) {\n                /* For SVG elements, dimensional properties (which SVGAttribute() detects) are tweened via\n                   their HTML attribute values instead of their CSS style values. */\n                if (Data(element) && Data(element).isSVG && CSS.Names.SVGAttribute(property)) {\n                    /* Since the height/width attribute values must be set manually, they don't reflect computed values.\n                       Thus, we use use getBBox() to ensure we always get values for elements with undefined height/width attributes. */\n                    if (/^(height|width)$/i.test(property)) {\n                        /* Firefox throws an error if .getBBox() is called on an SVG that isn't attached to the DOM. */\n                        try {\n                            propertyValue = element.getBBox()[property];\n                        } catch (error) {\n                            propertyValue = 0;\n                        }\n                    /* Otherwise, access the attribute value directly. */\n                    } else {\n                        propertyValue = element.getAttribute(property);\n                    }\n                } else {\n                    propertyValue = computePropertyValue(element, CSS.Names.prefixCheck(property)[0]); /* GET */\n                }\n            }\n\n            /* Since property lookups are for animation purposes (which entails computing the numeric delta between start and end values),\n               convert CSS null-values to an integer of value 0. */\n            if (CSS.Values.isCSSNullValue(propertyValue)) {\n                propertyValue = 0;\n            }\n\n            if (Velocity.debug >= 2) console.log(\"Get \" + property + \": \" + propertyValue);\n\n            return propertyValue;\n        },\n\n        /* The singular setPropertyValue, which routes the logic for all normalizations, hooks, and standard CSS properties. */\n        setPropertyValue: function(element, property, propertyValue, rootPropertyValue, scrollData) {\n            var propertyName = property;\n\n            /* In order to be subjected to call options and element queueing, scroll animation is routed through Velocity as if it were a standard CSS property. */\n            if (property === \"scroll\") {\n                /* If a container option is present, scroll the container instead of the browser window. */\n                if (scrollData.container) {\n                    scrollData.container[\"scroll\" + scrollData.direction] = propertyValue;\n                /* Otherwise, Velocity defaults to scrolling the browser window. */\n                } else {\n                    if (scrollData.direction === \"Left\") {\n                        window.scrollTo(propertyValue, scrollData.alternateValue);\n                    } else {\n                        window.scrollTo(scrollData.alternateValue, propertyValue);\n                    }\n                }\n            } else {\n                /* Transforms (translateX, rotateZ, etc.) are applied to a per-element transformCache object, which is manually flushed via flushTransformCache().\n                   Thus, for now, we merely cache transforms being SET. */\n                if (CSS.Normalizations.registered[property] && CSS.Normalizations.registered[property](\"name\", element) === \"transform\") {\n                    /* Perform a normalization injection. */\n                    /* Note: The normalization logic handles the transformCache updating. */\n                    CSS.Normalizations.registered[property](\"inject\", element, propertyValue);\n\n                    propertyName = \"transform\";\n                    propertyValue = Data(element).transformCache[property];\n                } else {\n                    /* Inject hooks. */\n                    if (CSS.Hooks.registered[property]) {\n                        var hookName = property,\n                            hookRoot = CSS.Hooks.getRoot(property);\n\n                        /* If a cached rootPropertyValue was not provided, query the DOM for the hookRoot's current value. */\n                        rootPropertyValue = rootPropertyValue || CSS.getPropertyValue(element, hookRoot); /* GET */\n\n                        propertyValue = CSS.Hooks.injectValue(hookName, propertyValue, rootPropertyValue);\n                        property = hookRoot;\n                    }\n\n                    /* Normalize names and values. */\n                    if (CSS.Normalizations.registered[property]) {\n                        propertyValue = CSS.Normalizations.registered[property](\"inject\", element, propertyValue);\n                        property = CSS.Normalizations.registered[property](\"name\", element);\n                    }\n\n                    /* Assign the appropriate vendor prefix before performing an official style update. */\n                    propertyName = CSS.Names.prefixCheck(property)[0];\n\n                    /* A try/catch is used for IE<=8, which throws an error when \"invalid\" CSS values are set, e.g. a negative width.\n                       Try/catch is avoided for other browsers since it incurs a performance overhead. */\n                    if (IE <= 8) {\n                        try {\n                            element.style[propertyName] = propertyValue;\n                        } catch (error) { if (Velocity.debug) console.log(\"Browser does not support [\" + propertyValue + \"] for [\" + propertyName + \"]\"); }\n                    /* SVG elements have their dimensional properties (width, height, x, y, cx, etc.) applied directly as attributes instead of as styles. */\n                    /* Note: IE8 does not support SVG elements, so it's okay that we skip it for SVG animation. */\n                    } else if (Data(element) && Data(element).isSVG && CSS.Names.SVGAttribute(property)) {\n                        /* Note: For SVG attributes, vendor-prefixed property names are never used. */\n                        /* Note: Not all CSS properties can be animated via attributes, but the browser won't throw an error for unsupported properties. */\n                        element.setAttribute(property, propertyValue);\n                    } else {\n                        element.style[propertyName] = propertyValue;\n                    }\n\n                    if (Velocity.debug >= 2) console.log(\"Set \" + property + \" (\" + propertyName + \"): \" + propertyValue);\n                }\n            }\n\n            /* Return the normalized property name and value in case the caller wants to know how these values were modified before being applied to the DOM. */\n            return [ propertyName, propertyValue ];\n        },\n\n        /* To increase performance by batching transform updates into a single SET, transforms are not directly applied to an element until flushTransformCache() is called. */\n        /* Note: Velocity applies transform properties in the same order that they are chronogically introduced to the element's CSS styles. */\n        flushTransformCache: function(element) {\n            var transformString = \"\";\n\n            /* Certain browsers require that SVG transforms be applied as an attribute. However, the SVG transform attribute takes a modified version of CSS's transform string\n               (units are dropped and, except for skewX/Y, subproperties are merged into their master property -- e.g. scaleX and scaleY are merged into scale(X Y). */\n            if ((IE || (Velocity.State.isAndroid && !Velocity.State.isChrome)) && Data(element).isSVG) {\n                /* Since transform values are stored in their parentheses-wrapped form, we use a helper function to strip out their numeric values.\n                   Further, SVG transform properties only take unitless (representing pixels) values, so it's okay that parseFloat() strips the unit suffixed to the float value. */\n                function getTransformFloat (transformProperty) {\n                    return parseFloat(CSS.getPropertyValue(element, transformProperty));\n                }\n\n                /* Create an object to organize all the transforms that we'll apply to the SVG element. To keep the logic simple,\n                   we process *all* transform properties -- even those that may not be explicitly applied (since they default to their zero-values anyway). */\n                var SVGTransforms = {\n                    translate: [ getTransformFloat(\"translateX\"), getTransformFloat(\"translateY\") ],\n                    skewX: [ getTransformFloat(\"skewX\") ], skewY: [ getTransformFloat(\"skewY\") ],\n                    /* If the scale property is set (non-1), use that value for the scaleX and scaleY values\n                       (this behavior mimics the result of animating all these properties at once on HTML elements). */\n                    scale: getTransformFloat(\"scale\") !== 1 ? [ getTransformFloat(\"scale\"), getTransformFloat(\"scale\") ] : [ getTransformFloat(\"scaleX\"), getTransformFloat(\"scaleY\") ],\n                    /* Note: SVG's rotate transform takes three values: rotation degrees followed by the X and Y values\n                       defining the rotation's origin point. We ignore the origin values (default them to 0). */\n                    rotate: [ getTransformFloat(\"rotateZ\"), 0, 0 ]\n                };\n\n                /* Iterate through the transform properties in the user-defined property map order.\n                   (This mimics the behavior of non-SVG transform animation.) */\n                $.each(Data(element).transformCache, function(transformName) {\n                    /* Except for with skewX/Y, revert the axis-specific transform subproperties to their axis-free master\n                       properties so that they match up with SVG's accepted transform properties. */\n                    if (/^translate/i.test(transformName)) {\n                        transformName = \"translate\";\n                    } else if (/^scale/i.test(transformName)) {\n                        transformName = \"scale\";\n                    } else if (/^rotate/i.test(transformName)) {\n                        transformName = \"rotate\";\n                    }\n\n                    /* Check that we haven't yet deleted the property from the SVGTransforms container. */\n                    if (SVGTransforms[transformName]) {\n                        /* Append the transform property in the SVG-supported transform format. As per the spec, surround the space-delimited values in parentheses. */\n                        transformString += transformName + \"(\" + SVGTransforms[transformName].join(\" \") + \")\" + \" \";\n\n                        /* After processing an SVG transform property, delete it from the SVGTransforms container so we don't\n                           re-insert the same master property if we encounter another one of its axis-specific properties. */\n                        delete SVGTransforms[transformName];\n                    }\n                });\n            } else {\n                var transformValue,\n                    perspective;\n\n                /* Transform properties are stored as members of the transformCache object. Concatenate all the members into a string. */\n                $.each(Data(element).transformCache, function(transformName) {\n                    transformValue = Data(element).transformCache[transformName];\n\n                    /* Transform's perspective subproperty must be set first in order to take effect. Store it temporarily. */\n                    if (transformName === \"transformPerspective\") {\n                        perspective = transformValue;\n                        return true;\n                    }\n\n                    /* IE9 only supports one rotation type, rotateZ, which it refers to as \"rotate\". */\n                    if (IE === 9 && transformName === \"rotateZ\") {\n                        transformName = \"rotate\";\n                    }\n\n                    transformString += transformName + transformValue + \" \";\n                });\n\n                /* If present, set the perspective subproperty first. */\n                if (perspective) {\n                    transformString = \"perspective\" + perspective + \" \" + transformString;\n                }\n            }\n\n            CSS.setPropertyValue(element, \"transform\", transformString);\n        }\n    };\n\n    /* Register hooks and normalizations. */\n    CSS.Hooks.register();\n    CSS.Normalizations.register();\n\n    /* Allow hook setting in the same fashion as jQuery's $.css(). */\n    Velocity.hook = function (elements, arg2, arg3) {\n        var value = undefined;\n\n        elements = sanitizeElements(elements);\n\n        $.each(elements, function(i, element) {\n            /* Initialize Velocity's per-element data cache if this element hasn't previously been animated. */\n            if (Data(element) === undefined) {\n                Velocity.init(element);\n            }\n\n            /* Get property value. If an element set was passed in, only return the value for the first element. */\n            if (arg3 === undefined) {\n                if (value === undefined) {\n                    value = Velocity.CSS.getPropertyValue(element, arg2);\n                }\n            /* Set property value. */\n            } else {\n                /* sPV returns an array of the normalized propertyName/propertyValue pair used to update the DOM. */\n                var adjustedSet = Velocity.CSS.setPropertyValue(element, arg2, arg3);\n\n                /* Transform properties don't automatically set. They have to be flushed to the DOM. */\n                if (adjustedSet[0] === \"transform\") {\n                    Velocity.CSS.flushTransformCache(element);\n                }\n\n                value = adjustedSet;\n            }\n        });\n\n        return value;\n    };\n\n    /*****************\n        Animation\n    *****************/\n\n    var animate = function() {\n\n        /******************\n            Call Chain\n        ******************/\n\n        /* Logic for determining what to return to the call stack when exiting out of Velocity. */\n        function getChain () {\n            /* If we are using the utility function, attempt to return this call's promise. If no promise library was detected,\n               default to null instead of returning the targeted elements so that utility function's return value is standardized. */\n            if (isUtility) {\n                return promiseData.promise || null;\n            /* Otherwise, if we're using $.fn, return the jQuery-/Zepto-wrapped element set. */\n            } else {\n                return elementsWrapped;\n            }\n        }\n\n        /*************************\n           Arguments Assignment\n        *************************/\n\n        /* To allow for expressive CoffeeScript code, Velocity supports an alternative syntax in which \"elements\" (or \"e\"), \"properties\" (or \"p\"), and \"options\" (or \"o\")\n           objects are defined on a container object that's passed in as Velocity's sole argument. */\n        /* Note: Some browsers automatically populate arguments with a \"properties\" object. We detect it by checking for its default \"names\" property. */\n        var syntacticSugar = (arguments[0] && (arguments[0].p || (($.isPlainObject(arguments[0].properties) && !arguments[0].properties.names) || Type.isString(arguments[0].properties)))),\n            /* Whether Velocity was called via the utility function (as opposed to on a jQuery/Zepto object). */\n            isUtility,\n            /* When Velocity is called via the utility function ($.Velocity()/Velocity()), elements are explicitly\n               passed in as the first parameter. Thus, argument positioning varies. We normalize them here. */\n            elementsWrapped,\n            argumentIndex;\n\n        var elements,\n            propertiesMap,\n            options;\n\n        /* Detect jQuery/Zepto elements being animated via the $.fn method. */\n        if (Type.isWrapped(this)) {\n            isUtility = false;\n\n            argumentIndex = 0;\n            elements = this;\n            elementsWrapped = this;\n        /* Otherwise, raw elements are being animated via the utility function. */\n        } else {\n            isUtility = true;\n\n            argumentIndex = 1;\n            elements = syntacticSugar ? (arguments[0].elements || arguments[0].e) : arguments[0];\n        }\n\n        elements = sanitizeElements(elements);\n\n        if (!elements) {\n            return;\n        }\n\n        if (syntacticSugar) {\n            propertiesMap = arguments[0].properties || arguments[0].p;\n            options = arguments[0].options || arguments[0].o;\n        } else {\n            propertiesMap = arguments[argumentIndex];\n            options = arguments[argumentIndex + 1];\n        }\n\n        /* The length of the element set (in the form of a nodeList or an array of elements) is defaulted to 1 in case a\n           single raw DOM element is passed in (which doesn't contain a length property). */\n        var elementsLength = elements.length,\n            elementsIndex = 0;\n\n        /***************************\n            Argument Overloading\n        ***************************/\n\n        /* Support is included for jQuery's argument overloading: $.animate(propertyMap [, duration] [, easing] [, complete]).\n           Overloading is detected by checking for the absence of an object being passed into options. */\n        /* Note: The stop and finish actions do not accept animation options, and are therefore excluded from this check. */\n        if (!/^(stop|finish|finishAll)$/i.test(propertiesMap) && !$.isPlainObject(options)) {\n            /* The utility function shifts all arguments one position to the right, so we adjust for that offset. */\n            var startingArgumentPosition = argumentIndex + 1;\n\n            options = {};\n\n            /* Iterate through all options arguments */\n            for (var i = startingArgumentPosition; i < arguments.length; i++) {\n                /* Treat a number as a duration. Parse it out. */\n                /* Note: The following RegEx will return true if passed an array with a number as its first item.\n                   Thus, arrays are skipped from this check. */\n                if (!Type.isArray(arguments[i]) && (/^(fast|normal|slow)$/i.test(arguments[i]) || /^\\d/.test(arguments[i]))) {\n                    options.duration = arguments[i];\n                /* Treat strings and arrays as easings. */\n                } else if (Type.isString(arguments[i]) || Type.isArray(arguments[i])) {\n                    options.easing = arguments[i];\n                /* Treat a function as a complete callback. */\n                } else if (Type.isFunction(arguments[i])) {\n                    options.complete = arguments[i];\n                }\n            }\n        }\n\n        /***************\n            Promises\n        ***************/\n\n        var promiseData = {\n                promise: null,\n                resolver: null,\n                rejecter: null\n            };\n\n        /* If this call was made via the utility function (which is the default method of invocation when jQuery/Zepto are not being used), and if\n           promise support was detected, create a promise object for this call and store references to its resolver and rejecter methods. The resolve\n           method is used when a call completes naturally or is prematurely stopped by the user. In both cases, completeCall() handles the associated\n           call cleanup and promise resolving logic. The reject method is used when an invalid set of arguments is passed into a Velocity call. */\n        /* Note: Velocity employs a call-based queueing architecture, which means that stopping an animating element actually stops the full call that\n           triggered it -- not that one element exclusively. Similarly, there is one promise per call, and all elements targeted by a Velocity call are\n           grouped together for the purposes of resolving and rejecting a promise. */\n        if (isUtility && Velocity.Promise) {\n            promiseData.promise = new Velocity.Promise(function (resolve, reject) {\n                promiseData.resolver = resolve;\n                promiseData.rejecter = reject;\n            });\n        }\n\n        /*********************\n           Action Detection\n        *********************/\n\n        /* Velocity's behavior is categorized into \"actions\": Elements can either be specially scrolled into view,\n           or they can be started, stopped, or reversed. If a literal or referenced properties map is passed in as Velocity's\n           first argument, the associated action is \"start\". Alternatively, \"scroll\", \"reverse\", or \"stop\" can be passed in instead of a properties map. */\n        var action;\n\n        switch (propertiesMap) {\n            case \"scroll\":\n                action = \"scroll\";\n                break;\n\n            case \"reverse\":\n                action = \"reverse\";\n                break;\n\n            case \"finish\":\n            case \"finishAll\":\n            case \"stop\":\n                /*******************\n                    Action: Stop\n                *******************/\n\n                /* Clear the currently-active delay on each targeted element. */\n                $.each(elements, function(i, element) {\n                    if (Data(element) && Data(element).delayTimer) {\n                        /* Stop the timer from triggering its cached next() function. */\n                        clearTimeout(Data(element).delayTimer.setTimeout);\n\n                        /* Manually call the next() function so that the subsequent queue items can progress. */\n                        if (Data(element).delayTimer.next) {\n                            Data(element).delayTimer.next();\n                        }\n\n                        delete Data(element).delayTimer;\n                    }\n\n                    /* If we want to finish everything in the queue, we have to iterate through it\n                       and call each function. This will make them active calls below, which will\n                       cause them to be applied via the duration setting. */\n                    if (propertiesMap === \"finishAll\" && (options === true || Type.isString(options))) {\n                        /* Iterate through the items in the element's queue. */\n                        $.each($.queue(element, Type.isString(options) ? options : \"\"), function(_, item) {\n                            /* The queue array can contain an \"inprogress\" string, which we skip. */\n                            if (Type.isFunction(item)) {\n                                item();\n                            }\n                        });\n\n                        /* Clearing the $.queue() array is achieved by resetting it to []. */\n                        $.queue(element, Type.isString(options) ? options : \"\", []);\n                    }\n                });\n\n                var callsToStop = [];\n\n                /* When the stop action is triggered, the elements' currently active call is immediately stopped. The active call might have\n                   been applied to multiple elements, in which case all of the call's elements will be stopped. When an element\n                   is stopped, the next item in its animation queue is immediately triggered. */\n                /* An additional argument may be passed in to clear an element's remaining queued calls. Either true (which defaults to the \"fx\" queue)\n                   or a custom queue string can be passed in. */\n                /* Note: The stop command runs prior to Velocity's Queueing phase since its behavior is intended to take effect *immediately*,\n                   regardless of the element's current queue state. */\n\n                /* Iterate through every active call. */\n                $.each(Velocity.State.calls, function(i, activeCall) {\n                    /* Inactive calls are set to false by the logic inside completeCall(). Skip them. */\n                    if (activeCall) {\n                        /* Iterate through the active call's targeted elements. */\n                        $.each(activeCall[1], function(k, activeElement) {\n                            /* If true was passed in as a secondary argument, clear absolutely all calls on this element. Otherwise, only\n                               clear calls associated with the relevant queue. */\n                            /* Call stopping logic works as follows:\n                               - options === true --> stop current default queue calls (and queue:false calls), including remaining queued ones.\n                               - options === undefined --> stop current queue:\"\" call and all queue:false calls.\n                               - options === false --> stop only queue:false calls.\n                               - options === \"custom\" --> stop current queue:\"custom\" call, including remaining queued ones (there is no functionality to only clear the currently-running queue:\"custom\" call). */\n                            var queueName = (options === undefined) ? \"\" : options;\n\n                            if (queueName !== true && (activeCall[2].queue !== queueName) && !(options === undefined && activeCall[2].queue === false)) {\n                                return true;\n                            }\n\n                            /* Iterate through the calls targeted by the stop command. */\n                            $.each(elements, function(l, element) {\n                                /* Check that this call was applied to the target element. */\n                                if (element === activeElement) {\n                                    /* Optionally clear the remaining queued calls. If we're doing \"finishAll\" this won't find anything,\n                                       due to the queue-clearing above. */\n                                    if (options === true || Type.isString(options)) {\n                                        /* Iterate through the items in the element's queue. */\n                                        $.each($.queue(element, Type.isString(options) ? options : \"\"), function(_, item) {\n                                            /* The queue array can contain an \"inprogress\" string, which we skip. */\n                                            if (Type.isFunction(item)) {\n                                                /* Pass the item's callback a flag indicating that we want to abort from the queue call.\n                                                   (Specifically, the queue will resolve the call's associated promise then abort.)  */\n                                                item(null, true);\n                                            }\n                                        });\n\n                                        /* Clearing the $.queue() array is achieved by resetting it to []. */\n                                        $.queue(element, Type.isString(options) ? options : \"\", []);\n                                    }\n\n                                    if (propertiesMap === \"stop\") {\n                                        /* Since \"reverse\" uses cached start values (the previous call's endValues), these values must be\n                                           changed to reflect the final value that the elements were actually tweened to. */\n                                        /* Note: If only queue:false animations are currently running on an element, it won't have a tweensContainer\n                                           object. Also, queue:false animations can't be reversed. */\n                                        if (Data(element) && Data(element).tweensContainer && queueName !== false) {\n                                            $.each(Data(element).tweensContainer, function(m, activeTween) {\n                                                activeTween.endValue = activeTween.currentValue;\n                                            });\n                                        }\n\n                                        callsToStop.push(i);\n                                    } else if (propertiesMap === \"finish\" || propertiesMap === \"finishAll\") {\n                                        /* To get active tweens to finish immediately, we forcefully shorten their durations to 1ms so that\n                                        they finish upon the next rAf tick then proceed with normal call completion logic. */\n                                        activeCall[2].duration = 1;\n                                    }\n                                }\n                            });\n                        });\n                    }\n                });\n\n                /* Prematurely call completeCall() on each matched active call. Pass an additional flag for \"stop\" to indicate\n                   that the complete callback and display:none setting should be skipped since we're completing prematurely. */\n                if (propertiesMap === \"stop\") {\n                    $.each(callsToStop, function(i, j) {\n                        completeCall(j, true);\n                    });\n\n                    if (promiseData.promise) {\n                        /* Immediately resolve the promise associated with this stop call since stop runs synchronously. */\n                        promiseData.resolver(elements);\n                    }\n                }\n\n                /* Since we're stopping, and not proceeding with queueing, exit out of Velocity. */\n                return getChain();\n\n            default:\n                /* Treat a non-empty plain object as a literal properties map. */\n                if ($.isPlainObject(propertiesMap) && !Type.isEmptyObject(propertiesMap)) {\n                    action = \"start\";\n\n                /****************\n                    Redirects\n                ****************/\n\n                /* Check if a string matches a registered redirect (see Redirects above). */\n                } else if (Type.isString(propertiesMap) && Velocity.Redirects[propertiesMap]) {\n                    var opts = $.extend({}, options),\n                        durationOriginal = opts.duration,\n                        delayOriginal = opts.delay || 0;\n\n                    /* If the backwards option was passed in, reverse the element set so that elements animate from the last to the first. */\n                    if (opts.backwards === true) {\n                        elements = $.extend(true, [], elements).reverse();\n                    }\n\n                    /* Individually trigger the redirect for each element in the set to prevent users from having to handle iteration logic in their redirect. */\n                    $.each(elements, function(elementIndex, element) {\n                        /* If the stagger option was passed in, successively delay each element by the stagger value (in ms). Retain the original delay value. */\n                        if (parseFloat(opts.stagger)) {\n                            opts.delay = delayOriginal + (parseFloat(opts.stagger) * elementIndex);\n                        } else if (Type.isFunction(opts.stagger)) {\n                            opts.delay = delayOriginal + opts.stagger.call(element, elementIndex, elementsLength);\n                        }\n\n                        /* If the drag option was passed in, successively increase/decrease (depending on the presense of opts.backwards)\n                           the duration of each element's animation, using floors to prevent producing very short durations. */\n                        if (opts.drag) {\n                            /* Default the duration of UI pack effects (callouts and transitions) to 1000ms instead of the usual default duration of 400ms. */\n                            opts.duration = parseFloat(durationOriginal) || (/^(callout|transition)/.test(propertiesMap) ? 1000 : DURATION_DEFAULT);\n\n                            /* For each element, take the greater duration of: A) animation completion percentage relative to the original duration,\n                               B) 75% of the original duration, or C) a 200ms fallback (in case duration is already set to a low value).\n                               The end result is a baseline of 75% of the redirect's duration that increases/decreases as the end of the element set is approached. */\n                            opts.duration = Math.max(opts.duration * (opts.backwards ? 1 - elementIndex/elementsLength : (elementIndex + 1) / elementsLength), opts.duration * 0.75, 200);\n                        }\n\n                        /* Pass in the call's opts object so that the redirect can optionally extend it. It defaults to an empty object instead of null to\n                           reduce the opts checking logic required inside the redirect. */\n                        Velocity.Redirects[propertiesMap].call(element, element, opts || {}, elementIndex, elementsLength, elements, promiseData.promise ? promiseData : undefined);\n                    });\n\n                    /* Since the animation logic resides within the redirect's own code, abort the remainder of this call.\n                       (The performance overhead up to this point is virtually non-existant.) */\n                    /* Note: The jQuery call chain is kept intact by returning the complete element set. */\n                    return getChain();\n                } else {\n                    var abortError = \"Velocity: First argument (\" + propertiesMap + \") was not a property map, a known action, or a registered redirect. Aborting.\";\n\n                    if (promiseData.promise) {\n                        promiseData.rejecter(new Error(abortError));\n                    } else {\n                        console.log(abortError);\n                    }\n\n                    return getChain();\n                }\n        }\n\n        /**************************\n            Call-Wide Variables\n        **************************/\n\n        /* A container for CSS unit conversion ratios (e.g. %, rem, and em ==> px) that is used to cache ratios across all elements\n           being animated in a single Velocity call. Calculating unit ratios necessitates DOM querying and updating, and is therefore\n           avoided (via caching) wherever possible. This container is call-wide instead of page-wide to avoid the risk of using stale\n           conversion metrics across Velocity animations that are not immediately consecutively chained. */\n        var callUnitConversionData = {\n                lastParent: null,\n                lastPosition: null,\n                lastFontSize: null,\n                lastPercentToPxWidth: null,\n                lastPercentToPxHeight: null,\n                lastEmToPx: null,\n                remToPx: null,\n                vwToPx: null,\n                vhToPx: null\n            };\n\n        /* A container for all the ensuing tween data and metadata associated with this call. This container gets pushed to the page-wide\n           Velocity.State.calls array that is processed during animation ticking. */\n        var call = [];\n\n        /************************\n           Element Processing\n        ************************/\n\n        /* Element processing consists of three parts -- data processing that cannot go stale and data processing that *can* go stale (i.e. third-party style modifications):\n           1) Pre-Queueing: Element-wide variables, including the element's data storage, are instantiated. Call options are prepared. If triggered, the Stop action is executed.\n           2) Queueing: The logic that runs once this call has reached its point of execution in the element's $.queue() stack. Most logic is placed here to avoid risking it becoming stale.\n           3) Pushing: Consolidation of the tween data followed by its push onto the global in-progress calls container.\n        */\n\n        function processElement () {\n\n            /*************************\n               Part I: Pre-Queueing\n            *************************/\n\n            /***************************\n               Element-Wide Variables\n            ***************************/\n\n            var element = this,\n                /* The runtime opts object is the extension of the current call's options and Velocity's page-wide option defaults. */\n                opts = $.extend({}, Velocity.defaults, options),\n                /* A container for the processed data associated with each property in the propertyMap.\n                   (Each property in the map produces its own \"tween\".) */\n                tweensContainer = {},\n                elementUnitConversionData;\n\n            /******************\n               Element Init\n            ******************/\n\n            if (Data(element) === undefined) {\n                Velocity.init(element);\n            }\n\n            /******************\n               Option: Delay\n            ******************/\n\n            /* Since queue:false doesn't respect the item's existing queue, we avoid injecting its delay here (it's set later on). */\n            /* Note: Velocity rolls its own delay function since jQuery doesn't have a utility alias for $.fn.delay()\n               (and thus requires jQuery element creation, which we avoid since its overhead includes DOM querying). */\n            if (parseFloat(opts.delay) && opts.queue !== false) {\n                $.queue(element, opts.queue, function(next) {\n                    /* This is a flag used to indicate to the upcoming completeCall() function that this queue entry was initiated by Velocity. See completeCall() for further details. */\n                    Velocity.velocityQueueEntryFlag = true;\n\n                    /* The ensuing queue item (which is assigned to the \"next\" argument that $.queue() automatically passes in) will be triggered after a setTimeout delay.\n                       The setTimeout is stored so that it can be subjected to clearTimeout() if this animation is prematurely stopped via Velocity's \"stop\" command. */\n                    Data(element).delayTimer = {\n                        setTimeout: setTimeout(next, parseFloat(opts.delay)),\n                        next: next\n                    };\n                });\n            }\n\n            /*********************\n               Option: Duration\n            *********************/\n\n            /* Support for jQuery's named durations. */\n            switch (opts.duration.toString().toLowerCase()) {\n                case \"fast\":\n                    opts.duration = 200;\n                    break;\n\n                case \"normal\":\n                    opts.duration = DURATION_DEFAULT;\n                    break;\n\n                case \"slow\":\n                    opts.duration = 600;\n                    break;\n\n                default:\n                    /* Remove the potential \"ms\" suffix and default to 1 if the user is attempting to set a duration of 0 (in order to produce an immediate style change). */\n                    opts.duration = parseFloat(opts.duration) || 1;\n            }\n\n            /************************\n               Global Option: Mock\n            ************************/\n\n            if (Velocity.mock !== false) {\n                /* In mock mode, all animations are forced to 1ms so that they occur immediately upon the next rAF tick.\n                   Alternatively, a multiplier can be passed in to time remap all delays and durations. */\n                if (Velocity.mock === true) {\n                    opts.duration = opts.delay = 1;\n                } else {\n                    opts.duration *= parseFloat(Velocity.mock) || 1;\n                    opts.delay *= parseFloat(Velocity.mock) || 1;\n                }\n            }\n\n            /*******************\n               Option: Easing\n            *******************/\n\n            opts.easing = getEasing(opts.easing, opts.duration);\n\n            /**********************\n               Option: Callbacks\n            **********************/\n\n            /* Callbacks must functions. Otherwise, default to null. */\n            if (opts.begin && !Type.isFunction(opts.begin)) {\n                opts.begin = null;\n            }\n\n            if (opts.progress && !Type.isFunction(opts.progress)) {\n                opts.progress = null;\n            }\n\n            if (opts.complete && !Type.isFunction(opts.complete)) {\n                opts.complete = null;\n            }\n\n            /*********************************\n               Option: Display & Visibility\n            *********************************/\n\n            /* Refer to Velocity's documentation (VelocityJS.org/#displayAndVisibility) for a description of the display and visibility options' behavior. */\n            /* Note: We strictly check for undefined instead of falsiness because display accepts an empty string value. */\n            if (opts.display !== undefined && opts.display !== null) {\n                opts.display = opts.display.toString().toLowerCase();\n\n                /* Users can pass in a special \"auto\" value to instruct Velocity to set the element to its default display value. */\n                if (opts.display === \"auto\") {\n                    opts.display = Velocity.CSS.Values.getDisplayType(element);\n                }\n            }\n\n            if (opts.visibility !== undefined && opts.visibility !== null) {\n                opts.visibility = opts.visibility.toString().toLowerCase();\n            }\n\n            /**********************\n               Option: mobileHA\n            **********************/\n\n            /* When set to true, and if this is a mobile device, mobileHA automatically enables hardware acceleration (via a null transform hack)\n               on animating elements. HA is removed from the element at the completion of its animation. */\n            /* Note: Android Gingerbread doesn't support HA. If a null transform hack (mobileHA) is in fact set, it will prevent other tranform subproperties from taking effect. */\n            /* Note: You can read more about the use of mobileHA in Velocity's documentation: VelocityJS.org/#mobileHA. */\n            opts.mobileHA = (opts.mobileHA && Velocity.State.isMobile && !Velocity.State.isGingerbread);\n\n            /***********************\n               Part II: Queueing\n            ***********************/\n\n            /* When a set of elements is targeted by a Velocity call, the set is broken up and each element has the current Velocity call individually queued onto it.\n               In this way, each element's existing queue is respected; some elements may already be animating and accordingly should not have this current Velocity call triggered immediately. */\n            /* In each queue, tween data is processed for each animating property then pushed onto the call-wide calls array. When the last element in the set has had its tweens processed,\n               the call array is pushed to Velocity.State.calls for live processing by the requestAnimationFrame tick. */\n            function buildQueue (next) {\n\n                /*******************\n                   Option: Begin\n                *******************/\n\n                /* The begin callback is fired once per call -- not once per elemenet -- and is passed the full raw DOM element set as both its context and its first argument. */\n                if (opts.begin && elementsIndex === 0) {\n                    /* We throw callbacks in a setTimeout so that thrown errors don't halt the execution of Velocity itself. */\n                    try {\n                        opts.begin.call(elements, elements);\n                    } catch (error) {\n                        setTimeout(function() { throw error; }, 1);\n                    }\n                }\n\n                /*****************************************\n                   Tween Data Construction (for Scroll)\n                *****************************************/\n\n                /* Note: In order to be subjected to chaining and animation options, scroll's tweening is routed through Velocity as if it were a standard CSS property animation. */\n                if (action === \"scroll\") {\n                    /* The scroll action uniquely takes an optional \"offset\" option -- specified in pixels -- that offsets the targeted scroll position. */\n                    var scrollDirection = (/^x$/i.test(opts.axis) ? \"Left\" : \"Top\"),\n                        scrollOffset = parseFloat(opts.offset) || 0,\n                        scrollPositionCurrent,\n                        scrollPositionCurrentAlternate,\n                        scrollPositionEnd;\n\n                    /* Scroll also uniquely takes an optional \"container\" option, which indicates the parent element that should be scrolled --\n                       as opposed to the browser window itself. This is useful for scrolling toward an element that's inside an overflowing parent element. */\n                    if (opts.container) {\n                        /* Ensure that either a jQuery object or a raw DOM element was passed in. */\n                        if (Type.isWrapped(opts.container) || Type.isNode(opts.container)) {\n                            /* Extract the raw DOM element from the jQuery wrapper. */\n                            opts.container = opts.container[0] || opts.container;\n                            /* Note: Unlike other properties in Velocity, the browser's scroll position is never cached since it so frequently changes\n                               (due to the user's natural interaction with the page). */\n                            scrollPositionCurrent = opts.container[\"scroll\" + scrollDirection]; /* GET */\n\n                            /* $.position() values are relative to the container's currently viewable area (without taking into account the container's true dimensions\n                               -- say, for example, if the container was not overflowing). Thus, the scroll end value is the sum of the child element's position *and*\n                               the scroll container's current scroll position. */\n                            scrollPositionEnd = (scrollPositionCurrent + $(element).position()[scrollDirection.toLowerCase()]) + scrollOffset; /* GET */\n                        /* If a value other than a jQuery object or a raw DOM element was passed in, default to null so that this option is ignored. */\n                        } else {\n                            opts.container = null;\n                        }\n                    } else {\n                        /* If the window itself is being scrolled -- not a containing element -- perform a live scroll position lookup using\n                           the appropriate cached property names (which differ based on browser type). */\n                        scrollPositionCurrent = Velocity.State.scrollAnchor[Velocity.State[\"scrollProperty\" + scrollDirection]]; /* GET */\n                        /* When scrolling the browser window, cache the alternate axis's current value since window.scrollTo() doesn't let us change only one value at a time. */\n                        scrollPositionCurrentAlternate = Velocity.State.scrollAnchor[Velocity.State[\"scrollProperty\" + (scrollDirection === \"Left\" ? \"Top\" : \"Left\")]]; /* GET */\n\n                        /* Unlike $.position(), $.offset() values are relative to the browser window's true dimensions -- not merely its currently viewable area --\n                           and therefore end values do not need to be compounded onto current values. */\n                        scrollPositionEnd = $(element).offset()[scrollDirection.toLowerCase()] + scrollOffset; /* GET */\n                    }\n\n                    /* Since there's only one format that scroll's associated tweensContainer can take, we create it manually. */\n                    tweensContainer = {\n                        scroll: {\n                            rootPropertyValue: false,\n                            startValue: scrollPositionCurrent,\n                            currentValue: scrollPositionCurrent,\n                            endValue: scrollPositionEnd,\n                            unitType: \"\",\n                            easing: opts.easing,\n                            scrollData: {\n                                container: opts.container,\n                                direction: scrollDirection,\n                                alternateValue: scrollPositionCurrentAlternate\n                            }\n                        },\n                        element: element\n                    };\n\n                    if (Velocity.debug) console.log(\"tweensContainer (scroll): \", tweensContainer.scroll, element);\n\n                /******************************************\n                   Tween Data Construction (for Reverse)\n                ******************************************/\n\n                /* Reverse acts like a \"start\" action in that a property map is animated toward. The only difference is\n                   that the property map used for reverse is the inverse of the map used in the previous call. Thus, we manipulate\n                   the previous call to construct our new map: use the previous map's end values as our new map's start values. Copy over all other data. */\n                /* Note: Reverse can be directly called via the \"reverse\" parameter, or it can be indirectly triggered via the loop option. (Loops are composed of multiple reverses.) */\n                /* Note: Reverse calls do not need to be consecutively chained onto a currently-animating element in order to operate on cached values;\n                   there is no harm to reverse being called on a potentially stale data cache since reverse's behavior is simply defined\n                   as reverting to the element's values as they were prior to the previous *Velocity* call. */\n                } else if (action === \"reverse\") {\n                    /* Abort if there is no prior animation data to reverse to. */\n                    if (!Data(element).tweensContainer) {\n                        /* Dequeue the element so that this queue entry releases itself immediately, allowing subsequent queue entries to run. */\n                        $.dequeue(element, opts.queue);\n\n                        return;\n                    } else {\n                        /*********************\n                           Options Parsing\n                        *********************/\n\n                        /* If the element was hidden via the display option in the previous call,\n                           revert display to \"auto\" prior to reversal so that the element is visible again. */\n                        if (Data(element).opts.display === \"none\") {\n                            Data(element).opts.display = \"auto\";\n                        }\n\n                        if (Data(element).opts.visibility === \"hidden\") {\n                            Data(element).opts.visibility = \"visible\";\n                        }\n\n                        /* If the loop option was set in the previous call, disable it so that \"reverse\" calls aren't recursively generated.\n                           Further, remove the previous call's callback options; typically, users do not want these to be refired. */\n                        Data(element).opts.loop = false;\n                        Data(element).opts.begin = null;\n                        Data(element).opts.complete = null;\n\n                        /* Since we're extending an opts object that has already been extended with the defaults options object,\n                           we remove non-explicitly-defined properties that are auto-assigned values. */\n                        if (!options.easing) {\n                            delete opts.easing;\n                        }\n\n                        if (!options.duration) {\n                            delete opts.duration;\n                        }\n\n                        /* The opts object used for reversal is an extension of the options object optionally passed into this\n                           reverse call plus the options used in the previous Velocity call. */\n                        opts = $.extend({}, Data(element).opts, opts);\n\n                        /*************************************\n                           Tweens Container Reconstruction\n                        *************************************/\n\n                        /* Create a deepy copy (indicated via the true flag) of the previous call's tweensContainer. */\n                        var lastTweensContainer = $.extend(true, {}, Data(element).tweensContainer);\n\n                        /* Manipulate the previous tweensContainer by replacing its end values and currentValues with its start values. */\n                        for (var lastTween in lastTweensContainer) {\n                            /* In addition to tween data, tweensContainers contain an element property that we ignore here. */\n                            if (lastTween !== \"element\") {\n                                var lastStartValue = lastTweensContainer[lastTween].startValue;\n\n                                lastTweensContainer[lastTween].startValue = lastTweensContainer[lastTween].currentValue = lastTweensContainer[lastTween].endValue;\n                                lastTweensContainer[lastTween].endValue = lastStartValue;\n\n                                /* Easing is the only option that embeds into the individual tween data (since it can be defined on a per-property basis).\n                                   Accordingly, every property's easing value must be updated when an options object is passed in with a reverse call.\n                                   The side effect of this extensibility is that all per-property easing values are forcefully reset to the new value. */\n                                if (!Type.isEmptyObject(options)) {\n                                    lastTweensContainer[lastTween].easing = opts.easing;\n                                }\n\n                                if (Velocity.debug) console.log(\"reverse tweensContainer (\" + lastTween + \"): \" + JSON.stringify(lastTweensContainer[lastTween]), element);\n                            }\n                        }\n\n                        tweensContainer = lastTweensContainer;\n                    }\n\n                /*****************************************\n                   Tween Data Construction (for Start)\n                *****************************************/\n\n                } else if (action === \"start\") {\n\n                    /*************************\n                        Value Transferring\n                    *************************/\n\n                    /* If this queue entry follows a previous Velocity-initiated queue entry *and* if this entry was created\n                       while the element was in the process of being animated by Velocity, then this current call is safe to use\n                       the end values from the prior call as its start values. Velocity attempts to perform this value transfer\n                       process whenever possible in order to avoid requerying the DOM. */\n                    /* If values aren't transferred from a prior call and start values were not forcefed by the user (more on this below),\n                       then the DOM is queried for the element's current values as a last resort. */\n                    /* Note: Conversely, animation reversal (and looping) *always* perform inter-call value transfers; they never requery the DOM. */\n                    var lastTweensContainer;\n\n                    /* The per-element isAnimating flag is used to indicate whether it's safe (i.e. the data isn't stale)\n                       to transfer over end values to use as start values. If it's set to true and there is a previous\n                       Velocity call to pull values from, do so. */\n                    if (Data(element).tweensContainer && Data(element).isAnimating === true) {\n                        lastTweensContainer = Data(element).tweensContainer;\n                    }\n\n                    /***************************\n                       Tween Data Calculation\n                    ***************************/\n\n                    /* This function parses property data and defaults endValue, easing, and startValue as appropriate. */\n                    /* Property map values can either take the form of 1) a single value representing the end value,\n                       or 2) an array in the form of [ endValue, [, easing] [, startValue] ].\n                       The optional third parameter is a forcefed startValue to be used instead of querying the DOM for\n                       the element's current value. Read Velocity's docmentation to learn more about forcefeeding: VelocityJS.org/#forcefeeding */\n                    function parsePropertyValue (valueData, skipResolvingEasing) {\n                        var endValue = undefined,\n                            easing = undefined,\n                            startValue = undefined;\n\n                        /* Handle the array format, which can be structured as one of three potential overloads:\n                           A) [ endValue, easing, startValue ], B) [ endValue, easing ], or C) [ endValue, startValue ] */\n                        if (Type.isArray(valueData)) {\n                            /* endValue is always the first item in the array. Don't bother validating endValue's value now\n                               since the ensuing property cycling logic does that. */\n                            endValue = valueData[0];\n\n                            /* Two-item array format: If the second item is a number, function, or hex string, treat it as a\n                               start value since easings can only be non-hex strings or arrays. */\n                            if ((!Type.isArray(valueData[1]) && /^[\\d-]/.test(valueData[1])) || Type.isFunction(valueData[1]) || CSS.RegEx.isHex.test(valueData[1])) {\n                                startValue = valueData[1];\n                            /* Two or three-item array: If the second item is a non-hex string or an array, treat it as an easing. */\n                            } else if ((Type.isString(valueData[1]) && !CSS.RegEx.isHex.test(valueData[1])) || Type.isArray(valueData[1])) {\n                                easing = skipResolvingEasing ? valueData[1] : getEasing(valueData[1], opts.duration);\n\n                                /* Don't bother validating startValue's value now since the ensuing property cycling logic inherently does that. */\n                                if (valueData[2] !== undefined) {\n                                    startValue = valueData[2];\n                                }\n                            }\n                        /* Handle the single-value format. */\n                        } else {\n                            endValue = valueData;\n                        }\n\n                        /* Default to the call's easing if a per-property easing type was not defined. */\n                        if (!skipResolvingEasing) {\n                            easing = easing || opts.easing;\n                        }\n\n                        /* If functions were passed in as values, pass the function the current element as its context,\n                           plus the element's index and the element set's size as arguments. Then, assign the returned value. */\n                        if (Type.isFunction(endValue)) {\n                            endValue = endValue.call(element, elementsIndex, elementsLength);\n                        }\n\n                        if (Type.isFunction(startValue)) {\n                            startValue = startValue.call(element, elementsIndex, elementsLength);\n                        }\n\n                        /* Allow startValue to be left as undefined to indicate to the ensuing code that its value was not forcefed. */\n                        return [ endValue || 0, easing, startValue ];\n                    }\n\n                    /* Cycle through each property in the map, looking for shorthand color properties (e.g. \"color\" as opposed to \"colorRed\"). Inject the corresponding\n                       colorRed, colorGreen, and colorBlue RGB component tweens into the propertiesMap (which Velocity understands) and remove the shorthand property. */\n                    $.each(propertiesMap, function(property, value) {\n                        /* Find shorthand color properties that have been passed a hex string. */\n                        if (RegExp(\"^\" + CSS.Lists.colors.join(\"$|^\") + \"$\").test(property)) {\n                            /* Parse the value data for each shorthand. */\n                            var valueData = parsePropertyValue(value, true),\n                                endValue = valueData[0],\n                                easing = valueData[1],\n                                startValue = valueData[2];\n\n                            if (CSS.RegEx.isHex.test(endValue)) {\n                                /* Convert the hex strings into their RGB component arrays. */\n                                var colorComponents = [ \"Red\", \"Green\", \"Blue\" ],\n                                    endValueRGB = CSS.Values.hexToRgb(endValue),\n                                    startValueRGB = startValue ? CSS.Values.hexToRgb(startValue) : undefined;\n\n                                /* Inject the RGB component tweens into propertiesMap. */\n                                for (var i = 0; i < colorComponents.length; i++) {\n                                    var dataArray = [ endValueRGB[i] ];\n\n                                    if (easing) {\n                                        dataArray.push(easing);\n                                    }\n\n                                    if (startValueRGB !== undefined) {\n                                        dataArray.push(startValueRGB[i]);\n                                    }\n\n                                    propertiesMap[property + colorComponents[i]] = dataArray;\n                                }\n\n                                /* Remove the intermediary shorthand property entry now that we've processed it. */\n                                delete propertiesMap[property];\n                            }\n                        }\n                    });\n\n                    /* Create a tween out of each property, and append its associated data to tweensContainer. */\n                    for (var property in propertiesMap) {\n\n                        /**************************\n                           Start Value Sourcing\n                        **************************/\n\n                        /* Parse out endValue, easing, and startValue from the property's data. */\n                        var valueData = parsePropertyValue(propertiesMap[property]),\n                            endValue = valueData[0],\n                            easing = valueData[1],\n                            startValue = valueData[2];\n\n                        /* Now that the original property name's format has been used for the parsePropertyValue() lookup above,\n                           we force the property to its camelCase styling to normalize it for manipulation. */\n                        property = CSS.Names.camelCase(property);\n\n                        /* In case this property is a hook, there are circumstances where we will intend to work on the hook's root property and not the hooked subproperty. */\n                        var rootProperty = CSS.Hooks.getRoot(property),\n                            rootPropertyValue = false;\n\n                        /* Other than for the dummy tween property, properties that are not supported by the browser (and do not have an associated normalization) will\n                           inherently produce no style changes when set, so they are skipped in order to decrease animation tick overhead.\n                           Property support is determined via prefixCheck(), which returns a false flag when no supported is detected. */\n                        /* Note: Since SVG elements have some of their properties directly applied as HTML attributes,\n                           there is no way to check for their explicit browser support, and so we skip skip this check for them. */\n                        if (!Data(element).isSVG && rootProperty !== \"tween\" && CSS.Names.prefixCheck(rootProperty)[1] === false && CSS.Normalizations.registered[rootProperty] === undefined) {\n                            if (Velocity.debug) console.log(\"Skipping [\" + rootProperty + \"] due to a lack of browser support.\");\n\n                            continue;\n                        }\n\n                        /* If the display option is being set to a non-\"none\" (e.g. \"block\") and opacity (filter on IE<=8) is being\n                           animated to an endValue of non-zero, the user's intention is to fade in from invisible, thus we forcefeed opacity\n                           a startValue of 0 if its startValue hasn't already been sourced by value transferring or prior forcefeeding. */\n                        if (((opts.display !== undefined && opts.display !== null && opts.display !== \"none\") || (opts.visibility !== undefined && opts.visibility !== \"hidden\")) && /opacity|filter/.test(property) && !startValue && endValue !== 0) {\n                            startValue = 0;\n                        }\n\n                        /* If values have been transferred from the previous Velocity call, extract the endValue and rootPropertyValue\n                           for all of the current call's properties that were *also* animated in the previous call. */\n                        /* Note: Value transferring can optionally be disabled by the user via the _cacheValues option. */\n                        if (opts._cacheValues && lastTweensContainer && lastTweensContainer[property]) {\n                            if (startValue === undefined) {\n                                startValue = lastTweensContainer[property].endValue + lastTweensContainer[property].unitType;\n                            }\n\n                            /* The previous call's rootPropertyValue is extracted from the element's data cache since that's the\n                               instance of rootPropertyValue that gets freshly updated by the tweening process, whereas the rootPropertyValue\n                               attached to the incoming lastTweensContainer is equal to the root property's value prior to any tweening. */\n                            rootPropertyValue = Data(element).rootPropertyValueCache[rootProperty];\n                        /* If values were not transferred from a previous Velocity call, query the DOM as needed. */\n                        } else {\n                            /* Handle hooked properties. */\n                            if (CSS.Hooks.registered[property]) {\n                               if (startValue === undefined) {\n                                    rootPropertyValue = CSS.getPropertyValue(element, rootProperty); /* GET */\n                                    /* Note: The following getPropertyValue() call does not actually trigger a DOM query;\n                                       getPropertyValue() will extract the hook from rootPropertyValue. */\n                                    startValue = CSS.getPropertyValue(element, property, rootPropertyValue);\n                                /* If startValue is already defined via forcefeeding, do not query the DOM for the root property's value;\n                                   just grab rootProperty's zero-value template from CSS.Hooks. This overwrites the element's actual\n                                   root property value (if one is set), but this is acceptable since the primary reason users forcefeed is\n                                   to avoid DOM queries, and thus we likewise avoid querying the DOM for the root property's value. */\n                                } else {\n                                    /* Grab this hook's zero-value template, e.g. \"0px 0px 0px black\". */\n                                    rootPropertyValue = CSS.Hooks.templates[rootProperty][1];\n                                }\n                            /* Handle non-hooked properties that haven't already been defined via forcefeeding. */\n                            } else if (startValue === undefined) {\n                                startValue = CSS.getPropertyValue(element, property); /* GET */\n                            }\n                        }\n\n                        /**************************\n                           Value Data Extraction\n                        **************************/\n\n                        var separatedValue,\n                            endValueUnitType,\n                            startValueUnitType,\n                            operator = false;\n\n                        /* Separates a property value into its numeric value and its unit type. */\n                        function separateValue (property, value) {\n                            var unitType,\n                                numericValue;\n\n                            numericValue = (value || \"0\")\n                                .toString()\n                                .toLowerCase()\n                                /* Match the unit type at the end of the value. */\n                                .replace(/[%A-z]+$/, function(match) {\n                                    /* Grab the unit type. */\n                                    unitType = match;\n\n                                    /* Strip the unit type off of value. */\n                                    return \"\";\n                                });\n\n                            /* If no unit type was supplied, assign one that is appropriate for this property (e.g. \"deg\" for rotateZ or \"px\" for width). */\n                            if (!unitType) {\n                                unitType = CSS.Values.getUnitType(property);\n                            }\n\n                            return [ numericValue, unitType ];\n                        }\n\n                        /* Separate startValue. */\n                        separatedValue = separateValue(property, startValue);\n                        startValue = separatedValue[0];\n                        startValueUnitType = separatedValue[1];\n\n                        /* Separate endValue, and extract a value operator (e.g. \"+=\", \"-=\") if one exists. */\n                        separatedValue = separateValue(property, endValue);\n                        endValue = separatedValue[0].replace(/^([+-\\/*])=/, function(match, subMatch) {\n                            operator = subMatch;\n\n                            /* Strip the operator off of the value. */\n                            return \"\";\n                        });\n                        endValueUnitType = separatedValue[1];\n\n                        /* Parse float values from endValue and startValue. Default to 0 if NaN is returned. */\n                        startValue = parseFloat(startValue) || 0;\n                        endValue = parseFloat(endValue) || 0;\n\n                        /***************************************\n                           Property-Specific Value Conversion\n                        ***************************************/\n\n                        /* Custom support for properties that don't actually accept the % unit type, but where pollyfilling is trivial and relatively foolproof. */\n                        if (endValueUnitType === \"%\") {\n                            /* A %-value fontSize/lineHeight is relative to the parent's fontSize (as opposed to the parent's dimensions),\n                               which is identical to the em unit's behavior, so we piggyback off of that. */\n                            if (/^(fontSize|lineHeight)$/.test(property)) {\n                                /* Convert % into an em decimal value. */\n                                endValue = endValue / 100;\n                                endValueUnitType = \"em\";\n                            /* For scaleX and scaleY, convert the value into its decimal format and strip off the unit type. */\n                            } else if (/^scale/.test(property)) {\n                                endValue = endValue / 100;\n                                endValueUnitType = \"\";\n                            /* For RGB components, take the defined percentage of 255 and strip off the unit type. */\n                            } else if (/(Red|Green|Blue)$/i.test(property)) {\n                                endValue = (endValue / 100) * 255;\n                                endValueUnitType = \"\";\n                            }\n                        }\n\n                        /***************************\n                           Unit Ratio Calculation\n                        ***************************/\n\n                        /* When queried, the browser returns (most) CSS property values in pixels. Therefore, if an endValue with a unit type of\n                           %, em, or rem is animated toward, startValue must be converted from pixels into the same unit type as endValue in order\n                           for value manipulation logic (increment/decrement) to proceed. Further, if the startValue was forcefed or transferred\n                           from a previous call, startValue may also not be in pixels. Unit conversion logic therefore consists of two steps:\n                           1) Calculating the ratio of %/em/rem/vh/vw relative to pixels\n                           2) Converting startValue into the same unit of measurement as endValue based on these ratios. */\n                        /* Unit conversion ratios are calculated by inserting a sibling node next to the target node, copying over its position property,\n                           setting values with the target unit type then comparing the returned pixel value. */\n                        /* Note: Even if only one of these unit types is being animated, all unit ratios are calculated at once since the overhead\n                           of batching the SETs and GETs together upfront outweights the potential overhead\n                           of layout thrashing caused by re-querying for uncalculated ratios for subsequently-processed properties. */\n                        /* Todo: Shift this logic into the calls' first tick instance so that it's synced with RAF. */\n                        function calculateUnitRatios () {\n\n                            /************************\n                                Same Ratio Checks\n                            ************************/\n\n                            /* The properties below are used to determine whether the element differs sufficiently from this call's\n                               previously iterated element to also differ in its unit conversion ratios. If the properties match up with those\n                               of the prior element, the prior element's conversion ratios are used. Like most optimizations in Velocity,\n                               this is done to minimize DOM querying. */\n                            var sameRatioIndicators = {\n                                    myParent: element.parentNode || document.body, /* GET */\n                                    position: CSS.getPropertyValue(element, \"position\"), /* GET */\n                                    fontSize: CSS.getPropertyValue(element, \"fontSize\") /* GET */\n                                },\n                                /* Determine if the same % ratio can be used. % is based on the element's position value and its parent's width and height dimensions. */\n                                samePercentRatio = ((sameRatioIndicators.position === callUnitConversionData.lastPosition) && (sameRatioIndicators.myParent === callUnitConversionData.lastParent)),\n                                /* Determine if the same em ratio can be used. em is relative to the element's fontSize. */\n                                sameEmRatio = (sameRatioIndicators.fontSize === callUnitConversionData.lastFontSize);\n\n                            /* Store these ratio indicators call-wide for the next element to compare against. */\n                            callUnitConversionData.lastParent = sameRatioIndicators.myParent;\n                            callUnitConversionData.lastPosition = sameRatioIndicators.position;\n                            callUnitConversionData.lastFontSize = sameRatioIndicators.fontSize;\n\n                            /***************************\n                               Element-Specific Units\n                            ***************************/\n\n                            /* Note: IE8 rounds to the nearest pixel when returning CSS values, thus we perform conversions using a measurement\n                               of 100 (instead of 1) to give our ratios a precision of at least 2 decimal values. */\n                            var measurement = 100,\n                                unitRatios = {};\n\n                            if (!sameEmRatio || !samePercentRatio) {\n                                var dummy = Data(element).isSVG ? document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\") : document.createElement(\"div\");\n\n                                Velocity.init(dummy);\n                                sameRatioIndicators.myParent.appendChild(dummy);\n\n                                /* To accurately and consistently calculate conversion ratios, the element's cascaded overflow and box-sizing are stripped.\n                                   Similarly, since width/height can be artificially constrained by their min-/max- equivalents, these are controlled for as well. */\n                                /* Note: Overflow must be also be controlled for per-axis since the overflow property overwrites its per-axis values. */\n                                $.each([ \"overflow\", \"overflowX\", \"overflowY\" ], function(i, property) {\n                                    Velocity.CSS.setPropertyValue(dummy, property, \"hidden\");\n                                });\n                                Velocity.CSS.setPropertyValue(dummy, \"position\", sameRatioIndicators.position);\n                                Velocity.CSS.setPropertyValue(dummy, \"fontSize\", sameRatioIndicators.fontSize);\n                                Velocity.CSS.setPropertyValue(dummy, \"boxSizing\", \"content-box\");\n\n                                /* width and height act as our proxy properties for measuring the horizontal and vertical % ratios. */\n                                $.each([ \"minWidth\", \"maxWidth\", \"width\", \"minHeight\", \"maxHeight\", \"height\" ], function(i, property) {\n                                    Velocity.CSS.setPropertyValue(dummy, property, measurement + \"%\");\n                                });\n                                /* paddingLeft arbitrarily acts as our proxy property for the em ratio. */\n                                Velocity.CSS.setPropertyValue(dummy, \"paddingLeft\", measurement + \"em\");\n\n                                /* Divide the returned value by the measurement to get the ratio between 1% and 1px. Default to 1 since working with 0 can produce Infinite. */\n                                unitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth = (parseFloat(CSS.getPropertyValue(dummy, \"width\", null, true)) || 1) / measurement; /* GET */\n                                unitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight = (parseFloat(CSS.getPropertyValue(dummy, \"height\", null, true)) || 1) / measurement; /* GET */\n                                unitRatios.emToPx = callUnitConversionData.lastEmToPx = (parseFloat(CSS.getPropertyValue(dummy, \"paddingLeft\")) || 1) / measurement; /* GET */\n\n                                sameRatioIndicators.myParent.removeChild(dummy);\n                            } else {\n                                unitRatios.emToPx = callUnitConversionData.lastEmToPx;\n                                unitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth;\n                                unitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight;\n                            }\n\n                            /***************************\n                               Element-Agnostic Units\n                            ***************************/\n\n                            /* Whereas % and em ratios are determined on a per-element basis, the rem unit only needs to be checked\n                               once per call since it's exclusively dependant upon document.body's fontSize. If this is the first time\n                               that calculateUnitRatios() is being run during this call, remToPx will still be set to its default value of null,\n                               so we calculate it now. */\n                            if (callUnitConversionData.remToPx === null) {\n                                /* Default to browsers' default fontSize of 16px in the case of 0. */\n                                callUnitConversionData.remToPx = parseFloat(CSS.getPropertyValue(document.body, \"fontSize\")) || 16; /* GET */\n                            }\n\n                            /* Similarly, viewport units are %-relative to the window's inner dimensions. */\n                            if (callUnitConversionData.vwToPx === null) {\n                                callUnitConversionData.vwToPx = parseFloat(window.innerWidth) / 100; /* GET */\n                                callUnitConversionData.vhToPx = parseFloat(window.innerHeight) / 100; /* GET */\n                            }\n\n                            unitRatios.remToPx = callUnitConversionData.remToPx;\n                            unitRatios.vwToPx = callUnitConversionData.vwToPx;\n                            unitRatios.vhToPx = callUnitConversionData.vhToPx;\n\n                            if (Velocity.debug >= 1) console.log(\"Unit ratios: \" + JSON.stringify(unitRatios), element);\n\n                            return unitRatios;\n                        }\n\n                        /********************\n                           Unit Conversion\n                        ********************/\n\n                        /* The * and / operators, which are not passed in with an associated unit, inherently use startValue's unit. Skip value and unit conversion. */\n                        if (/[\\/*]/.test(operator)) {\n                            endValueUnitType = startValueUnitType;\n                        /* If startValue and endValue differ in unit type, convert startValue into the same unit type as endValue so that if endValueUnitType\n                           is a relative unit (%, em, rem), the values set during tweening will continue to be accurately relative even if the metrics they depend\n                           on are dynamically changing during the course of the animation. Conversely, if we always normalized into px and used px for setting values, the px ratio\n                           would become stale if the original unit being animated toward was relative and the underlying metrics change during the animation. */\n                        /* Since 0 is 0 in any unit type, no conversion is necessary when startValue is 0 -- we just start at 0 with endValueUnitType. */\n                        } else if ((startValueUnitType !== endValueUnitType) && startValue !== 0) {\n                            /* Unit conversion is also skipped when endValue is 0, but *startValueUnitType* must be used for tween values to remain accurate. */\n                            /* Note: Skipping unit conversion here means that if endValueUnitType was originally a relative unit, the animation won't relatively\n                               match the underlying metrics if they change, but this is acceptable since we're animating toward invisibility instead of toward visibility,\n                               which remains past the point of the animation's completion. */\n                            if (endValue === 0) {\n                                endValueUnitType = startValueUnitType;\n                            } else {\n                                /* By this point, we cannot avoid unit conversion (it's undesirable since it causes layout thrashing).\n                                   If we haven't already, we trigger calculateUnitRatios(), which runs once per element per call. */\n                                elementUnitConversionData = elementUnitConversionData || calculateUnitRatios();\n\n                                /* The following RegEx matches CSS properties that have their % values measured relative to the x-axis. */\n                                /* Note: W3C spec mandates that all of margin and padding's properties (even top and bottom) are %-relative to the *width* of the parent element. */\n                                var axis = (/margin|padding|left|right|width|text|word|letter/i.test(property) || /X$/.test(property) || property === \"x\") ? \"x\" : \"y\";\n\n                                /* In order to avoid generating n^2 bespoke conversion functions, unit conversion is a two-step process:\n                                   1) Convert startValue into pixels. 2) Convert this new pixel value into endValue's unit type. */\n                                switch (startValueUnitType) {\n                                    case \"%\":\n                                        /* Note: translateX and translateY are the only properties that are %-relative to an element's own dimensions -- not its parent's dimensions.\n                                           Velocity does not include a special conversion process to account for this behavior. Therefore, animating translateX/Y from a % value\n                                           to a non-% value will produce an incorrect start value. Fortunately, this sort of cross-unit conversion is rarely done by users in practice. */\n                                        startValue *= (axis === \"x\" ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight);\n                                        break;\n\n                                    case \"px\":\n                                        /* px acts as our midpoint in the unit conversion process; do nothing. */\n                                        break;\n\n                                    default:\n                                        startValue *= elementUnitConversionData[startValueUnitType + \"ToPx\"];\n                                }\n\n                                /* Invert the px ratios to convert into to the target unit. */\n                                switch (endValueUnitType) {\n                                    case \"%\":\n                                        startValue *= 1 / (axis === \"x\" ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight);\n                                        break;\n\n                                    case \"px\":\n                                        /* startValue is already in px, do nothing; we're done. */\n                                        break;\n\n                                    default:\n                                        startValue *= 1 / elementUnitConversionData[endValueUnitType + \"ToPx\"];\n                                }\n                            }\n                        }\n\n                        /*********************\n                           Relative Values\n                        *********************/\n\n                        /* Operator logic must be performed last since it requires unit-normalized start and end values. */\n                        /* Note: Relative *percent values* do not behave how most people think; while one would expect \"+=50%\"\n                           to increase the property 1.5x its current value, it in fact increases the percent units in absolute terms:\n                           50 points is added on top of the current % value. */\n                        switch (operator) {\n                            case \"+\":\n                                endValue = startValue + endValue;\n                                break;\n\n                            case \"-\":\n                                endValue = startValue - endValue;\n                                break;\n\n                            case \"*\":\n                                endValue = startValue * endValue;\n                                break;\n\n                            case \"/\":\n                                endValue = startValue / endValue;\n                                break;\n                        }\n\n                        /**************************\n                           tweensContainer Push\n                        **************************/\n\n                        /* Construct the per-property tween object, and push it to the element's tweensContainer. */\n                        tweensContainer[property] = {\n                            rootPropertyValue: rootPropertyValue,\n                            startValue: startValue,\n                            currentValue: startValue,\n                            endValue: endValue,\n                            unitType: endValueUnitType,\n                            easing: easing\n                        };\n\n                        if (Velocity.debug) console.log(\"tweensContainer (\" + property + \"): \" + JSON.stringify(tweensContainer[property]), element);\n                    }\n\n                    /* Along with its property data, store a reference to the element itself onto tweensContainer. */\n                    tweensContainer.element = element;\n                }\n\n                /*****************\n                    Call Push\n                *****************/\n\n                /* Note: tweensContainer can be empty if all of the properties in this call's property map were skipped due to not\n                   being supported by the browser. The element property is used for checking that the tweensContainer has been appended to. */\n                if (tweensContainer.element) {\n                    /* Apply the \"velocity-animating\" indicator class. */\n                    CSS.Values.addClass(element, \"velocity-animating\");\n\n                    /* The call array houses the tweensContainers for each element being animated in the current call. */\n                    call.push(tweensContainer);\n\n                    /* Store the tweensContainer and options if we're working on the default effects queue, so that they can be used by the reverse command. */\n                    if (opts.queue === \"\") {\n                        Data(element).tweensContainer = tweensContainer;\n                        Data(element).opts = opts;\n                    }\n\n                    /* Switch on the element's animating flag. */\n                    Data(element).isAnimating = true;\n\n                    /* Once the final element in this call's element set has been processed, push the call array onto\n                       Velocity.State.calls for the animation tick to immediately begin processing. */\n                    if (elementsIndex === elementsLength - 1) {\n                        /* Add the current call plus its associated metadata (the element set and the call's options) onto the global call container.\n                           Anything on this call container is subjected to tick() processing. */\n                        Velocity.State.calls.push([ call, elements, opts, null, promiseData.resolver ]);\n\n                        /* If the animation tick isn't running, start it. (Velocity shuts it off when there are no active calls to process.) */\n                        if (Velocity.State.isTicking === false) {\n                            Velocity.State.isTicking = true;\n\n                            /* Start the tick loop. */\n                            tick();\n                        }\n                    } else {\n                        elementsIndex++;\n                    }\n                }\n            }\n\n            /* When the queue option is set to false, the call skips the element's queue and fires immediately. */\n            if (opts.queue === false) {\n                /* Since this buildQueue call doesn't respect the element's existing queue (which is where a delay option would have been appended),\n                   we manually inject the delay property here with an explicit setTimeout. */\n                if (opts.delay) {\n                    setTimeout(buildQueue, opts.delay);\n                } else {\n                    buildQueue();\n                }\n            /* Otherwise, the call undergoes element queueing as normal. */\n            /* Note: To interoperate with jQuery, Velocity uses jQuery's own $.queue() stack for queuing logic. */\n            } else {\n                $.queue(element, opts.queue, function(next, clearQueue) {\n                    /* If the clearQueue flag was passed in by the stop command, resolve this call's promise. (Promises can only be resolved once,\n                       so it's fine if this is repeatedly triggered for each element in the associated call.) */\n                    if (clearQueue === true) {\n                        if (promiseData.promise) {\n                            promiseData.resolver(elements);\n                        }\n\n                        /* Do not continue with animation queueing. */\n                        return true;\n                    }\n\n                    /* This flag indicates to the upcoming completeCall() function that this queue entry was initiated by Velocity.\n                       See completeCall() for further details. */\n                    Velocity.velocityQueueEntryFlag = true;\n\n                    buildQueue(next);\n                });\n            }\n\n            /*********************\n                Auto-Dequeuing\n            *********************/\n\n            /* As per jQuery's $.queue() behavior, to fire the first non-custom-queue entry on an element, the element\n               must be dequeued if its queue stack consists *solely* of the current call. (This can be determined by checking\n               for the \"inprogress\" item that jQuery prepends to active queue stack arrays.) Regardless, whenever the element's\n               queue is further appended with additional items -- including $.delay()'s or even $.animate() calls, the queue's\n               first entry is automatically fired. This behavior contrasts that of custom queues, which never auto-fire. */\n            /* Note: When an element set is being subjected to a non-parallel Velocity call, the animation will not begin until\n               each one of the elements in the set has reached the end of its individually pre-existing queue chain. */\n            /* Note: Unfortunately, most people don't fully grasp jQuery's powerful, yet quirky, $.queue() function.\n               Lean more here: http://stackoverflow.com/questions/1058158/can-somebody-explain-jquery-queue-to-me */\n            if ((opts.queue === \"\" || opts.queue === \"fx\") && $.queue(element)[0] !== \"inprogress\") {\n                $.dequeue(element);\n            }\n        }\n\n        /**************************\n           Element Set Iteration\n        **************************/\n\n        /* If the \"nodeType\" property exists on the elements variable, we're animating a single element.\n           Place it in an array so that $.each() can iterate over it. */\n        $.each(elements, function(i, element) {\n            /* Ensure each element in a set has a nodeType (is a real element) to avoid throwing errors. */\n            if (Type.isNode(element)) {\n                processElement.call(element);\n            }\n        });\n\n        /******************\n           Option: Loop\n        ******************/\n\n        /* The loop option accepts an integer indicating how many times the element should loop between the values in the\n           current call's properties map and the element's property values prior to this call. */\n        /* Note: The loop option's logic is performed here -- after element processing -- because the current call needs\n           to undergo its queue insertion prior to the loop option generating its series of constituent \"reverse\" calls,\n           which chain after the current call. Two reverse calls (two \"alternations\") constitute one loop. */\n        var opts = $.extend({}, Velocity.defaults, options),\n            reverseCallsCount;\n\n        opts.loop = parseInt(opts.loop);\n        reverseCallsCount = (opts.loop * 2) - 1;\n\n        if (opts.loop) {\n            /* Double the loop count to convert it into its appropriate number of \"reverse\" calls.\n               Subtract 1 from the resulting value since the current call is included in the total alternation count. */\n            for (var x = 0; x < reverseCallsCount; x++) {\n                /* Since the logic for the reverse action occurs inside Queueing and therefore this call's options object\n                   isn't parsed until then as well, the current call's delay option must be explicitly passed into the reverse\n                   call so that the delay logic that occurs inside *Pre-Queueing* can process it. */\n                var reverseOptions = {\n                    delay: opts.delay,\n                    progress: opts.progress\n                };\n\n                /* If a complete callback was passed into this call, transfer it to the loop redirect's final \"reverse\" call\n                   so that it's triggered when the entire redirect is complete (and not when the very first animation is complete). */\n                if (x === reverseCallsCount - 1) {\n                    reverseOptions.display = opts.display;\n                    reverseOptions.visibility = opts.visibility;\n                    reverseOptions.complete = opts.complete;\n                }\n\n                animate(elements, \"reverse\", reverseOptions);\n            }\n        }\n\n        /***************\n            Chaining\n        ***************/\n\n        /* Return the elements back to the call chain, with wrapped elements taking precedence in case Velocity was called via the $.fn. extension. */\n        return getChain();\n    };\n\n    /* Turn Velocity into the animation function, extended with the pre-existing Velocity object. */\n    Velocity = $.extend(animate, Velocity);\n    /* For legacy support, also expose the literal animate method. */\n    Velocity.animate = animate;\n\n    /**************\n        Timing\n    **************/\n\n    /* Ticker function. */\n    var ticker = window.requestAnimationFrame || rAFShim;\n\n    /* Inactive browser tabs pause rAF, which results in all active animations immediately sprinting to their completion states when the tab refocuses.\n       To get around this, we dynamically switch rAF to setTimeout (which the browser *doesn't* pause) when the tab loses focus. We skip this for mobile\n       devices to avoid wasting battery power on inactive tabs. */\n    /* Note: Tab focus detection doesn't work on older versions of IE, but that's okay since they don't support rAF to begin with. */\n    if (!Velocity.State.isMobile && document.hidden !== undefined) {\n        document.addEventListener(\"visibilitychange\", function() {\n            /* Reassign the rAF function (which the global tick() function uses) based on the tab's focus state. */\n            if (document.hidden) {\n                ticker = function(callback) {\n                    /* The tick function needs a truthy first argument in order to pass its internal timestamp check. */\n                    return setTimeout(function() { callback(true) }, 16);\n                };\n\n                /* The rAF loop has been paused by the browser, so we manually restart the tick. */\n                tick();\n            } else {\n                ticker = window.requestAnimationFrame || rAFShim;\n            }\n        });\n    }\n\n    /************\n        Tick\n    ************/\n\n    /* Note: All calls to Velocity are pushed to the Velocity.State.calls array, which is fully iterated through upon each tick. */\n    function tick (timestamp) {\n        /* An empty timestamp argument indicates that this is the first tick occurence since ticking was turned on.\n           We leverage this metadata to fully ignore the first tick pass since RAF's initial pass is fired whenever\n           the browser's next tick sync time occurs, which results in the first elements subjected to Velocity\n           calls being animated out of sync with any elements animated immediately thereafter. In short, we ignore\n           the first RAF tick pass so that elements being immediately consecutively animated -- instead of simultaneously animated\n           by the same Velocity call -- are properly batched into the same initial RAF tick and consequently remain in sync thereafter. */\n        if (timestamp) {\n            /* We ignore RAF's high resolution timestamp since it can be significantly offset when the browser is\n               under high stress; we opt for choppiness over allowing the browser to drop huge chunks of frames. */\n            var timeCurrent = (new Date).getTime();\n\n            /********************\n               Call Iteration\n            ********************/\n\n            var callsLength = Velocity.State.calls.length;\n\n            /* To speed up iterating over this array, it is compacted (falsey items -- calls that have completed -- are removed)\n               when its length has ballooned to a point that can impact tick performance. This only becomes necessary when animation\n               has been continuous with many elements over a long period of time; whenever all active calls are completed, completeCall() clears Velocity.State.calls. */\n            if (callsLength > 10000) {\n                Velocity.State.calls = compactSparseArray(Velocity.State.calls);\n            }\n\n            /* Iterate through each active call. */\n            for (var i = 0; i < callsLength; i++) {\n                /* When a Velocity call is completed, its Velocity.State.calls entry is set to false. Continue on to the next call. */\n                if (!Velocity.State.calls[i]) {\n                    continue;\n                }\n\n                /************************\n                   Call-Wide Variables\n                ************************/\n\n                var callContainer = Velocity.State.calls[i],\n                    call = callContainer[0],\n                    opts = callContainer[2],\n                    timeStart = callContainer[3],\n                    firstTick = !!timeStart,\n                    tweenDummyValue = null;\n\n                /* If timeStart is undefined, then this is the first time that this call has been processed by tick().\n                   We assign timeStart now so that its value is as close to the real animation start time as possible.\n                   (Conversely, had timeStart been defined when this call was added to Velocity.State.calls, the delay\n                   between that time and now would cause the first few frames of the tween to be skipped since\n                   percentComplete is calculated relative to timeStart.) */\n                /* Further, subtract 16ms (the approximate resolution of RAF) from the current time value so that the\n                   first tick iteration isn't wasted by animating at 0% tween completion, which would produce the\n                   same style value as the element's current value. */\n                if (!timeStart) {\n                    timeStart = Velocity.State.calls[i][3] = timeCurrent - 16;\n                }\n\n                /* The tween's completion percentage is relative to the tween's start time, not the tween's start value\n                   (which would result in unpredictable tween durations since JavaScript's timers are not particularly accurate).\n                   Accordingly, we ensure that percentComplete does not exceed 1. */\n                var percentComplete = Math.min((timeCurrent - timeStart) / opts.duration, 1);\n\n                /**********************\n                   Element Iteration\n                **********************/\n\n                /* For every call, iterate through each of the elements in its set. */\n                for (var j = 0, callLength = call.length; j < callLength; j++) {\n                    var tweensContainer = call[j],\n                        element = tweensContainer.element;\n\n                    /* Check to see if this element has been deleted midway through the animation by checking for the\n                       continued existence of its data cache. If it's gone, skip animating this element. */\n                    if (!Data(element)) {\n                        continue;\n                    }\n\n                    var transformPropertyExists = false;\n\n                    /**********************************\n                       Display & Visibility Toggling\n                    **********************************/\n\n                    /* If the display option is set to non-\"none\", set it upfront so that the element can become visible before tweening begins.\n                       (Otherwise, display's \"none\" value is set in completeCall() once the animation has completed.) */\n                    if (opts.display !== undefined && opts.display !== null && opts.display !== \"none\") {\n                        if (opts.display === \"flex\") {\n                            var flexValues = [ \"-webkit-box\", \"-moz-box\", \"-ms-flexbox\", \"-webkit-flex\" ];\n\n                            $.each(flexValues, function(i, flexValue) {\n                                CSS.setPropertyValue(element, \"display\", flexValue);\n                            });\n                        }\n\n                        CSS.setPropertyValue(element, \"display\", opts.display);\n                    }\n\n                    /* Same goes with the visibility option, but its \"none\" equivalent is \"hidden\". */\n                    if (opts.visibility !== undefined && opts.visibility !== \"hidden\") {\n                        CSS.setPropertyValue(element, \"visibility\", opts.visibility);\n                    }\n\n                    /************************\n                       Property Iteration\n                    ************************/\n\n                    /* For every element, iterate through each property. */\n                    for (var property in tweensContainer) {\n                        /* Note: In addition to property tween data, tweensContainer contains a reference to its associated element. */\n                        if (property !== \"element\") {\n                            var tween = tweensContainer[property],\n                                currentValue,\n                                /* Easing can either be a pre-genereated function or a string that references a pre-registered easing\n                                   on the Velocity.Easings object. In either case, return the appropriate easing *function*. */\n                                easing = Type.isString(tween.easing) ? Velocity.Easings[tween.easing] : tween.easing;\n\n                            /******************************\n                               Current Value Calculation\n                            ******************************/\n\n                            /* If this is the last tick pass (if we've reached 100% completion for this tween),\n                               ensure that currentValue is explicitly set to its target endValue so that it's not subjected to any rounding. */\n                            if (percentComplete === 1) {\n                                currentValue = tween.endValue;\n                            /* Otherwise, calculate currentValue based on the current delta from startValue. */\n                            } else {\n                                var tweenDelta = tween.endValue - tween.startValue;\n                                currentValue = tween.startValue + (tweenDelta * easing(percentComplete, opts, tweenDelta));\n\n                                /* If no value change is occurring, don't proceed with DOM updating. */\n                                if (!firstTick && (currentValue === tween.currentValue)) {\n                                    continue;\n                                }\n                            }\n\n                            tween.currentValue = currentValue;\n\n                            /* If we're tweening a fake 'tween' property in order to log transition values, update the one-per-call variable so that\n                               it can be passed into the progress callback. */\n                            if (property === \"tween\") {\n                                tweenDummyValue = currentValue;\n                            } else {\n                                /******************\n                                   Hooks: Part I\n                                ******************/\n\n                                /* For hooked properties, the newly-updated rootPropertyValueCache is cached onto the element so that it can be used\n                                   for subsequent hooks in this call that are associated with the same root property. If we didn't cache the updated\n                                   rootPropertyValue, each subsequent update to the root property in this tick pass would reset the previous hook's\n                                   updates to rootPropertyValue prior to injection. A nice performance byproduct of rootPropertyValue caching is that\n                                   subsequently chained animations using the same hookRoot but a different hook can use this cached rootPropertyValue. */\n                                if (CSS.Hooks.registered[property]) {\n                                    var hookRoot = CSS.Hooks.getRoot(property),\n                                        rootPropertyValueCache = Data(element).rootPropertyValueCache[hookRoot];\n\n                                    if (rootPropertyValueCache) {\n                                        tween.rootPropertyValue = rootPropertyValueCache;\n                                    }\n                                }\n\n                                /*****************\n                                    DOM Update\n                                *****************/\n\n                                /* setPropertyValue() returns an array of the property name and property value post any normalization that may have been performed. */\n                                /* Note: To solve an IE<=8 positioning bug, the unit type is dropped when setting a property value of 0. */\n                                var adjustedSetData = CSS.setPropertyValue(element, /* SET */\n                                                                           property,\n                                                                           tween.currentValue + (parseFloat(currentValue) === 0 ? \"\" : tween.unitType),\n                                                                           tween.rootPropertyValue,\n                                                                           tween.scrollData);\n\n                                /*******************\n                                   Hooks: Part II\n                                *******************/\n\n                                /* Now that we have the hook's updated rootPropertyValue (the post-processed value provided by adjustedSetData), cache it onto the element. */\n                                if (CSS.Hooks.registered[property]) {\n                                    /* Since adjustedSetData contains normalized data ready for DOM updating, the rootPropertyValue needs to be re-extracted from its normalized form. ?? */\n                                    if (CSS.Normalizations.registered[hookRoot]) {\n                                        Data(element).rootPropertyValueCache[hookRoot] = CSS.Normalizations.registered[hookRoot](\"extract\", null, adjustedSetData[1]);\n                                    } else {\n                                        Data(element).rootPropertyValueCache[hookRoot] = adjustedSetData[1];\n                                    }\n                                }\n\n                                /***************\n                                   Transforms\n                                ***************/\n\n                                /* Flag whether a transform property is being animated so that flushTransformCache() can be triggered once this tick pass is complete. */\n                                if (adjustedSetData[0] === \"transform\") {\n                                    transformPropertyExists = true;\n                                }\n\n                            }\n                        }\n                    }\n\n                    /****************\n                        mobileHA\n                    ****************/\n\n                    /* If mobileHA is enabled, set the translate3d transform to null to force hardware acceleration.\n                       It's safe to override this property since Velocity doesn't actually support its animation (hooks are used in its place). */\n                    if (opts.mobileHA) {\n                        /* Don't set the null transform hack if we've already done so. */\n                        if (Data(element).transformCache.translate3d === undefined) {\n                            /* All entries on the transformCache object are later concatenated into a single transform string via flushTransformCache(). */\n                            Data(element).transformCache.translate3d = \"(0px, 0px, 0px)\";\n\n                            transformPropertyExists = true;\n                        }\n                    }\n\n                    if (transformPropertyExists) {\n                        CSS.flushTransformCache(element);\n                    }\n                }\n\n                /* The non-\"none\" display value is only applied to an element once -- when its associated call is first ticked through.\n                   Accordingly, it's set to false so that it isn't re-processed by this call in the next tick. */\n                if (opts.display !== undefined && opts.display !== \"none\") {\n                    Velocity.State.calls[i][2].display = false;\n                }\n                if (opts.visibility !== undefined && opts.visibility !== \"hidden\") {\n                    Velocity.State.calls[i][2].visibility = false;\n                }\n\n                /* Pass the elements and the timing data (percentComplete, msRemaining, timeStart, tweenDummyValue) into the progress callback. */\n                if (opts.progress) {\n                    opts.progress.call(callContainer[1],\n                                       callContainer[1],\n                                       percentComplete,\n                                       Math.max(0, (timeStart + opts.duration) - timeCurrent),\n                                       timeStart,\n                                       tweenDummyValue);\n                }\n\n                /* If this call has finished tweening, pass its index to completeCall() to handle call cleanup. */\n                if (percentComplete === 1) {\n                    completeCall(i);\n                }\n            }\n        }\n\n        /* Note: completeCall() sets the isTicking flag to false when the last call on Velocity.State.calls has completed. */\n        if (Velocity.State.isTicking) {\n            ticker(tick);\n        }\n    }\n\n    /**********************\n        Call Completion\n    **********************/\n\n    /* Note: Unlike tick(), which processes all active calls at once, call completion is handled on a per-call basis. */\n    function completeCall (callIndex, isStopped) {\n        /* Ensure the call exists. */\n        if (!Velocity.State.calls[callIndex]) {\n            return false;\n        }\n\n        /* Pull the metadata from the call. */\n        var call = Velocity.State.calls[callIndex][0],\n            elements = Velocity.State.calls[callIndex][1],\n            opts = Velocity.State.calls[callIndex][2],\n            resolver = Velocity.State.calls[callIndex][4];\n\n        var remainingCallsExist = false;\n\n        /*************************\n           Element Finalization\n        *************************/\n\n        for (var i = 0, callLength = call.length; i < callLength; i++) {\n            var element = call[i].element;\n\n            /* If the user set display to \"none\" (intending to hide the element), set it now that the animation has completed. */\n            /* Note: display:none isn't set when calls are manually stopped (via Velocity(\"stop\"). */\n            /* Note: Display gets ignored with \"reverse\" calls and infinite loops, since this behavior would be undesirable. */\n            if (!isStopped && !opts.loop) {\n                if (opts.display === \"none\") {\n                    CSS.setPropertyValue(element, \"display\", opts.display);\n                }\n\n                if (opts.visibility === \"hidden\") {\n                    CSS.setPropertyValue(element, \"visibility\", opts.visibility);\n                }\n            }\n\n            /* If the element's queue is empty (if only the \"inprogress\" item is left at position 0) or if its queue is about to run\n               a non-Velocity-initiated entry, turn off the isAnimating flag. A non-Velocity-initiatied queue entry's logic might alter\n               an element's CSS values and thereby cause Velocity's cached value data to go stale. To detect if a queue entry was initiated by Velocity,\n               we check for the existence of our special Velocity.queueEntryFlag declaration, which minifiers won't rename since the flag\n               is assigned to jQuery's global $ object and thus exists out of Velocity's own scope. */\n            if (opts.loop !== true && ($.queue(element)[1] === undefined || !/\\.velocityQueueEntryFlag/i.test($.queue(element)[1]))) {\n                /* The element may have been deleted. Ensure that its data cache still exists before acting on it. */\n                if (Data(element)) {\n                    Data(element).isAnimating = false;\n                    /* Clear the element's rootPropertyValueCache, which will become stale. */\n                    Data(element).rootPropertyValueCache = {};\n\n                    var transformHAPropertyExists = false;\n                    /* If any 3D transform subproperty is at its default value (regardless of unit type), remove it. */\n                    $.each(CSS.Lists.transforms3D, function(i, transformName) {\n                        var defaultValue = /^scale/.test(transformName) ? 1 : 0,\n                            currentValue = Data(element).transformCache[transformName];\n\n                        if (Data(element).transformCache[transformName] !== undefined && new RegExp(\"^\\\\(\" + defaultValue + \"[^.]\").test(currentValue)) {\n                            transformHAPropertyExists = true;\n\n                            delete Data(element).transformCache[transformName];\n                        }\n                    });\n\n                    /* Mobile devices have hardware acceleration removed at the end of the animation in order to avoid hogging the GPU's memory. */\n                    if (opts.mobileHA) {\n                        transformHAPropertyExists = true;\n                        delete Data(element).transformCache.translate3d;\n                    }\n\n                    /* Flush the subproperty removals to the DOM. */\n                    if (transformHAPropertyExists) {\n                        CSS.flushTransformCache(element);\n                    }\n\n                    /* Remove the \"velocity-animating\" indicator class. */\n                    CSS.Values.removeClass(element, \"velocity-animating\");\n                }\n            }\n\n            /*********************\n               Option: Complete\n            *********************/\n\n            /* Complete is fired once per call (not once per element) and is passed the full raw DOM element set as both its context and its first argument. */\n            /* Note: Callbacks aren't fired when calls are manually stopped (via Velocity(\"stop\"). */\n            if (!isStopped && opts.complete && !opts.loop && (i === callLength - 1)) {\n                /* We throw callbacks in a setTimeout so that thrown errors don't halt the execution of Velocity itself. */\n                try {\n                    opts.complete.call(elements, elements);\n                } catch (error) {\n                    setTimeout(function() { throw error; }, 1);\n                }\n            }\n\n            /**********************\n               Promise Resolving\n            **********************/\n\n            /* Note: Infinite loops don't return promises. */\n            if (resolver && opts.loop !== true) {\n                resolver(elements);\n            }\n\n            /****************************\n               Option: Loop (Infinite)\n            ****************************/\n\n            if (Data(element) && opts.loop === true && !isStopped) {\n                /* If a rotateX/Y/Z property is being animated to 360 deg with loop:true, swap tween start/end values to enable\n                   continuous iterative rotation looping. (Otherise, the element would just rotate back and forth.) */\n                $.each(Data(element).tweensContainer, function(propertyName, tweenContainer) {\n                    if (/^rotate/.test(propertyName) && parseFloat(tweenContainer.endValue) === 360) {\n                        tweenContainer.endValue = 0;\n                        tweenContainer.startValue = 360;\n                    }\n\n                    if (/^backgroundPosition/.test(propertyName) && parseFloat(tweenContainer.endValue) === 100 && tweenContainer.unitType === \"%\") {\n                        tweenContainer.endValue = 0;\n                        tweenContainer.startValue = 100;\n                    }\n                });\n\n                Velocity(element, \"reverse\", { loop: true, delay: opts.delay });\n            }\n\n            /***************\n               Dequeueing\n            ***************/\n\n            /* Fire the next call in the queue so long as this call's queue wasn't set to false (to trigger a parallel animation),\n               which would have already caused the next call to fire. Note: Even if the end of the animation queue has been reached,\n               $.dequeue() must still be called in order to completely clear jQuery's animation queue. */\n            if (opts.queue !== false) {\n                $.dequeue(element, opts.queue);\n            }\n        }\n\n        /************************\n           Calls Array Cleanup\n        ************************/\n\n        /* Since this call is complete, set it to false so that the rAF tick skips it. This array is later compacted via compactSparseArray().\n          (For performance reasons, the call is set to false instead of being deleted from the array: http://www.html5rocks.com/en/tutorials/speed/v8/) */\n        Velocity.State.calls[callIndex] = false;\n\n        /* Iterate through the calls array to determine if this was the final in-progress animation.\n           If so, set a flag to end ticking and clear the calls array. */\n        for (var j = 0, callsLength = Velocity.State.calls.length; j < callsLength; j++) {\n            if (Velocity.State.calls[j] !== false) {\n                remainingCallsExist = true;\n\n                break;\n            }\n        }\n\n        if (remainingCallsExist === false) {\n            /* tick() will detect this flag upon its next iteration and subsequently turn itself off. */\n            Velocity.State.isTicking = false;\n\n            /* Clear the calls array so that its length is reset. */\n            delete Velocity.State.calls;\n            Velocity.State.calls = [];\n        }\n    }\n\n    /******************\n        Frameworks\n    ******************/\n\n    /* Both jQuery and Zepto allow their $.fn object to be extended to allow wrapped elements to be subjected to plugin calls.\n       If either framework is loaded, register a \"velocity\" extension pointing to Velocity's core animate() method.  Velocity\n       also registers itself onto a global container (window.jQuery || window.Zepto || window) so that certain features are\n       accessible beyond just a per-element scope. This master object contains an .animate() method, which is later assigned to $.fn\n       (if jQuery or Zepto are present). Accordingly, Velocity can both act on wrapped DOM elements and stand alone for targeting raw DOM elements. */\n    global.Velocity = Velocity;\n\n    if (global !== window) {\n        /* Assign the element function to Velocity's core animate() method. */\n        global.fn.velocity = animate;\n        /* Assign the object function's defaults to Velocity's global defaults object. */\n        global.fn.velocity.defaults = Velocity.defaults;\n    }\n\n    /***********************\n       Packaged Redirects\n    ***********************/\n\n    /* slideUp, slideDown */\n    $.each([ \"Down\", \"Up\" ], function(i, direction) {\n        Velocity.Redirects[\"slide\" + direction] = function (element, options, elementsIndex, elementsSize, elements, promiseData) {\n            var opts = $.extend({}, options),\n                begin = opts.begin,\n                complete = opts.complete,\n                computedValues = { height: \"\", marginTop: \"\", marginBottom: \"\", paddingTop: \"\", paddingBottom: \"\" },\n                inlineValues = {};\n\n            if (opts.display === undefined) {\n                /* Show the element before slideDown begins and hide the element after slideUp completes. */\n                /* Note: Inline elements cannot have dimensions animated, so they're reverted to inline-block. */\n                opts.display = (direction === \"Down\" ? (Velocity.CSS.Values.getDisplayType(element) === \"inline\" ? \"inline-block\" : \"block\") : \"none\");\n            }\n\n            opts.begin = function() {\n                /* If the user passed in a begin callback, fire it now. */\n                begin && begin.call(elements, elements);\n\n                /* Cache the elements' original vertical dimensional property values so that we can animate back to them. */\n                for (var property in computedValues) {\n                    inlineValues[property] = element.style[property];\n\n                    /* For slideDown, use forcefeeding to animate all vertical properties from 0. For slideUp,\n                       use forcefeeding to start from computed values and animate down to 0. */\n                    var propertyValue = Velocity.CSS.getPropertyValue(element, property);\n                    computedValues[property] = (direction === \"Down\") ? [ propertyValue, 0 ] : [ 0, propertyValue ];\n                }\n\n                /* Force vertical overflow content to clip so that sliding works as expected. */\n                inlineValues.overflow = element.style.overflow;\n                element.style.overflow = \"hidden\";\n            }\n\n            opts.complete = function() {\n                /* Reset element to its pre-slide inline values once its slide animation is complete. */\n                for (var property in inlineValues) {\n                    element.style[property] = inlineValues[property];\n                }\n\n                /* If the user passed in a complete callback, fire it now. */\n                complete && complete.call(elements, elements);\n                promiseData && promiseData.resolver(elements);\n            };\n\n            Velocity(element, computedValues, opts);\n        };\n    });\n\n    /* fadeIn, fadeOut */\n    $.each([ \"In\", \"Out\" ], function(i, direction) {\n        Velocity.Redirects[\"fade\" + direction] = function (element, options, elementsIndex, elementsSize, elements, promiseData) {\n            var opts = $.extend({}, options),\n                propertiesMap = { opacity: (direction === \"In\") ? 1 : 0 },\n                originalComplete = opts.complete;\n\n            /* Since redirects are triggered individually for each element in the animated set, avoid repeatedly triggering\n               callbacks by firing them only when the final element has been reached. */\n            if (elementsIndex !== elementsSize - 1) {\n                opts.complete = opts.begin = null;\n            } else {\n                opts.complete = function() {\n                    if (originalComplete) {\n                        originalComplete.call(elements, elements);\n                    }\n\n                    promiseData && promiseData.resolver(elements);\n                }\n            }\n\n            /* If a display was passed in, use it. Otherwise, default to \"none\" for fadeOut or the element-specific default for fadeIn. */\n            /* Note: We allow users to pass in \"null\" to skip display setting altogether. */\n            if (opts.display === undefined) {\n                opts.display = (direction === \"In\" ? \"auto\" : \"none\");\n            }\n\n            Velocity(this, propertiesMap, opts);\n        };\n    });\n\n    return Velocity;\n}((window.jQuery || window.Zepto || window), window, document);\n}));\n\n/******************\n   Known Issues\n******************/\n\n/* The CSS spec mandates that the translateX/Y/Z transforms are %-relative to the element itself -- not its parent.\nVelocity, however, doesn't make this distinction. Thus, converting to or from the % unit with these subproperties\nwill produce an inaccurate conversion value. The same issue exists with the cx/cy attributes of SVG circles and ellipses. */\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/velocity-animate/velocity.js\n ** module id = 17\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.15\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind$1(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a non-enumerable property\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\nvar isIE9 = inBrowser && navigator.userAgent.toLowerCase().indexOf('msie 9.0') > 0;\n\nvar isAndroid = inBrowser && navigator.userAgent.toLowerCase().indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    timerFunc = setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} str\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  text = text.replace(/\\n/g, '');\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE$1 = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE$1.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text$1 = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether or not to handle fully object properties which\n   * are already backed by getters and seters. Depending on\n   * use case and environment, this might introduce non-neglible\n   * performance penalties.\n   */\n  convertAllProperties: false,\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n    warn = function (msg, e) {\n      if (hasConsole && (!config.silent || config.debug)) {\n        console.warn('[Vue warn]: ' + msg);\n        /* istanbul ignore if */\n        if (config.debug) {\n          if (e) {\n            throw e;\n          } else {\n            console.warn(new Error('Warning Stack Trace').stack);\n          }\n        }\n      }\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction on$1(el, event, cb) {\n  el.addEventListener(event, cb);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !(el instanceof SVGElement)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && el.content instanceof DocumentFragment) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail textNodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  trim(node, node.firstChild);\n  trim(node, node.lastChild);\n}\n\nfunction trim(parent, node) {\n  if (node && node.nodeType === 3 && !node.data.trim()) {\n    parent.removeChild(node);\n  }\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__vue_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\nvar reservedTagRE = /^(slot|partial|component)$/;\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        if (tag.indexOf('-') > -1 || /HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly?');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  var key = prop.path;\n  value = coerceProp(prop, value);\n  vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction assertProp(prop, value) {\n  // if a prop is not provided and is not required,\n  // skip the check.\n  if (prop.raw === null && !prop.required) {\n    return true;\n  }\n  var options = prop.options;\n  var type = options.type;\n  var valid = true;\n  var expectedType;\n  if (type) {\n    if (type === String) {\n      expectedType = 'string';\n      valid = typeof value === expectedType;\n    } else if (type === Number) {\n      expectedType = 'number';\n      valid = typeof value === 'number';\n    } else if (type === Boolean) {\n      expectedType = 'boolean';\n      valid = typeof value === 'boolean';\n    } else if (type === Function) {\n      expectedType = 'function';\n      valid = typeof value === 'function';\n    } else if (type === Object) {\n      expectedType = 'object';\n      valid = isPlainObject(value);\n    } else if (type === Array) {\n      expectedType = 'array';\n      valid = isArray(value);\n    } else {\n      valid = value instanceof type;\n    }\n  }\n  if (!valid) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator.call(null, value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\nfunction formatType(val) {\n  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n}\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * 0.11 deprecation warning\n */\n\nstrats.paramAttributes = function () {\n  /* istanbul ignore next */\n  process.env.NODE_ENV !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var def;\n    var ids = Object.keys(components);\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id) {\n  var assets = options[type];\n  var camelizedId;\n  return assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n}\n\n/**\n * Assert asset exists\n */\n\nfunction assertAsset(val, type, id) {\n  if (!val) {\n    process.env.NODE_ENV !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n  }\n}\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index.\n *\n * @param {Number} index\n * @param {*} val\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar uid$3 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$3++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction protoAugment(target, src) {\n  target.__proto__ = src;\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  // cater for pre-defined getter/setters\n  var getter, setter;\n  if (config.convertAllProperties) {\n    var property = Object.getOwnPropertyDescriptor(obj, key);\n    if (property && property.configurable === false) {\n      return;\n    }\n    getter = property && property.get;\n    setter = property && property.set;\n  }\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind$1,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on$1,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tassertAsset: assertAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tinitProp: initProp,\n\tassertProp: assertProp,\n\tcoerceProp: coerceProp,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\")|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    return new Function('scope', 'return ' + body + ';');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n      window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('flush');\n    }\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        queue.splice(has[id], 1);\n        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // if an internal watcher is pushed, but the internal\n    // queue is already depleted, we run it immediately.\n    if (internalQueueDepleted && !watcher.user) {\n      watcher.run();\n      return;\n    }\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String} expression\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = isFn ? expOrFn.toString() : expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = Object.create(null);\n  this.newDeps = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDeps[id]) {\n    this.newDeps[id] = dep;\n    if (!this.deps[id]) {\n      this.deps[id] = dep;\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDeps = Object.create(null);\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var ids = Object.keys(this.deps);\n  var i = ids.length;\n  while (i--) {\n    var id = ids[i];\n    if (!this.newDeps[id]) {\n      this.deps[id].removeSub(this);\n    }\n  }\n  this.deps = this.newDeps;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var depIds = Object.keys(this.deps);\n  var i = depIds.length;\n  while (i--) {\n    this.deps[depIds[i]].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // we can skip this if the vm if being destroyed\n    // which can improve teardown performance.\n    if (!this.vm._isBeingDestroyed) {\n      this.vm._watchers.$remove(this);\n    }\n    var depIds = Object.keys(this.deps);\n    var i = depIds.length;\n    while (i--) {\n      this.deps[depIds[i]].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n  }\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar FOR = 2000;\nvar IF = 2000;\nvar SLOT = 2100;\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        value = value.replace(importantRE, '').trim();\n      }\n      this.el.style.setProperty(prop, value, isImportant);\n    } else {\n      this.el.style.removeProperty(prop);\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  if (camel in testEl.style) {\n    return prop;\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixes[i] + prop;\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value);\n      } else {\n        el.setAttribute(attr, value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': 46,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nvar on = {\n\n  acceptStatement: true,\n  priority: ON,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on$1(self.el.contentWindow, self.arg, self.handler);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on$1(this.el, this.arg, this.handler);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      jQuery(el).on('change', this.listener);\n      if (!lazy) {\n        jQuery(el).on('input', this.listener);\n      }\n    } else {\n      this.on('change', this.listener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      jQuery(el).off('change', this.listener);\n      jQuery(el).off('input', this.listener);\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && node.content instanceof DocumentFragment;\n}\n\nvar tagRE$1 = /<([\\w:]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var hit = templateCache.get(templateString);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    var templateStringToUse = raw ? templateString : templateString.trim();\n    node.innerHTML = prefix + templateStringToUse + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n\n  templateCache.put(templateString, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (template instanceof DocumentFragment) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__vue_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__vfrag__ = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__vfrag__ = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : el.outerHTML);\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar vIf = {\n\n  priority: IF,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseFactory = new FragmentFactory(this.vm, next);\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n      this.factory = new FragmentFactory(this.vm, el);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseFactory && !this.elseFrag) {\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar uid$1 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in items\" syntax\n    var inMatch = this.expression.match(/(.*) in (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Alias is required in v-for.');\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$1;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          frag.scope[alias] = value;\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    defineReactive(scope, alias, value);\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__vfrag__ = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number') {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__vfrag__;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__vfrag__;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(n);\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n  };\n}\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\nvar text = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\n// must export plain object\nvar publicDirectives = {\n  text: text,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on,\n  bind: bind,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind$1(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n\n  // Important hack:\n  // in Chrome, if a just-entered element is applied the\n  // leave class while its interpolated property still has\n  // a very small value (within one frame), Chrome will\n  // skip the leave transition entirely and not firing the\n  // transtionend event. Therefore we need to protected\n  // against such cases using a one-frame timeout.\n  this.justEntered = true;\n  var self = this;\n  setTimeout(function () {\n    self.justEntered = false;\n  }, 17);\n\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on$1(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nvar transition = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    // apply on closest vm\n    el.__v_trans = new Transition(el, id, hooks, this.el.__vue__ || this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      val = coerceProp(prop, val);\n      if (assertProp(prop, val)) {\n        child[childKey] = val;\n      }\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   */\n\n  resolveComponent: function resolveComponent(id, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || id;\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(id, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHook = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHook && !cached) {\n      this.waitingFor = newComponent;\n      activateHook.call(newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      this.waitingFor.$destroy();\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (process.env.NODE_ENV !== 'production') {\n      if (current) current._inactive = true;\n      target._inactive = false;\n    }\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    var keys = this.prevKeys = Object.keys(value);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      if (value[key]) {\n        addClass(this.el, key);\n      } else {\n        removeClass(this.el, key);\n      }\n    }\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        addClass(this.el, value[i]);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (this.prevKeys) {\n      var i = this.prevKeys.length;\n      while (i--) {\n        var key = this.prevKeys[i];\n        if (key && (!value || !contains$1(value, key))) {\n          removeClass(this.el, key);\n        }\n      }\n    }\n  }\n};\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  var i = keys.length;\n  while (i--) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\nfunction contains$1(value, key) {\n  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n}\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition\n};\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.');\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.');\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (options.required) {\n      // warn missing required\n      process.env.NODE_ENV !== 'production' && warn('Missing required prop: ' + name);\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, getDefault(vm, options));\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (vm._context) {\n          if (prop.mode === propBindingModes.ONE_TIME) {\n            // one time binding\n            value = (scope || vm._context).$get(prop.parentPath);\n            initProp(vm, prop, value);\n          } else {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          }\n        } else {\n            process.env.NODE_ENV !== 'production' && warn('Cannot bind dynamic prop on a root instance' + ' with no parent: ' + prop.name + '=\"' + raw + '\"');\n          }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value\n        value = options.type === Boolean && raw === '' ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} options\n * @return {*}\n */\n\nfunction getDefault(vm, options) {\n  // no default, return undefined\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar argRE = /:(.*)$/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// terminal directives\nvar terminalDirectives = ['for', 'if'];\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (!destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(el.attributes, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: publicDirectives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) return;\n  // special case: give named slot a higher priority\n  // than unnamed slots\n  if (tag === 'slot' && hasBindAttr(el, 'name')) {\n    tag = '_namedSlot';\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n  var value, dirName;\n  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n    dirName = terminalDirectives[i];\n    value = el.getAttribute('v-' + dirName);\n    if (value != null) {\n      return makeTerminalNodeLinkFn(el, dirName, value, options);\n    }\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} [def]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    // either an element directive, or if/for\n    def: def || publicDirectives[dirName]\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', publicDirectives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', publicDirectives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', publicDirectives.bind);\n            }\n          } else\n\n            // normal directives\n            if (name.indexOf('v-') === 0) {\n              // check arg\n              arg = (arg = name.match(argRE)) && arg[1];\n              if (arg) {\n                name = name.replace(argRE, '');\n              }\n              // extract directive name\n              dirName = name.slice(2);\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName);\n\n              if (process.env.NODE_ENV !== 'production') {\n                assertAsset(dirDef, 'directive', dirName);\n              }\n\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (el instanceof DocumentFragment) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\tterminalDirectives: terminalDirectives,\n\ttransclude: transclude\n});\n\nfunction stateMixin (Vue) {\n\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var propsData = this._data;\n    var optionsDataFn = this.$options.data;\n    var optionsData = optionsDataFn && optionsDataFn();\n    if (optionsData) {\n      this._data = optionsData;\n      for (var prop in propsData) {\n        if (process.env.NODE_ENV !== 'production' && hasOwn(optionsData, prop)) {\n          warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n        }\n        if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n          set(optionsData, prop, propsData[prop]);\n        }\n      }\n    }\n    var data = this._data;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      this._proxy(key);\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind$1(userDef.get, this) : noop;\n          def.set = userDef.set ? bind$1(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind$1(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {String} name\n * @param {Node} el\n * @param {Vue} vm\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} raw\n * @param {Object} def - directive definition object\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n *\n * @param {Object} def\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind$1(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind$1(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = params[i];\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n */\n\nDirective.prototype.on = function (event, handler) {\n  on$1(this.el, event, handler);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   * @return {Element}\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n    return el;\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (el instanceof DocumentFragment) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {String} name - directive name\n   * @param {Node} node   - target node\n   * @param {Object} desc - parsed directive descriptor\n   * @param {Object} def  - directive definition object\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[i];\n      fn = resolveAsset(this.$options, 'filters', filter.name);\n      if (process.env.NODE_ENV !== 'production') {\n        assertAsset(fn, 'filter', filter.name);\n      }\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String} id\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (id, cb) {\n    var factory = resolveAsset(this.$options, 'components', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(factory, 'component', id);\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory(function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nfunction globalAPI (Vue) {\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text$1,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]+$/.test(name)) {\n        warn('Invalid component name: ' + name);\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n}\n\nvar filterRE = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      for (var key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.');\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install APIs\nglobalAPI(Vue);\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} sortKey\n * @param {String} reverse\n */\n\nfunction orderBy(arr, sortKey, reverse) {\n  arr = convertArray(arr);\n  if (!sortKey) {\n    return arr;\n  }\n  var order = reverse && reverse < 0 ? -1 : 1;\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(function (a, b) {\n    if (sortKey !== '$key') {\n      if (isObject(a) && '$value' in a) a = a.$value;\n      if (isObject(b) && '$value' in b) b = b.$value;\n    }\n    a = isObject(a) ? getPath(a, sortKey) : a;\n    b = isObject(b) ? getPath(b, sortKey) : b;\n    return a === b ? 0 : a > b ? order : -order;\n  });\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return _currency + sign + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(partial, 'partial', id);\n    }\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\n// This is the elementDirective that handles <content>\n// transclusions. It relies on the raw content of an\n// instance being stored as `$options._content` during\n// the transclude phase.\n\n// We are exporting two versions, one for named and one\n// for unnamed, because the unnamed slots must be compiled\n// AFTER all named slots have selected their content. So\n// we need to give them different priorities in the compilation\n// process. (See #1965)\n\nvar slot = {\n\n  priority: SLOT,\n\n  bind: function bind() {\n    var host = this.vm;\n    var raw = host.$options._content;\n    if (!raw) {\n      this.fallback();\n      return;\n    }\n    var context = host._context;\n    var slotName = this.params && this.params.name;\n    if (!slotName) {\n      // Default slot\n      this.tryCompile(extractFragment(raw.childNodes, raw, true), context, host);\n    } else {\n      // Named slot\n      var selector = '[slot=\"' + slotName + '\"]';\n      var nodes = raw.querySelectorAll(selector);\n      if (nodes.length) {\n        this.tryCompile(extractFragment(nodes, raw), context, host);\n      } else {\n        this.fallback();\n      }\n    }\n  },\n\n  tryCompile: function tryCompile(content, context, host) {\n    if (content.hasChildNodes()) {\n      this.compile(content, context, host);\n    } else {\n      this.fallback();\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar namedSlot = extend(extend({}, slot), {\n  priority: slot.priority + 1,\n  params: ['name']\n});\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @param {Element} parent\n * @param {Boolean} main\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent, main) {\n  var frag = document.createDocumentFragment();\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    // if this is the main outlet, we want to skip all\n    // previously selected nodes;\n    // otherwise, we want to mark the node as selected.\n    // clone the node so the original raw content remains\n    // intact. this ensures proper re-compilation in cases\n    // where the outlet is inside a conditional block\n    if (main && !node.__v_selected) {\n      append(node);\n    } else if (!main && node.parentNode === parent) {\n      node.__v_selected = true;\n      append(node);\n    }\n  }\n  return frag;\n\n  function append(node) {\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      node = parseTemplate(node);\n    }\n    node = cloneNode(node);\n    frag.appendChild(node);\n  }\n}\n\nvar elementDirectives = {\n  slot: slot,\n  _namedSlot: namedSlot, // same as slot but with higher priority\n  partial: partial\n};\n\nVue.version = '1.0.15';\n\n/**\n * Vue and every constructor that extends Vue has an\n * associated options object, which can be accessed during\n * compilation steps as `this.constructor.options`.\n *\n * These can be seen as the default options of every\n * Vue instance.\n */\n\nVue.options = {\n  directives: publicDirectives,\n  elementDirectives: elementDirectives,\n  filters: filters,\n  transitions: {},\n  components: {},\n  partials: {},\n  replace: true\n};\n\n// devtools global hook\n/* istanbul ignore if */\nif (process.env.NODE_ENV !== 'production' && inBrowser) {\n  if (window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n    window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('init', Vue);\n  } else if (/Chrome\\/\\d+/.test(navigator.userAgent)) {\n    console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n  }\n}\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 18\n ** module chunks = 0\n **/","/* The following list is defined in React's core */\nvar IS_UNITLESS = {\n  animationIterationCount: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridColumn: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  stopOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nmodule.exports = function(name, value) {\n  if(typeof value === 'number' && !IS_UNITLESS[ name ]) {\n    return value + 'px';\n  } else {\n    return value;\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/add-px-to-style/index.js\n ** module id = 19\n ** module chunks = 0\n **/","var str = Object.prototype.toString\n\nmodule.exports = anArray\n\nfunction anArray(arr) {\n  return (\n       arr.BYTES_PER_ELEMENT\n    && str.call(arr.buffer) === '[object ArrayBuffer]'\n    || Array.isArray(arr)\n  )\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/an-array/index.js\n ** module id = 20\n ** module chunks = 0\n **/","<template>\n  <div id=\"app\">\n    <section-preloader v-if=\"!isHidden\"></section-preloader>\n    <section-about></section-about>\n    <router-view class=\"component-sections\" v-if=\"isLoaded\"></router-view>\n    <div v-el:background class=\"component-background\" v-show=\"isLoaded\"></div>\n  </div>\n</template>\n\n<script>\nimport Resize from 'brindille-resize'\nimport Css from 'dom-css'\n\nimport SectionPreloader from './display/sections/Preloader.vue'\nimport SectionAbout from './display/sections/About.vue'\n\nimport StorePreloader from './store/preloader'\n\nexport default {\n  components: {\n    SectionPreloader,\n    SectionAbout\n  },\n\n  computed: {\n    isLoaded () {\n      return (StorePreloader.state.progress >= 1)\n    },\n    isHidden () {\n      return StorePreloader.state.isHidden\n    }\n  },\n  ready () {\n\n    this.resize()\n    Resize.addListener(this.resize)\n\n  },\n  methods: {\n    /**\n    * resize\n    */\n    resize () {\n\n      Css(this.$els.background, { width: Resize.width, height: Resize.height })\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n@require 'display/styles/normalize'\n@import 'display/styles/variables'\n\n#app\n  font 100% $font-content\n.component-sections\n  position absolute\n.component-background\n  position absolute\n  top 0\n  background-color $color-background\n</style>\n\n\n/** WEBPACK FOOTER **\n ** App.vue?2eeec27e\n **/","<template>\n  <div class=\"section-about\">\n    <aside v-el:content class=\"content\" v-show=\"isOpen\" transition='section-about-content'>\n      <div v-el:background class=\"background\"></div>\n      <div v-el=\"container\" class=\"container\">\n        <a v-el:close-button @click=\"close\" class=\"close-button\" v-show=\"isOpen\" transition='section-about-close-button'>\n          Close <span class=\"line\"></span>\n        </a>\n      </div>\n    </aside>\n    <a v-el:open-button v-show=\"!isOpen\" class=\"open-button\" @click=\"open\" transition='section-about-open-button'>\n      <span class=\"line\"></span> About\n    </a>\n  </div>\n</template>\n\n\n\n\n<script>\nimport Vue from 'vue'\nimport Animate from 'velocity-animate'\nimport Resize from 'brindille-resize'\nimport Css from 'dom-css'\n\nimport Store from '../../store/about'\n\nexport default {\n\n  computed: {\n    isOpen () {\n      return Store.state.isOpen\n    }\n  },\n  attached () {\n\n    this.resize()\n    Resize.addListener(this.resize)\n\n  },\n  detached () {\n\n    Resize.removeListener(this.resize)\n\n  },\n  methods: {\n    /**\n    * resize\n    */\n    resize () {\n\n      Css(this.$els.content, { width: Resize.width, height: Resize.height })\n      Css(this.$els.openButton, { top: 35 })\n      Css(this.$els.closeButton, { top: 35 })\n    },\n    /**\n    * open\n    */\n    open () {\n\n      Store.actions.open()\n    },\n    /**\n    * close\n    */\n    close () {\n\n      Store.actions.close()\n    }\n  }\n}\n\n/**\n========== TRANSITION - section-about-open-button\n**/\n\nVue.transition('section-about-open-button', {\n  css: false,\n  enter: function (el, done) {\n\n    Animate(el,\n      { opacity: [1, 'easeInSine', 0], translateX: [0, 'easeInSine', -Resize.width * 0.02] },\n      { duration: 200, delay: 300, complete: () => {\n        done()\n      }}\n    )\n  },\n  leave: function (el, done) {\n\n    Animate(el,\n      { opacity: [0, 'easeInSine', 1], translateX: [-Resize.width * 0.02, 'easeInSine', 0] },\n      { duration: 200, complete: () => {\n        done()\n      }}\n    )\n  }\n})\n\n/**\n========== TRANSITION - section-about-container\n**/\n\nVue.transition('section-about-content', {\n  css: false,\n  enter: function (el, done) {\n\n    Css(el, { opacity: 0 })\n\n    Animate(el,\n      { opacity: [1, 'easeInSine', 0] },\n      { duration: 400, delay: 200, complete: () => {\n        done()\n      }}\n    )\n  },\n  leave: function (el, done) {\n\n    Animate(el,\n      { opacity: [0, 'easeInSine', 1] },\n      { duration: 400, complete: () => {\n        done()\n      }}\n    )\n  }\n})\n\n/**\n========== TRANSITION - section-about-close-button\n**/\n\nVue.transition('section-about-close-button', {\n  css: false,\n  enter: function (el, done) {\n\n    Animate(el,\n      { opacity: [1, 'easeInSine', 0], translateX: [0, 'easeInSine', Resize.width * 0.02] },\n      { duration: 200, delay: 300, complete: () => {\n        done()\n      }}\n    )\n  },\n  leave: function (el, done) {\n\n    Animate(el,\n      { opacity: [0, 'easeInSine', 1], translateX: [Resize.width * 0.02, 'easeInSine', 0] },\n      { duration: 200, complete: () => {\n        done()\n      }}\n    )\n  }\n})\n\n</script>\n\n\n\n\n<style lang=\"stylus\">\n@import '../styles/variables';\n\n.section-about\n  position absolute\n  z-index('.section-about')\n  color $color-link\n  font-family $font-link\n  .open-button,\n  .close-button\n    display inline-block\n    position absolute\n    top 0\n    font-size 0.6em\n    vertical-align middle\n    text-transform uppercase\n    letter-spacing 0.2em\n    white-space nowrap\n    cursor pointer\n    .line\n      display inline-block\n      width 35px\n      height 1px\n      margin-bottom 0.35em\n      background-color $color-link\n      transform-origin -100% 0\n  .close-button\n    right 0\n  .content\n    position relative\n  .container\n    position relative\n  .background\n    position absolute\n    top 0\n    width 100%\n    height 100%\n    background-color #111\n</style>\n\n\n/** WEBPACK FOOTER **\n ** About.vue?7a0fbb58\n **/","<template>\n  <section class=\"section-preloader\">\n    <div v-el:loading class=\"loading\">\n      <div v-el:loading-progress class=\"loading-progress\"></div>\n    </div>\n    <div v-el:background-top class=\"background-top\"></div>\n    <div v-el:background-bottom class=\"background-bottom\"></div>\n  </section>\n</template>\n\n\n\n\n<script>\nimport Animate from 'velocity-animate'\nimport Loader from 'preloader'\nimport Resize from 'brindille-resize'\nimport Css from 'dom-css'\nimport CssTransform from 'dom-css-transform'\nimport Store from '../../store/preloader'\n\nexport default {\n\n  attached () {\n\n    this.reset()\n    this.show()\n\n    Resize.addListener(this.resize)\n\n    this.loader = new Loader()\n    this.loader.addImage('assets/yeoman.png')\n\n    this.loader.onProgress.add(this.loaderProgressHandler)\n    this.loader.onComplete.addOnce(this.loaderCompleteHandler)\n    this.loader.load()\n  },\n  detached () {\n\n    Resize.removeListener(this.resize)\n  },\n  methods: {\n    /**\n    * reset\n    */\n    reset () {\n\n      this.resize()\n\n      CssTransform(this.$els.loadingProgress, { scale: [1, 0, 1] })\n    },\n    /**\n    * resize\n    */\n    resize () {\n\n      Css(this.$el, { width: Resize.width, height: Resize.height })\n    },\n    /**\n    * show\n    */\n    show () {\n\n      Animate(this.$els.loading,\n        { opacity: [1, 0] },\n        { duration: 200 }\n      )\n    },\n    /**\n    * updateProgress\n    */\n    updateLoadingProgress (progress, isComplete = false) {\n\n      Store.actions.progressUpdate(progress)\n\n      CssTransform(this.$els.loadingProgress, { scale: [1, progress, 1] })\n\n      if (isComplete) {\n        this.hide()\n      }\n\n      /**\n      Animate(this.$els.loadingProgress,\n        { scaleX: progress },\n        { duration: 1000, easing: 'easeInOutExpo', queue: true, complete: () => {\n          console.log('complete')\n          if (isComplete) {\n            this.hide()\n          }\n        }}\n      )**/\n    },\n    /**\n    * loaderProgressHandler\n    */\n    loaderProgressHandler (progress) {\n\n      this.updateLoadingProgress(progress)\n    },\n    /**\n    * loaderCompleteHandler\n    */\n    loaderCompleteHandler () {\n\n      this.loader.onProgress.remove(this.loaderProgressHandler)\n      this.loader = null\n\n      this.updateLoadingProgress(1, true)\n    },\n    /**\n    * hide\n    */\n    hide () {\n\n      Animate(this.$els.loading,\n        { opacity: 0 },\n        { duration: 200, delay: 300}\n      )\n\n      Animate(this.$els.backgroundBottom,\n        { translateY: '100%' },\n        { duration: 1000, delay: 500, easing: 'easeInOutCubic' }\n      )\n\n      Animate(this.$els.backgroundTop,\n        { translateY: '-100%' },\n        { duration: 1000, delay: 500, easing: 'easeInOutCubic', complete: () => { Store.actions.hide() } }\n      )\n    }\n  }\n}\n</script>\n\n\n\n\n<style lang=\"stylus\">\n@import '../styles/variables';\n\n.section-preloader\n  position absolute\n  z-index('.section-preloader')\n  .background-top,\n  .background-bottom\n    width 100%\n    height 50%\n    background-color #fff\n  .loading\n    position absolute\n    z-index 1\n    top: 50%\n    width 100%\n    height 1px\n    background-color #ccc\n    transition: transform 0.3s ease;\n  .loading-progress\n    width 100%\n    height 100%\n    background-color #000\n    transform-origin 0 0\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Preloader.vue?96642e4e\n **/","<template>\n  <section class=\"section-project\">\n  </section>\n</template>\n\n\n\n\n<script>\n\nimport { data } from '../../api/projects'\nimport Store from '../../store/project'\nimport StoreAbout from '../../store/about'\n\nexport default {\n\n  components: {\n  },\n  route: {\n    data: function (transition) {\n\n      if (data[this.$route.params.id]) {\n\n        this.projects.push(this.$route.params.id)\n\n        if (this.projects.length > 1) {\n\n          this.projects.shift()\n        }\n\n        Store.actions.update(this.$route.params.id)\n      } else {\n\n        transition.redirect('/')\n      }\n\n      // if navigate with history (ex: browser back button) > close about panel\n      StoreAbout.actions.close()\n    }\n  },\n  data () {\n    return {\n      projects: []\n    }\n  }\n}\n\n</script>\n\n\n\n\n<style lang=\"stylus\">\n@import '../styles/variables';\n\n.section-project\n  color #ff0\n</style>\n\n\n/** WEBPACK FOOTER **\n ** Project.vue?f12253c2\n **/","import { data } from '../api/projects'\n\nexport function configRouter (router) {\n\n  router.on('/project/:id', {\n    name: 'project',\n    component: require('../display/sections/Project.vue')\n  })\n\n  router.redirect({\n    '*': '/project/' + Object.keys(data)[0]\n  })\n\n  router.afterEach(function (transition) {\n    // google analytics\n    // ga('send', 'pageview');\n  })\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/routes.js\n **/","import Vuex from 'vuex'\n\n// STATE\n\nconst state = {\n  project: '',\n  isDetailsOpen: false\n}\n\n// ACTIONS\n\nconst actions = {\n  update: 'UPDATE',\n  openDetails: 'OPEN_DETAILS',\n  closeDetails: 'CLOSE_DETAILS'\n}\n\n// MUTATIONS\n\nconst mutations = {\n  UPDATE (state, project) {\n    state.project = project\n    state.isDetailsOpen = false\n  },\n\n  OPEN_DETAILS (state) {\n    state.isDetailsOpen = true\n  },\n\n  CLOSE_DETAILS (state) {\n    state.isDetailsOpen = false\n  }\n}\n\n// ------------\n\nexport default new Vuex.Store({\n  state,\n  actions,\n  mutations\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/store/project.js\n **/","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/core-js/object/keys.js\n ** module id = 27\n ** module chunks = 0\n **/","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/brindille-resize/~/component-emitter/index.js\n ** module id = 28\n ** module chunks = 0\n **/","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/$.core').Object.keys;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/fn/object/keys.js\n ** module id = 29\n ** module chunks = 0\n **/","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/$.a-function.js\n ** module id = 30\n ** module chunks = 0\n **/","// optional / simple context binding\nvar aFunction = require('./$.a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/$.ctx.js\n ** module id = 31\n ** module chunks = 0\n **/","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/$.defined.js\n ** module id = 32\n ** module chunks = 0\n **/","var global    = require('./$.global')\n  , core      = require('./$.core')\n  , ctx       = require('./$.ctx')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && key in target;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(param){\n        return this instanceof C ? new C(param) : C(param);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n  }\n};\n// type bitmap\n$export.F = 1;  // forced\n$export.G = 2;  // global\n$export.S = 4;  // static\n$export.P = 8;  // proto\n$export.B = 16; // bind\n$export.W = 32; // wrap\nmodule.exports = $export;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/$.export.js\n ** module id = 33\n ** module chunks = 0\n **/","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/$.fails.js\n ** module id = 34\n ** module chunks = 0\n **/","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/$.global.js\n ** module id = 35\n ** module chunks = 0\n **/","// most Object methods by ES6 should accept primitives\nvar $export = require('./$.export')\n  , core    = require('./$.core')\n  , fails   = require('./$.fails');\nmodule.exports = function(KEY, exec){\n  var fn  = (core.Object || {})[KEY] || Object[KEY]\n    , exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/$.object-sap.js\n ** module id = 36\n ** module chunks = 0\n **/","// 7.1.13 ToObject(argument)\nvar defined = require('./$.defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/$.to-object.js\n ** module id = 37\n ** module chunks = 0\n **/","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./$.to-object');\n\nrequire('./$.object-sap')('keys', function($keys){\n  return function keys(it){\n    return $keys(toObject(it));\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-js/library/modules/es6.object.keys.js\n ** module id = 38\n ** module chunks = 0\n **/","var quat = require('./lib/quat')\nvar mat4 = {\n    identity: require('gl-mat4/identity'),\n    fromRotationTranslation: require('gl-mat4/fromRotationTranslation'),\n    scale: require('gl-mat4/scale'),\n    multiply: require('gl-mat4/multiply')\n}\n\nvar ZERO3 = [0, 0, 0]\nvar ZERO2 = [0, 0]\nvar ONES = [1, 1, 1]\nvar IDENTITY = [0, 0, 0, 1]\nvar tmpQuat = [0, 0, 0, 1]\n\nvar tmpMat4 = mat4.identity([])\nvar translation = [0,0,0],\n    euler = [0,0,0],\n    scale = [1,1,1],\n    skew = [0,0]\n\nmodule.exports = function compose(out, opt) {\n    if (!opt)\n        return mat4.identity(out)\n        \n    copyVec3(translation, opt.translate || ZERO3)\n    copyVec2(skew, opt.skew || ZERO2)\n    copyScale3(scale, opt.scale || ONES)\n    var quaternion = opt.quaternion\n\n    if (!quaternion) {\n        //build a XYZ euler angle from 3D rotation\n        quaternion = quat.identity(tmpQuat)\n        copyVec3(euler, opt.rotate || ZERO3)\n        quat.fromEuler(quaternion, euler)\n    }\n\n    //apply translation & rotation\n    mat4.fromRotationTranslation(out, quaternion, translation)\n\n    //apply a combined 2D skew() operation\n    if (skew[0]!==0 || skew[1]!==0) {\n        tmpMat4[4] = Math.tan(skew[0])\n        tmpMat4[1] = Math.tan(skew[1])\n        mat4.multiply(out, out, tmpMat4)\n    }\n\n    //apply the independent skewX() and skewY() operations\n    if (typeof opt.skewX === 'number') {\n        tmpMat4[4] = Math.tan(opt.skewX)\n        tmpMat4[1] = 0\n        mat4.multiply(out, out, tmpMat4)\n    }\n\n    if (typeof opt.skewY === 'number') {\n        tmpMat4[4] = 0\n        tmpMat4[1] = Math.tan(opt.skewY)\n        mat4.multiply(out, out, tmpMat4)\n    }\n    \n    //apply scale() operation\n    mat4.scale(out, out, scale)\n\n    return out\n}\n\n//safely copy vec2/vec3 to a vec3\nfunction copyVec3(out, a) {\n    out[0] = a[0]||0\n    out[1] = a[1]||0\n    out[2] = a[2]||0\n    return out\n}\n\nfunction copyVec2(out, a) {\n    out[0] = a[0]||0\n    out[1] = a[1]||0\n    return out\n}\n\nfunction copyScale3(out, a) {\n    out[0] = typeof a[0] === 'number' ? a[0] : 1\n    out[1] = typeof a[1] === 'number' ? a[1] : 1\n    out[2] = typeof a[2] === 'number' ? a[2] : 1\n    return out\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-mat4/index.js\n ** module id = 39\n ** module chunks = 0\n **/","//ZYX order\nmodule.exports.fromEuler = function(quaternion, euler) {\n    var x = euler[0], y = euler[1], z = euler[2]\n\n    var sx = Math.sin(x/2), sy = Math.sin(y/2),\n        sz = Math.sin(z/2), cx = Math.cos(x/2),\n        cy = Math.cos(y/2), cz = Math.cos(z/2)\n\n    quaternion[3] = cx*cy*cz - sx*sy*sz\n    quaternion[0] = sx*cy*cz + cx*sy*sz\n    quaternion[1] = cx*sy*cz - sx*cy*sz\n    quaternion[2] = cx*cy*sz + sx*sy*cz\n    return quaternion\n}\n\nmodule.exports.identity = function(out) {\n    out[0] = 0\n    out[1] = 0\n    out[2] = 0\n    out[3] = 1\n    return out\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-mat4/lib/quat.js\n ** module id = 40\n ** module chunks = 0\n **/","\n/**\n * Module dependencies.\n */\n\nvar now = require('date-now');\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = now() - timestamp;\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/debounce/index.js\n ** module id = 41\n ** module chunks = 0\n **/","module.exports = Date.now || now\n\nfunction now() {\n    return new Date().getTime()\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/debounce/~/date-now/index.js\n ** module id = 42\n ** module chunks = 0\n **/","var css = require('dom-css')\nvar stringify = require('./lib/stringify')\nvar compose = require('css-mat4')\nvar isArray = require('an-array')\nvar identity = require('gl-mat4/identity')\n\nvar tmpMat4 = identity([])\n\nmodule.exports = function(element, value) {\n    //is a flat array or matrix components\n    if (value && typeof value === 'object') {\n        //convert to flat array\n        value = isArray(value) \n            ? value \n            : compose(tmpMat4, value)\n        //stringify\n        value = stringify(value)\n    } \n\n    //default to identity/none\n    if (!value)\n        value = 'none'\n    css(element, 'transform', value)\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dom-css-transform/index.js\n ** module id = 43\n ** module chunks = 0\n **/","var scratch = new Array(6)\nfor (var i=0; i<6; i++)\n    scratch[i] = 0\n\nmodule.exports = function stringifyMat2d(matrix) {\n    if (!matrix)\n        return 'none'\n\n    for (var i=0; i<6; i++)\n        scratch[i] = Math.round(matrix[i]*1e15) / 1e15\n    return 'matrix('+Array.prototype.join.call(scratch, ', ')+')'\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dom-css-transform/lib/mat2d-stringify.js\n ** module id = 44\n ** module chunks = 0\n **/","var mat2d = require('./mat2d-stringify')\nvar mat4 = require('mat4-css-stringify')\n\nmodule.exports = function(matrix) {\n    var len = matrix && matrix.length\n    if (len === 16)\n        return mat4(matrix)\n    else if (len === 6)\n        return mat2d(matrix)\n    return 'none'\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dom-css-transform/lib/stringify.js\n ** module id = 45\n ** module chunks = 0\n **/","var prefix = require('prefix-style')\nvar toCamelCase = require('to-camel-case')\nvar cache = { 'float': 'cssFloat' }\n\nvar suffixMap = {}\n;['top','right','bottom','left',\n    'width','height','fontSize',\n    'paddingLeft','paddingRight',\n    'paddingTop','paddingBottom',\n    'marginLeft','marginRight',\n    'marginTop','marginBottom',\n    'padding','margin','perspective'\n].forEach(function(prop) {\n    suffixMap[prop] = 'px'\n})\n\nfunction style(element, property, value) {\n    var camel = cache[property]\n    if (typeof camel === 'undefined')\n        camel = detect(property)\n\n    //may be false if CSS prop is unsupported\n    if (camel) {\n        if (value === undefined)\n            return element.style[camel]\n\n        if (typeof value === 'number')\n            value = value + (suffixMap[camel]||'')\n        element.style[camel] = value\n    }\n}\n\nfunction each(element, properties) {\n    for (var k in properties) {\n        if (properties.hasOwnProperty(k)) {\n            style(element, k, properties[k])\n        }\n    }\n}\n\nfunction detect(cssProp) {\n    var camel = toCamelCase(cssProp)\n    var result = prefix(camel)\n    cache[camel] = cache[cssProp] = cache[result] = result\n    return result\n}\n\nfunction set() {\n    if (arguments.length === 2) {\n        each(arguments[0], arguments[1])\n    } else\n        style(arguments[0], arguments[1], arguments[2])\n}\n\nmodule.exports = set\nmodule.exports.set = set\n\nmodule.exports.get = function(element, properties) {\n    if (Array.isArray(properties))\n        return properties.reduce(function(obj, prop) {\n            obj[prop] = style(element, prop||'')\n            return obj\n        }, {})\n    else\n        return style(element, properties||'')\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dom-css-transform/~/dom-css/index.js\n ** module id = 46\n ** module chunks = 0\n **/","var elem = null\n\n//https://gist.github.com/paulirish/523692\nmodule.exports = function prefix(prop) {\n    var prefixes = ['Moz', 'Khtml', 'Webkit', 'O', 'ms'],\n        upper = prop.charAt(0).toUpperCase() + prop.slice(1)\n    \n    if (!elem)\n        elem = document.createElement('div')\n\n    if (prop in elem.style)\n        return prop\n\n    for (var len = prefixes.length; len--;) {\n        if ((prefixes[len] + upper) in elem.style)\n            return (prefixes[len] + upper)\n    }\n    return false\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dom-css-transform/~/prefix-style/index.js\n ** module id = 47\n ** module chunks = 0\n **/","module.exports = fromRotationTranslation;\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nfunction fromRotationTranslation(out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-mat4/fromRotationTranslation.js\n ** module id = 52\n ** module chunks = 0\n **/","module.exports = multiply;\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-mat4/multiply.js\n ** module id = 53\n ** module chunks = 0\n **/","module.exports = scale;\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nfunction scale(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-mat4/scale.js\n ** module id = 54\n ** module chunks = 0\n **/","module.exports = {\n\tparent: function() {\n\t\t// if the current function calling is the constructor\n\t\tif( this.parent.caller.$$isConstructor ) {\n\t\t\tvar parentFunction = this.parent.caller.$$parentConstructor;\n\t\t} else {\n\t\t\tif( this.parent.caller.$$name ) {\n\t\t\t\tvar callerName = this.parent.caller.$$name;\n\t\t\t\tvar isGetter = this.parent.caller.$$owner.$$getters[ callerName ];\n\t\t\t\tvar isSetter = this.parent.caller.$$owner.$$setters[ callerName ];\n\n\t\t\t\tif( arguments.length == 1 && isSetter ) {\n\t\t\t\t\tvar parentFunction = Object.getPrototypeOf( this.parent.caller.$$owner ).$$setters[ callerName ];\n\n\t\t\t\t\tif( parentFunction === undefined ) {\n\t\t\t\t\t\tthrow 'No setter defined in parent';\n\t\t\t\t\t}\n\t\t\t\t} else if( arguments.length == 0 && isGetter ) {\n\t\t\t\t\tvar parentFunction = Object.getPrototypeOf( this.parent.caller.$$owner ).$$getters[ callerName ];\n\n\t\t\t\t\tif( parentFunction === undefined ) {\n\t\t\t\t\t\tthrow 'No getter defined in parent';\n\t\t\t\t\t}\n\t\t\t\t} else if( isSetter || isGetter ) {\n\t\t\t\t\tthrow 'Incorrect amount of arguments sent to getter or setter';\n\t\t\t\t} else {\n\t\t\t\t\tvar parentFunction = Object.getPrototypeOf( this.parent.caller.$$owner )[ callerName ];\t\n\n    \t\t\t\tif( parentFunction === undefined ) {\n\t\t\t\t\t\tthrow 'No parent function defined for ' + callerName;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow 'You cannot call parent here';\n\t\t\t}\n\t\t}\n\n\t\treturn parentFunction.apply( this, arguments );\n\t}\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/js-oop/js/baseClass.js\n ** module id = 55\n ** module chunks = 0\n **/","var scratch = new Array(16)\nfor (var i=0; i<16; i++)\n    scratch[i] = 0\n\nmodule.exports = function stringify(matrix) {\n   for (var i=0; i<16; i++) \n      scratch[i] = Math.round(matrix[i]*1e15) / 1e15\n   return 'matrix3d('+scratch.join(', ')+')'\n}\n\n// benchmark:\n// http://jsperf.com/stringify-mat4\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mat4-css-stringify/index.js\n ** module id = 56\n ** module chunks = 0\n **/","var div = null\nvar prefixes = [ 'Webkit', 'Moz', 'O', 'ms' ]\n\nmodule.exports = function prefixStyle (prop) {\n  // re-use a dummy div\n  if (!div) {\n    div = document.createElement('div')\n  }\n\n  var style = div.style\n\n  // prop exists without prefix\n  if (prop in style) {\n    return prop\n  }\n\n  // borderRadius -> BorderRadius\n  var titleCase = prop.charAt(0).toUpperCase() + prop.slice(1)\n\n  // find the vendor-prefixed prop\n  for (var i = prefixes.length; i >= 0; i--) {\n    var name = prefixes[i] + titleCase\n    // e.g. WebkitBorderRadius or webkitBorderRadius\n    if (name in style) {\n      return name\n    }\n  }\n\n  return false\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/prefix-style/index.js\n ** module id = 57\n ** module chunks = 0\n **/","module.exports = require('./lib/Preloader');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/preloader/index.js\n ** module id = 58\n ** module chunks = 0\n **/","/**\r\n * This module will contain everything related to preloading.\r\n * \r\n * @module preloader\r\n */\r\n\r\n/**\r\n * LoaderCache is a cache where everything loaded with a LoaderBase where cache is true is saved for \r\n * use later.\r\n *\r\n * For instace if a LoaderImage loads an image the Image is saved in LoaderCache for later use.\r\n * \r\n * @type {Object}\r\n */\r\nvar LoaderCache = {\r\n\r\n\t/**\r\n\t * The data object contains all saved data. Where they key of the object is the url and the value\r\n\t * is the data cached.\r\n\t * \r\n\t * @param data\r\n\t * @type {Object}\r\n\t */\r\n\tdata: {},\r\n\r\n\t/**\r\n\t * The get method will access the data object and grab the cached data for that url. Undefined will\r\n\t * be returned if nothing is saved in the cache for that url.\r\n\t * \r\n\t * @method get\r\n\t * @param  {String} url This is the url for querying the cached value\r\n\t * @return {Object} Data was cached or undefined if no data was cached for the url\r\n\t */\r\n\tget: function( url ) {\r\n\r\n\t\treturn this.data[ url ];\r\n\t},\r\n\r\n\t/**\r\n\t * Call this function to check if there is cached content for the url passed in.\r\n\t * \r\n\t * @method hasFile\r\n\t * @param  {String} url This is the url for querying the cached value\r\n\t * @return {Boolean} The return value will be true if the LoaderCache has a file and false if it doesn't\r\n\t */\r\n\thasFile: function( url ) {\r\n\r\n\t\treturn this.data[ url ] !== undefined;\r\n\t},\r\n\r\n\t/**\r\n\t * Use this function to add an item to the cache. \r\n\t * \r\n\t * @param {String} url This is the url to the cached item\r\n\t * @param {Object} data The data for the cached item at the url passed in\r\n\t */\r\n\tadd: function( url, data ) {\r\n\r\n\t\treturn this.data[ url ] = data; \r\n\t},\r\n\r\n\t/**\r\n\t * Use this function to remove an item from the cache\r\n\t * \r\n\t * @param  {String} url This is the url to the cached item to remove\r\n\t * @return {Boolean} True will be returned if an item was removed from the cache and false if it wasnt\r\n\t */\r\n\tremove: function( url ) {\r\n\r\n\t\tvar hadItem = data[ url ] !== undefined;\r\n\r\n\t\tthis.data[ url ] = undefined;\r\n\r\n\t\treturn hadItem;\r\n\t}\r\n};\r\n\r\nmodule.exports = LoaderCache;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/preloader/lib/LoaderCache.js\n ** module id = 59\n ** module chunks = 0\n **/","/**\r\n * This module will contain everything related to preloading.\r\n * \r\n * @module preloader\r\n */\r\nvar Class = require('js-oop');\r\nvar LoaderBase = require('./LoaderBase');\r\nvar UtilArrayBuffer = require('./util/UtilArrayBuffer');\r\nvar UtilHTTP = require('./util/UtilHTTP');\r\nvar FileMeta = require('./FileMeta');\r\n\r\n/**\r\n * LoaderImage will load in images. If XHR exists in the browser attempting to load image\r\n * then XHR will be used otherwise LoaderImage will use Image instead to load the Image.\r\n * \r\n * @class LoaderImage\r\n * @constructor\r\n * @extends {LoaderBase}\r\n */\r\nvar LoaderImage = new Class( {\r\n\r\n\tExtends: LoaderBase,\r\n\r\n\tinitialize: function() {\r\n\r\n\t\tthis._imageLoaded = false;\r\n\r\n\t\tthis.parent();\r\n\t\tthis.loadType = LoaderBase.typeArraybuffer;\r\n\t},\r\n\r\n\tload: function( url, cacheID ) {\r\n\r\n\t\t//first we check if we can load with XHR period\r\n\t\t//second check that we can load using the method we'd like to which is ArrayBuffer\r\n\t\t//third we check that we have all the functions to turn an ArrayBuffer to a DataURI\r\n\t\tif( this.canLoadUsingXHR() && \r\n\t\t\tthis.canLoadType( this.loadType ) && \r\n\t\t\tArrayBuffer && ( window.URL || window.webkitURL || FileReader ) ) {\r\n\r\n\t\t\tthis.parent( url, cacheID );\r\n\t\t//if the above checks dont validate we'll fall back and just use the Image object to preload\r\n\t\t} else {\r\n\r\n\t\t\tthis._createAndLoadImage( url );\r\n\t\t}\r\n\t},\r\n\r\n\t_dispatchProgress: function( progress ) {\r\n\r\n\t\tif( this._imageLoaded ) \r\n\t\t\tthis.onProgress.dispatch( progress );\r\n\t\telse \r\n\t\t\tthis.onProgress.dispatch( progress * 0.9999 );\r\n\t},\r\n\r\n\t_dispatchComplete: function() {\r\n\r\n\t\tif( this._imageLoaded ) \r\n\t\t\tthis.onComplete.dispatch();\r\n\t},\r\n\r\n\t_onImageLoadComplete: function() {\r\n\r\n\t\tthis._imageLoaded = true;\r\n\t\tthis._dispatchProgress( 1 );\r\n\t\tthis._dispatchComplete();\r\n\t},\r\n\r\n\t_onImageLoadFail: function() {\r\n\r\n\t\tthis._dispatchError( 'Image failed to load' );\r\n\t},\r\n\r\n\t_parseContent: function() {\r\n\r\n\t\tvar arrayBuffer = null;\r\n\t\tvar blobData = null;\r\n\r\n\r\n\r\n\t\tif( !this.fileMeta ) {\r\n\r\n\t\t\tthis.fileMeta = new FileMeta();\r\n\t\t}\r\n\r\n\t\t//if the loadType was not set then the meta will be incorrect possibly\r\n\t\t//so we'll read it from the url\r\n\t\tif( !this.loadTypeSet || this.fileMeta.mime === null ) {\r\n\r\n\t\t\tthis.fileMeta.mime = UtilHTTP.getMimeFromURL( this.url );\t\r\n\t\t}\r\n\r\n\t\t//get the ArrayBuffer\r\n\t\tif( this.xhr.response instanceof ArrayBuffer ) {\r\n\r\n\t\t\tarrayBuffer = this.xhr.response;\r\n\t\t//if theres a property mozResponseArrayBuffer  use that\r\n\t\t} else if( this.xhr.mozResponseArrayBuffer ) {\r\n\r\n\t\t\tarrayBuffer = this.xhr.mozResponseArrayBuffer;\r\n\t\t//otherwise try converting the string to an ArrayBuffer\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'Return type for image load unsupported' );\r\n\t\t}\r\n\r\n\t\tblobData = new Blob( [ arrayBuffer ], { type: this.fileMeta.mime } );\t\t\r\n\r\n\r\n\t\t//We'll convert the blob to an Image using FileReader if it exists\r\n\t\tif( window.URL || window.webkitURL ) {\r\n\r\n\t\t\tthis._createAndLoadImage( ( window.URL || window.webkitURL ).createObjectURL( blobData ) );\r\n\t\t} else if( FileReader ) {\r\n\r\n\t\t\tvar reader = new FileReader();\r\n\r\n\t\t\treader.onloadend = function() {\r\n\r\n\t\t\t\tif( window.URL || window.webkitURL ) {\r\n\r\n\t\t\t\t\t( window.URL || window.webkitURL ).revokeObjectURL( blobData );\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis._createAndLoadImage( reader.result );\r\n\t\t\t}.bind( this );\r\n\r\n\t\t\treader.readAsDataURL( blobData );\r\n\t\t}\r\n\t},\r\n\r\n\t_createAndLoadImage: function( src ) {\r\n\r\n\t\tthis.content = new Image();\r\n\t\tthis.content.onload = this._onImageLoadComplete.bind( this );\r\n\t\tthis.content.onerror = this._onImageLoadFail.bind( this );\r\n\t\tthis.content.src = src;\r\n\t}\r\n});\r\n\r\nmodule.exports = LoaderImage;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/preloader/lib/LoaderImage.js\n ** module id = 60\n ** module chunks = 0\n **/","/**\r\n * This module will contain everything related to preloading.\r\n * \r\n * @module preloader\r\n */\r\nvar Class = require('js-oop');\r\nvar LoaderBase = require('./LoaderBase');\r\n\r\n/**\r\n * LoaderJSON will load a JSON file and parse it's content. The content property will contain an Object\r\n * representation of the JSON data.\r\n * \r\n * @class LoaderJSON\r\n * @constructor\r\n * @extends {LoaderBase}\r\n */\r\nvar LoaderJSON = new Class( {\r\n\r\n\tExtends: LoaderBase,\r\n\r\n\tinitialize: function() {\r\n\r\n\t\tthis.parent();\r\n\t\tthis.loadType = LoaderBase.typeJSON;\r\n\t}\r\n});\r\n\r\nmodule.exports = LoaderJSON;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/preloader/lib/LoaderJSON.js\n ** module id = 61\n ** module chunks = 0\n **/","/**\r\n * This module will contain everything related to preloading.\r\n * \r\n * @module preloader\r\n */\r\nvar Class = require('js-oop');\r\nvar LoaderBase = require('./LoaderBase');\r\n\r\n/**\r\n * LoaderText will load a file and the content saved in this Loader will be a String.\r\n * \r\n * @class LoaderText\r\n * @constructor\r\n * @extends {LoaderBase}\r\n */\r\nvar LoaderText = new Class( {\r\n\r\n\tExtends: LoaderBase,\r\n\t\r\n\tinitialize: function() {\r\n\r\n\t\tthis.parent();\r\n\t\tthis.loadType = LoaderBase.typeText;\r\n\t}\r\n});\r\n\r\nmodule.exports = LoaderText;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/preloader/lib/LoaderText.js\n ** module id = 62\n ** module chunks = 0\n **/","/**\r\n * This module will contain everything related to preloading.\r\n * \r\n * @module preloader\r\n * \r\n */\r\n\r\nvar Class = require('js-oop');\r\nvar Signal = require('signals');\r\nvar UtilPath = require('./util/UtilPath');\r\nvar LoaderImage = require('./LoaderImage');\r\nvar LoaderText = require('./LoaderText');\r\nvar LoaderJSON = require('./LoaderJSON');\r\n\r\n/**\r\n*\r\n* Object defining which file extensions use which loaders\r\n*\r\n* @property LOADERS\r\n* @type {Object}\r\n*/\t\t  \t\r\n\r\nvar LOADERS = {\r\n\r\n\tpng: LoaderImage,\r\n\tjpg: LoaderImage,\r\n\tgif: LoaderImage,\r\n\tjson: LoaderJSON\r\n};\r\n\r\n\r\n/**\r\n*\r\n* Defines default loader\r\n*\r\n* @property LOADER_DEFAULT\r\n* @type {Function}\r\n*/\t\r\nvar LOADER_DEFAULT = LoaderText;\r\n\r\n/**\r\n*\r\n*  \r\n* @class Preloader\r\n* @constructor\r\n* @return {Object} Preloader Preloader object\r\n*/\r\n\r\nvar Preloader = new Class( {\r\n\r\n\t/**\r\n\t*\r\n\t* Called on instantiation, sets up properties of Preloader object\r\n\t*\r\n\t* @method initialize \r\n\t*\r\n\t*/\r\n\r\n\tinitialize: function() {\r\n\r\n\t\tthis.percTotal = 0;\r\n\t\tthis.loadIdx = 0;\r\n\t\tthis.urls = [];\r\n\t\tthis.modifiedURL = {};\r\n\t\tthis.loaders = {};\r\n\t\tthis.cacheID = {};\r\n\t\tthis.percentageOfLoad = {};\r\n\t\tthis.progress = 0;\r\n\r\n\t\t/**\r\n\t\t*\r\n\t\t* Sends updates on loading progress to other part of application (loading ui)\r\n\t\t*\r\n\t\t* @property onProgress \r\n\t\t* @type Object\r\n\t\t*/\r\n\t\tthis.onProgress = new Signal();\r\n\t\t\r\n\t\t/**\r\n\t\t*\r\n\t\t* Notifies loading completion to other part of application \r\n\t\t*\r\n\t\t* @property onComplete \r\n\t\t* @type Object\r\n\t\t*/\r\n\t\tthis.onComplete = new Signal();\r\n\t\tthis.urlLoading = null;\r\n\r\n\t\tthis._onLoadError = this._onLoadError.bind( this );\r\n\t\tthis._onLoadProgress = this._onLoadProgress.bind( this );\r\n\t\tthis._continueLoadQueue = this._continueLoadQueue.bind( this );\r\n\t},\r\n\r\n\r\n\t/**\r\n\t*\r\n\t* Generic asset loader function - determines loader to be used based on file-extension\r\n\t*\r\n\t* @method add \r\n\t* @param {String} url Base URL of asset\r\n\t* @param {Array} [modifiers] list of image pixel-densities to be made available \r\n\t* @param {Function} [modifierFunction] optional string manipulation util to format url based on modifiers argument (i.e. if strings, ['@1','@2'])\r\n\t*\r\n\t*/\r\n\tadd: function( url, modifiers, modifierFunction ) {\r\n\t\tif(url) {\r\n\t\t\tthis.addFromLoaderType( url, this._getLoader( url ), modifiers, modifierFunction );\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t*\r\n\t*Load image - uses the LoaderImage loader\r\n\t*\r\n\t* @method addImage \r\n\t* @param {String} url Base URL of asset\r\n\t* @param {Array} [modifiers] list of image pixel-densities to be made available \r\n\t* @param {Function} [modifierFunction] string manipulation util to format url based on modifiers argument (i.e. if strings, ['@1','@2'])\r\n\t*\r\n\t*/\r\n\taddImage: function( url, modifiers, modifierFunction ) {\r\n\r\n\t\tthis.addFromLoaderType( url, LoaderImage, modifiers, modifierFunction );\r\n\t},\r\n\r\n\t/**\r\n\t*\r\n\t*Load JSON - uses the LoaderJSON loader\r\n\t*\r\n\t* @method addJSON \r\n\t* @param {String} url Base URL of asset\r\n\t* @param {Array} [modifiers] list of image pixel-densities to be made available \r\n\t* @param {Function} [modifierFunction] string manipulation util to format url based on modifiers argument (i.e. if strings, ['@1','@2'])\r\n\t*\r\n\t*/\r\n\taddJSON: function( url, modifiers, modifierFunction ) {\r\n\r\n\t\tthis.addFromLoaderType( url, LoaderJSON, modifiers, modifierFunction );\r\n\t},\r\n\r\n\t/**\r\n\t*\r\n\t*Load text- uses the LoaderText loader\r\n\t*\r\n\t* @method addText \r\n\t* @param {String} url Base URL of asset\r\n\t* @param {Array} [modifiers] list of image pixel-densities to be made available \r\n\t* @param {Function} [modifierFunction] string manipulation util to format url based on modifiers argument (i.e. if strings, ['@1','@2'])\r\n\t*\r\n\t*/\r\n\taddText: function( url, modifiers, modifierFunction ) {\r\n\r\n\t\tthis.addFromLoaderType( url, LoaderText, modifiers, modifierFunction );\r\n\t},\r\n\r\n\t/**\r\n\t*\r\n\t* Load asset using custom loader\r\n\t*\r\n\t* @method addFromLoaderType \r\n\t* @param {String} url Base URL of asset\r\n\t* @param {Function} loaderType Custom loader function\r\n\t* @param {Array} [modifiers] list of image pixel-densities to be made available \r\n\t* @param {Function} [modifierFunction] string manipulation util to format url based on modifiers argument (i.e. if strings, ['@1','@2'])\r\n\t*\r\n\t*/\r\n\taddFromLoaderType: function( url, loaderType, modifiers, modifierFunction ) {\r\n\r\n\t\tif(!this.loaders[ url ]) {\r\n\t\t\tthis.loaders[ url ] = new loaderType();\r\n\t\t\tthis._setupURL( url, modifiers, modifierFunction );\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t*\r\n\t* Sets ID for asset in the cache for future retrieval\r\n\t*\r\n\t* @method setCacheID \r\n\t* @param {String} url Base URL of asset\r\n\t* @param {String} cacheID New identifier of asset to be used in cache\r\n\t*\r\n\t*/\r\n\tsetCacheID: function( url, cacheID ) {\r\n\r\n\t\tthis.cacheID[ url ] = cacheID;\r\n\t},\r\n\r\n\t/**\r\n\t*\r\n\t* Sets percentage of total load for a given asset\r\n\t*\r\n\t* @method setPercentage \r\n\t* @param {String} url Base URL of asset\r\n\t* @param {Number} percentageOfLoad Number <= 1 representing percentage of total load\r\n\t*\r\n\t*/\r\n\tsetPercentage: function( url, percentageOfLoad ) {\r\n\r\n\t\tthis.percentageOfLoad[ url ] = percentageOfLoad;\r\n\t},\r\n\r\n\t/**\r\n\t*\r\n\t* Begins loading process\r\n\t*\r\n\t* @method load \r\n\t*\r\n\t*/\r\n\tload: function() {\r\n\r\n\t\tif( this.urlLoading === null ) {\r\n\r\n\t\t\tthis._setupPercentages();\r\n\t\t\tthis._continueLoadQueue();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t*\r\n\t* Stops loading process\r\n\t*\r\n\t* @method stopLoad \r\n\t*\r\n\t*/\r\n\tstopLoad: function() {\r\n\r\n\t\tif( this.urlLoading !== null ) {\r\n\r\n\t\t\tfor( var i = 0, len = this.urls.length; i < len; i++ ) {\r\n\r\n\t\t\t\tthis.loaders[ this.urls[ i ] ].stopLoad();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t*\r\n\t* Retrieves loaded asset from loader \r\n\t*\r\n\t* @method getContent \r\n\t* @param {String} url Base URL of asset\r\n\t* @return asset instance\r\n\t*/\r\n\tgetContent: function( url ) {\r\n\r\n\t\treturn this.loaders[ url ] && this.loaders[ url ].content;\r\n\t},\r\n\r\n\t/**\r\n\t*\r\n\t* Stores base url, modifies it given the various pixel-density modifiers and stores the modified version as well\r\n\t*\r\n\t* @method _setupURL \r\n\t* @param {String} url Base URL of asset\r\n\t* @param {Array} [modifiers] list of image pixel-densities to be made available \r\n\t* @param {Function} [modifierFunction] string manipulation util to format url based on modifiers argument (i.e. if strings, ['@1','@2'])\r\n\t*/\r\n\t_setupURL: function( url, modifiers, modifierFunction ) {\r\n\r\n\t\tthis.urls.push( url );\r\n\t\t\r\n\t\t//if we have a modifier function use it\r\n\t\tif( modifierFunction ) {\r\n\r\n\t\t\tthis.modifiedURL[ url ] = modifierFunction( url, modifiers );\r\n\t\t//if we don't have a modifier function but we have modifiers use those instead (expect it to be dpi)\r\n\t\t} else if( modifiers ) {\r\n\r\n\t\t\tthis.modifiedURL[ url ] = UtilPath.getURLForDensity( url, modifiers );\r\n\t\t} else {\r\n\r\n\t\t\tthis.modifiedURL[ url ] = url;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t*\r\n\t* Loops through stated percentages of all assets and standardizes them\r\n\t*\r\n\t* @method _setupPercentages \r\n\t*/\r\n\t_setupPercentages: function() {\r\n\r\n\t\tvar percTotal = 0;\r\n\t\tvar percScale = 1;\r\n\t\tvar numWPerc = 0;\r\n\t\tvar numWOPerc = 0;\r\n\t\tvar oneFilePerc = 1 / this.urls.length;\r\n\r\n\t\tfor( var i = 0, len = this.urls.length; i < len; i++ ) {\r\n\r\n\t\t\tif( this.percentageOfLoad[ this.urls[ i ] ] ) {\r\n\r\n\t\t\t\tpercTotal += this.percentageOfLoad[ this.urls[ i ] ];\r\n\t\t\t\tnumWPerc++;\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnumWOPerc++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( numWOPerc > 0 ) {\r\n\r\n\t\t\tif( percTotal > 1 ) {\r\n\r\n\t\t\t\tpercScale = 1 / percTotal;\t\r\n\t\t\t\tpercTotal *= percScale;\r\n\t\t\t}\r\n\r\n\t\t\tvar percRemaining = 1 - percTotal;\r\n\t\t\toneFilePerc = ( 1 - percTotal ) / numWOPerc;\r\n\r\n\t\t\tfor( var i = 0, len = this.urls.length; i < len; i++ ) {\r\n\r\n\t\t\t\tif( this.percentageOfLoad[ this.urls[ i ] ] ) {\r\n\r\n\t\t\t\t\tthis.percentageOfLoad[ this.urls[ i ] ] *= percScale;\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.percentageOfLoad[ this.urls[ i ] ] = oneFilePerc;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t*\r\n\t* With every call, assets are successively loaded  and percentLoaded is updated\r\n\t*\r\n\t* @method _continueLoadQueue \r\n\t*/\r\n\t_continueLoadQueue: function() {\r\n\r\n\t\tif( this.loadIdx < this.urls.length ) {\r\n\r\n\t\t\t//if we've just finished loading a file\r\n\t\t\tif( this.urlLoading !== null ) {\r\n\r\n\t\t\t\tthis.percTotal += this.percentageOfLoad[ this.urlLoading ];\r\n\t\t\t}\r\n\r\n\t\t\tthis.urlLoading = this.urls[ this.loadIdx ];\r\n\t\t\tvar loader = this.loaders[ this.urlLoading ];\r\n\t\t\tvar cacheID = this.cacheID[ this.urlLoading ];\r\n\r\n\t\t\tthis.loadIdx++;\r\n\t\t\tloader.onProgress.add( this._onLoadProgress );\r\n\t\t\tloader.onError.addOnce( this._onLoadError );\r\n\t\t\tloader.onComplete.addOnce( this._continueLoadQueue );\r\n\t\t\tloader.load( this.modifiedURL[ this.urlLoading ], cacheID );\r\n\t\t} else {\r\n\r\n\t\t\tthis.onComplete.dispatch();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t*\r\n\t* Logs error, updates progress, and continues the load\r\n\t*\t\r\n\t*\r\n\t* @method _onLoadError \r\n\t* @param {String} error Error message/type\r\n\t*/\r\n\t_onLoadError: function( error ) {\r\n\r\n\t\tconsole.warn( 'Couldn\\'t load ' + this.urlLoading + ' received the error: ' + error );\r\n\r\n\t\tvar curPerc = this.percentageOfLoad[ this.urlLoading ];\r\n\r\n\t\tthis.onProgress.dispatch( this.percTotal + curPerc, this.urlLoading );\t\r\n\r\n\t\tthis._continueLoadQueue();\r\n\t},\r\n\r\n\t/**\r\n\t*\r\n\t* Calculates progress of currently loading asset and dispatches total load progress\r\n\t*\t\r\n\t*\r\n\t* @method _onLoadProgress \r\n\t* @param {Number} progress Progress of currently loading asset\r\n\t*/\r\n\t_onLoadProgress: function( progress ) {\r\n\r\n\t\tvar curPerc = this.percentageOfLoad[ this.urlLoading ] * progress;\r\n\r\n\t\tthis.onProgress.dispatch( this.percTotal + curPerc, this.urlLoading );\r\n\t},\r\n\r\n\t/**\r\n\t*\r\n\t* Retrieves the appropriate loader util given the asset file-type \r\n\t*\t\r\n\t*\r\n\t* @method _getLoader \r\n\t* @param {String} url Base URL of asset\r\n\t@return {Function} Chosen loader util function based on filetype/extension\r\n\t*/\r\n\t_getLoader: function( url ) {\r\n\r\n\t\tvar regexExtention = /\\.(\\w+)$/;\r\n\t\tvar extensionValue = regexExtention.exec( url );\r\n\t\tvar extension = extensionValue && extensionValue[ 1 ];\r\n\t\tvar loader = null;\r\n\r\n\t\tif( extension ) {\r\n\r\n\t\t\textension = extension.toLowerCase();\r\n\r\n\t\t\tloader = LOADERS[ extension ];\r\n\t\t}\r\n\t\t \r\n\t\tif( !loader ) {\r\n\r\n\t\t\tloader = LOADER_DEFAULT;\r\n\t\t}\r\n\r\n\t\treturn loader;\r\n\t}\r\n});\r\n\r\nmodule.exports = Preloader;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/preloader/lib/Preloader.js\n ** module id = 63\n ** module chunks = 0\n **/","\n/**\n * Expose `toNoCase`.\n */\n\nmodule.exports = toNoCase;\n\n\n/**\n * Test whether a string is camel-case.\n */\n\nvar hasSpace = /\\s/;\nvar hasCamel = /[a-z][A-Z]/;\nvar hasSeparator = /[\\W_]/;\n\n\n/**\n * Remove any starting case from a `string`, like camel or snake, but keep\n * spaces and punctuation that may be important otherwise.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toNoCase (string) {\n  if (hasSpace.test(string)) return string.toLowerCase();\n\n  if (hasSeparator.test(string)) string = unseparate(string);\n  if (hasCamel.test(string)) string = uncamelize(string);\n  return string.toLowerCase();\n}\n\n\n/**\n * Separator splitter.\n */\n\nvar separatorSplitter = /[\\W_]+(.|$)/g;\n\n\n/**\n * Un-separate a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction unseparate (string) {\n  return string.replace(separatorSplitter, function (m, next) {\n    return next ? ' ' + next : '';\n  });\n}\n\n\n/**\n * Camelcase splitter.\n */\n\nvar camelSplitter = /(.)([A-Z]+)/g;\n\n\n/**\n * Un-camelcase a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction uncamelize (string) {\n  return string.replace(camelSplitter, function (m, previous, uppers) {\n    return previous + ' ' + uppers.toLowerCase().split('').join(' ');\n  });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/to-no-case/index.js\n ** module id = 64\n ** module chunks = 0\n **/","\nvar clean = require('to-no-case');\n\n\n/**\n * Expose `toSpaceCase`.\n */\n\nmodule.exports = toSpaceCase;\n\n\n/**\n * Convert a `string` to space case.\n *\n * @param {String} string\n * @return {String}\n */\n\n\nfunction toSpaceCase (string) {\n  return clean(string).replace(/[\\W_]+(.|$)/g, function (matches, match) {\n    return match ? ' ' + match : '';\n  });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/to-space-case/index.js\n ** module id = 65\n ** module chunks = 0\n **/","module.exports = \"<div id=app><section-preloader v-if=!isHidden></section-preloader><section-about></section-about><router-view class=component-sections v-if=isLoaded></router-view><div v-el:background class=component-background v-show=isLoaded></div></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n ** module id = 66\n ** module chunks = 0\n **/","module.exports = \"<div class=section-about><aside v-el:content class=content v-show=isOpen transition=section-about-content><div v-el:background class=background></div><div v-el=container class=container><a v-el:close-button @click=close class=close-button v-show=isOpen transition=section-about-close-button>Close <span class=line></span></a></div></aside><a v-el:open-button v-show=!isOpen class=open-button @click=open transition=section-about-open-button><span class=line></span> About</a></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/display/sections/About.vue\n ** module id = 67\n ** module chunks = 0\n **/","module.exports = \"<section class=section-preloader><div v-el:loading class=loading><div v-el:loading-progress class=loading-progress></div></div><div v-el:background-top class=background-top></div><div v-el:background-bottom class=background-bottom></div></section>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/display/sections/Preloader.vue\n ** module id = 68\n ** module chunks = 0\n **/","module.exports = \"<section class=section-project></section>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/display/sections/Project.vue\n ** module id = 69\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js!stylus-loader?sourceMap!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_script__ = require(\"-!babel!eslint!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"/Users/jmsaulnier/Documents/_Pro/Project/Github/jmsaulnier/jmsaulnier.github.com/src/App.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, __vue_template__)\n  }\n})()}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/App.vue\n ** module id = 70\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!stylus-loader?sourceMap!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./About.vue\")\n__vue_script__ = require(\"-!babel!eslint!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./About.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./About.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"/Users/jmsaulnier/Documents/_Pro/Project/Github/jmsaulnier/jmsaulnier.github.com/src/display/sections/About.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, __vue_template__)\n  }\n})()}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/display/sections/About.vue\n ** module id = 71\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!stylus-loader?sourceMap!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Preloader.vue\")\n__vue_script__ = require(\"-!babel!eslint!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Preloader.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Preloader.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"/Users/jmsaulnier/Documents/_Pro/Project/Github/jmsaulnier/jmsaulnier.github.com/src/display/sections/Preloader.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, __vue_template__)\n  }\n})()}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/display/sections/Preloader.vue\n ** module id = 72\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!stylus-loader?sourceMap!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Project.vue\")\n__vue_script__ = require(\"-!babel!eslint!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Project.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Project.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"/Users/jmsaulnier/Documents/_Pro/Project/Github/jmsaulnier/jmsaulnier.github.com/src/display/sections/Project.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, __vue_template__)\n  }\n})()}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/display/sections/Project.vue\n ** module id = 73\n ** module chunks = 0\n **/","/*!\n * vue-router v0.7.9\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      return params[this.name] || \":\" + this.name;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      return params[this.name] || \":\" + this.name;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return decodeURIComponent(part);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path) {\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        queryParams = this.parseQueryString(queryString);\n      }\n\n      path = decodeURI(path);\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  RouteRecognizer.VERSION = '0.1.9';\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn(msg) {\n    /* istanbul ignore next */\n    if (window.console) {\n      console.warn('[vue-router] ' + msg);\n      if (!exports$1.Vue || exports$1.Vue.config.debug) {\n        console.warn(new Error('warning stack trace:').stack);\n      }\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root) {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = decodeURI(location.pathname + location.search);\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '');\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(decodeURI(path.replace(/^#!?/, '') + query));\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      // fix 1.0.0-alpha.3 compat\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // handle keep-alive.\n      // cache the child view on the kept-alive child vm.\n      if (view.keepAlive && view.childVM && view.childView) {\n        view.childVM._keepAliveRouterView = view.childView;\n      }\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, insert, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        insert();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function (data, onError) {\n      // merge data from multiple data hooks\n      if (Array.isArray(data) && data._needMerge) {\n        data = data.reduce(function (res, obj) {\n          if (isPlainObject(obj)) {\n            Object.keys(obj).forEach(function (key) {\n              res[key] = obj[key];\n            });\n          }\n          return res;\n        }, Object.create(null));\n      }\n      // handle promise sugar syntax\n      var promises = [];\n      if (isPlainObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          var val = data[key];\n          if (isPromise(val)) {\n            promises.push(val.then(function (resolvedVal) {\n              component.$set(key, resolvedVal);\n            }));\n          } else {\n            component.$set(key, val);\n          }\n        });\n      }\n      if (!promises.length) {\n        component.$loadingRouteData = false;\n        component.$emit('route-data-loaded', component);\n        cb && cb();\n      } else {\n        promises[0].constructor.all(promises).then(function (_) {\n          component.$loadingRouteData = false;\n          component.$emit('route-data-loaded', component);\n          cb && cb();\n        }, onError);\n      }\n    }, {\n      cleanup: cleanup,\n      expectData: true\n    });\n  }\n\n  function isPlainObject(obj) {\n    return Object.prototype.toString.call(obj) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} expectData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$expectData = _ref.expectData;\n      var expectData = _ref$expectData === undefined ? false : _ref$expectData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        // cleanup indicates an after-activation hook,\n        // so instead of aborting we just let the transition\n        // finish.\n        cleanup ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next(data) {\n        if (nextCalled) {\n          warn('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb(data, onError);\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      // handle boolean/promise return values\n      var resIsPromise = isPromise(res);\n      if (expectBoolean) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (resIsPromise) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onError);\n        } else if (!hook.length) {\n          next(res);\n        }\n      } else if (resIsPromise) {\n        res.then(next, onError);\n      } else if (expectData && isPlainOjbect(res) || !hook.length) {\n        next(res);\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        (function () {\n          var res = [];\n          res._needMerge = true;\n          var onError = undefined;\n          _this.runQueue(hooks, function (hook, _, next) {\n            if (!_this.aborted) {\n              _this.callHook(hook, context, function (r, onError) {\n                if (r) res.push(r);\n                onError = onError;\n                next();\n              }, options);\n            }\n          }, function () {\n            cb(res, onError);\n          });\n        })();\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    this.router = router;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed) {\n        if (this.$router) {\n          this.$router._children.$remove(this);\n        }\n        destroy.apply(this, arguments);\n      }\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    Vue.directive('link-active', {\n      priority: 1001,\n      bind: function bind() {\n        this.el.__v_link_active = true;\n      }\n    });\n\n    Vue.directive('link', {\n      priority: 1000,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.el.addEventListener('click', _bind(this.onClick, this));\n        // check if active classes should be applied to a different element\n        this.activeEl = this.el;\n        var parent = this.el.parentNode;\n        while (parent) {\n          if (parent.__v_link_active) {\n            this.activeEl = parent;\n            break;\n          }\n          parent = parent.parentNode;\n        }\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            this.router.go({\n              path: el.pathname,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router._stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router._stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        this.updateClasses(route.path);\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path) {\n        var el = this.activeEl;\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass !== activeClass) {\n          removeClass(el, this.prevActiveClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            addClass(el, activeClass);\n          } else {\n            removeClass(el, activeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            addClass(el, activeClass);\n          } else {\n            removeClass(el, activeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // feature detection\n      this._hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n      this._history = this._hasPushState && history;\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      var self = this;\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          self._match(path, state, anchor);\n        }\n      });\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this._stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this2 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this2;\n          _this2.app = new _this2._appConstructor({\n            el: _this2._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this2._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this2._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype._stringifyPath = function _stringifyPath(path) {\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          if (path.query) {\n            params.queryParams = path.query;\n          }\n          return this._recognizer.generate(path.name, params);\n        } else if (path.path) {\n          var fullPath = path.path;\n          if (path.query) {\n            var query = this._recognizer.generateQueryString(path.query);\n            if (fullPath.indexOf('?') > -1) {\n              fullPath += '&' + query.slice(1);\n            } else {\n              fullPath += query;\n            }\n          }\n          return fullPath;\n        } else {\n          return '';\n        }\n      } else {\n        return path ? path + '' : '';\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 74\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  onInit: function onInit(state) {\n    // TODO\n  },\n  onMutation: function onMutation(mutation, state) {\n    // TODO\n  }\n};\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vuex/lib/middlewares/devtool.js\n ** module id = 75\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createLogger;\n// Credits: borrowed code from fcomb/redux-logger\n\nfunction createLogger() {\n  var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  var _ref$collapsed = _ref.collapsed;\n  var collapsed = _ref$collapsed === undefined ? true : _ref$collapsed;\n  var _ref$transformer = _ref.transformer;\n  var transformer = _ref$transformer === undefined ? function (state) {\n    return state;\n  } : _ref$transformer;\n  var _ref$mutationTransfor = _ref.mutationTransformer;\n  var mutationTransformer = _ref$mutationTransfor === undefined ? function (mut) {\n    return mut;\n  } : _ref$mutationTransfor;\n\n  return {\n    snapshot: true,\n    onMutation: function onMutation(mutation, nextState, prevState) {\n      if (typeof console === 'undefined') {\n        return;\n      }\n      var time = new Date();\n      var formattedTime = ' @ ' + pad(time.getHours(), 2) + ':' + pad(time.getMinutes(), 2) + ':' + pad(time.getSeconds(), 2) + '.' + pad(time.getMilliseconds(), 3);\n      var formattedMutation = mutationTransformer(mutation);\n      var message = 'mutation ' + mutation.type + formattedTime;\n      var startMessage = collapsed ? console.groupCollapsed : console.group;\n\n      // render\n      try {\n        startMessage.call(console, message);\n      } catch (e) {\n        console.log(message);\n      }\n\n      console.log('%c prev state', 'color: #9E9E9E; font-weight: bold', prevState);\n      console.log('%c mutation', 'color: #03A9F4; font-weight: bold', formattedMutation);\n      console.log('%c next state', 'color: #4CAF50; font-weight: bold', nextState);\n\n      try {\n        console.groupEnd();\n      } catch (e) {\n        console.log('—— log end ——');\n      }\n    }\n  };\n}\n\nfunction repeat(str, times) {\n  return new Array(times + 1).join(str);\n}\n\nfunction pad(num, maxLength) {\n  return repeat('0', maxLength - num.toString().length) + num;\n}\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vuex/lib/middlewares/logger.js\n ** module id = 76\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAction = createAction;\nexports.mergeObjects = mergeObjects;\nexports.deepClone = deepClone;\n\nfunction _typeof(obj) { return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }\n\n/**\n * Create a actual callable action function.\n *\n * @param {String|Function} action\n * @param {Vuex} store\n * @return {Function} [description]\n */\n\nfunction createAction(action, store) {\n  if (typeof action === 'string') {\n    // simple action string shorthand\n    return function () {\n      for (var _len = arguments.length, payload = Array(_len), _key = 0; _key < _len; _key++) {\n        payload[_key] = arguments[_key];\n      }\n\n      return store.dispatch.apply(store, [action].concat(payload));\n    };\n  } else if (typeof action === 'function') {\n    // normal action\n    return function () {\n      for (var _len2 = arguments.length, payload = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        payload[_key2] = arguments[_key2];\n      }\n\n      return action.apply(undefined, [store].concat(payload));\n    };\n  }\n}\n\n/**\n * Merge an array of objects into one.\n *\n * @param {Array<Object>} arr\n * @param {Boolean} allowDuplicate\n * @return {Object}\n */\n\nfunction mergeObjects(arr, allowDuplicate) {\n  return arr.reduce(function (prev, obj) {\n    Object.keys(obj).forEach(function (key) {\n      var existing = prev[key];\n      if (existing) {\n        // allow multiple mutation objects to contain duplicate\n        // handlers for the same mutation type\n        if (allowDuplicate) {\n          if (Array.isArray(existing)) {\n            existing.push(obj[key]);\n          } else {\n            prev[key] = [prev[key], obj[key]];\n          }\n        } else {\n          console.warn('[vuex] Duplicate action: ' + key);\n        }\n      } else {\n        prev[key] = obj[key];\n      }\n    });\n    return prev;\n  }, {});\n}\n\n/**\n * Deep clone an object. Faster than JSON.parse(JSON.stringify()).\n *\n * @param {*} obj\n * @return {*}\n */\n\nfunction deepClone(obj) {\n  if (Array.isArray(obj)) {\n    return obj.map(deepClone);\n  } else if (obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {\n    var cloned = {};\n    var keys = Object.keys(obj);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      cloned[key] = deepClone(obj[key]);\n    }\n    return cloned;\n  } else {\n    return obj;\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vuex/lib/util.js\n ** module id = 77\n ** module chunks = 0\n **/"],"sourceRoot":""}